6400                          ORG $6400
6400                  CODESTART
6400  10CE6407                LDS #STACK
6404  7E6F7B                  JMP CODESTART2
6407                  STACK
rzb 256
6507                  STACKEND
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                               DUFF'S DEVICE                                 *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      
                              ; This is a special device that should transform the memory movement into
                              ; an optimized one. This is done by using some tricks and automodification
                              ; assembly code.
                      
6507                  DUFFDEVICE
                      
                              ; First of all, we avoid to do anything if the memory to copy is equal
                              ; to zero. It means that nothing is needed to do, so move to the end
                              ; of the routine.
                      
6507  10830000                CMPD #0
650B  1027008B                LBEQ DUFFDEVICEDONE
                      
                              ; Then, we disable, at startup, the 16 byte copy loop, by assigning
                              ; a couple of "NOP" (opcode $12) at the place of the branching.
                      
650F  CE1212                  LDU #$1212
6512  FF657F                  STU DUFFDEVICEL0C
                      
                              ; And we enable, at startup, the 16 byte copy loop, by assigning
                              ; a "BRA with offset 0" at the place of the branching.
                      
6515  CE2000                  LDU #$2000
6518  FF6550                  STU DUFFDEVICEL0
                      
                              ; So, we must manage the fact that the size is odd: in this case,
                              ; the first byte will be copied directly. This is done by dividing
                              ; the size by 2 and taking apart the carry bit.
                      
651B  44                      LSRA
651C  56                      RORB
                      
                              ; CARRY CLEAR (BCC) -> Size was even
                              ; CARRY SET   (BCS) -> Size was odd
                      
651D  2410                    BCC DUFFDEVICELX
                      
                              ; The size was odd, so copy the first byte and move ahead
                              ; source (Y) and destination (X) address.
                      
651F  3406                    PSHS D
6521  A6A0                    LDA ,Y +
6523  A780                    STA ,X +
6525  3506                    PULS D
                      
                              ; Again, we avoid to do anything if the memory to copy is equal
                              ; to zero. It means that nothing is needed to do more, so move 
                              ; to the end of the routine.
                      
6527  10830000                CMPD #0
652B  1027006B                LBEQ DUFFDEVICEDONE
                      
                              ; We reach this point having the original size halved. So now we
                              ; have to "unroll" the copy. Unrolling is a process that try to
                              ; transform a "generic" size copy in a "modulus" size copy.
                              ; We use a modulus of 16 bytes (using a 2 byte register for 8 times).
                              ; If the size is multiple of 16 bytes, the process is complete as
                              ; described. Otherwise, we are going to calculate the "rest" 
                              ; (modulus) of the copy. In order to make the process efficient, 
                              ; we will first calculate the remaining part (the "modulus", in fact) 
                              ; and then we will proceed to copy the rest as quickly as possible,
                              ;  which will be a multiple of 16 bytes,
                      
652F                  DUFFDEVICELX
                      
                              ; Let's put up some numbers (we consider only even sizes):
                              ;
                              ; - (original) size:  2    (16 byte) blocks: 0     (rest) block size:  2 bytes
                              ; - "             ":  4    "              ": 0     "               ":  4 bytes
                              ; - "             ":  6    "              ": 0     "               ":  6 bytes
                              ; - "             ":  8    "              ": 0     "               ":  8 bytes
                              ; - "             ": 10    "              ": 0     "               ": 10 bytes
                              ; - "             ": 12    "              ": 0     "               ": 12 bytes
                              ; - "             ": 14    "              ": 0     "               ": 14 bytes
                              ; - "             ": 16    "              ": 1     "               ":  0 bytes
                              ; - "             ": 18    "              ": 1     "               ":  2 bytes
                              ; - ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...
                              ; - ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...
                              ; - ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...
                              ;
                              ; In D register we have the original size (divided by 2). So we have to 
                              ; calculate, first of all, the size of the rest block size.
                              ;
                              ; RBS = ( 2 * D ) MOD 16 = ( 2 * D ) MOD ( 2 * 8 ) = D MOD 8 = B AND #$7
                              
                              ; So we save the (halved) size to copy.
                      
652F  3406                    PSHS D
                      
                              ; and calculate the block size.
                      
6531  C407                    ANDB #7
6533  58                      LSLB
                      
                              ; If it is zero, it means that no (rest) block size has to be managed.
                      
6534  2718                    BEQ DUFFDEVICELXNR
                      
                              ; Othewise, we have to replace the standard block size (16 bytes) with
                              ; the rest block size. This is done by automodification technique.
                      
6536  F76574                  STB DUFFDEVICEL0A + 2
6539  F76577                  STB DUFFDEVICEL0B + 2
                      
                              ; Moreover, we must replace the subtraction terms for the loop counter.
                              ; Again, this is done by automodification technique. Note that the
                              ; loop counter thinks in terms of "2 bytes" so we must store the
                              ; half of the block size.
                      
653C  54                      LSRB
653D  F7657A                  STB DUFFDEVICEL0D + 2
                      
                              ; Finally, we must calculate the address (offset) of the first command 
                              ; needed to copy the memory from source to destination. In order to 
                              ; understand which is the offset, we must take in count of this
                              ; numbers:
                              ;
                              ; - (original) size:  2    (rest) block size:  2 bytes  offset:     28
                              ; - "             ":  4    "               ":  4 bytes              24
                              ; - "             ":  6    "               ":  6 bytes              20
                              ; - "             ":  8    "               ":  8 bytes              16
                              ; - "             ": 10    "               ": 10 bytes              12
                              ; - "             ": 12    "               ": 12 bytes              08
                              ; - "             ": 14    "               ": 14 bytes              04
                              ;
                              ; 00: LDU 14, Y
                              ; 02: STU 14, X
                              ; 04: LDU 12, Y
                              ; 06: STU 12, X
                              ; .....
                              ; 24: LDU 2, Y
                              ; 26: STU 2, X
                              ; 28: LDU , Y
                              ; 30: STU , X
                              ;
                              ; The formula is 32 - 4 * ( rest block size / 2 ) = 32 - 4 * B
                      
6540  8604                    LDA #4
6542  3D                      MUL
6543  F7659B                  STB DUFFDELTA
6546  C620                    LDB #32
6548  F0659B                  SUBB DUFFDELTA
654B  F76551                  STB DUFFDEVICEL0+1
                      
                              ; If we reach this point, nothing has to be customized since the
                              ; memory to copy is multiple of 16 bytes.
                      
654E                  DUFFDEVICELXNR
                      
                              ; Restore the (halved) size to copy.
                      
654E  3506                    PULS D
                      
                              ; Move to the first command of the unrolled loop.
                              ; This address could be different if (rest) block size.
                      
6550                  DUFFDEVICEL0
6550  2000                    BRA DUFFDEVICEL1
                      
                              ; This is the unrolled loop to copy 16 bytes at each round.
                              ; If the memory to copy is not multiple of 16 bytes, the
                              ; first time we will jump "inside" the loop, in order to copy
                              ; only a part of the block (< 16 bytes).
                      
6552                  DUFFDEVICEL1
6552  EE2E                    LDU 14,Y 
6554  EF0E                    STU 14,X 
6556  EE2C                    LDU 12,Y 
6558  EF0C                    STU 12,X 
655A  EE2A                    LDU 10,Y 
655C  EF0A                    STU 10,X 
655E  EE28                    LDU 8,Y 
6560  EF08                    STU 8,X 
6562  EE26                    LDU 6,Y 
6564  EF06                    STU 6,X 
6566  EE24                    LDU 4,Y 
6568  EF04                    STU 4,X 
656A  EE22                    LDU 2,Y 
656C  EF02                    STU 2,X 
656E  EEA4                    LDU ,Y 
6570  EF84                    STU ,X 
                      
                              ; Move the destination address ahead of the *actual*
                              ; block size. Normally it is 16 but not in the first
                              ; block copied, that is equal to the (rest) block size.
                      
6572                  DUFFDEVICEL0A
6572  308810                  LEAX 16,X 
                      
                              ; Move the source address ahead of the *actual*
                              ; block size. Normally it is 16 but not in the first
                              ; block copied, that is equal to the (rest) block size.
                      
6575                  DUFFDEVICEL0B
6575  31A810                  LEAY 16,Y
                      
                              ; Decrement the counter of the size of the block. Normally
                              ; it is 8 (2x8 = 16 bytes) but it could be lesser in case
                              ; of the first loop for a movement that is not multiple
                              ; of 16 bytes.
                      
6578                  DUFFDEVICEL0D
6578  830008                  SUBD #$8
                      
                              ; Finally, if D <= 0 we can exit the copy process.
                              ; Actually, we could just check for D = 0 but I am not
                              ; sure that the algorithm is corrected.
                      
657B  2B1D                    BMI DUFFDEVICEDONE
657D  271B                    BEQ DUFFDEVICEDONE
                      
                              ; We can reach this point in two different moments: 
                              ; on the first run of the loop, or the n-th one.
                              ; If this is the first time we reach this label,
                              ; the BRA DUFFDEVICEL1 has been replaced by NOP NOP:
                              ; this means that the execution will continue to the
                              ; following istructions. Otherwise, this will move
                              ; to the next round.
                      
657F                  DUFFDEVICEL0C
657F  20D1                    BRA DUFFDEVICEL1
                      
                              ; If we reached this line, we have copied the very
                              ; first block, that could be smaller than 16 bytes.
                              ; At this point, we must replace the block size 
                              ; with the standard block size (16 bytes)
                              ; This is done by automodification technique.
                              
6581  3406                    PSHS D
                      
                              ; Replace the displacement for each loop.
                      
6583  C610                    LDB #16
6585  F76574                  STB DUFFDEVICEL0A+2
6588  F76577                  STB DUFFDEVICEL0B+2
                      
                              ; Replace the decrement for each loop.
                      
658B  C608                    LDB #8
658D  F7657A                  STB DUFFDEVICEL0D+2
                      
                              ; Replace the NOPs with a jump to the first
                              ; instruction of the unrolled loop.
                      
6590  CC20D1                  LDD #$20D1
6593  FD657F                  STD DUFFDEVICEL0C
                      
6596  3506                    PULS D
                      
                              ; Finally, jump to the first instruction
                              ; of the unrolled loop.
                      
6598  20B8                    BRA DUFFDEVICEL1
                      
659A                  DUFFDEVICEDONE
659A  39                      RTS
                      
659B                  DUFFDELTA
659B  00                      FCB $0
659C                  BANKLOAD
659C  FF                      fcb $ff
659D  FF                      fcb $ff
659E  FF                      fcb $ff
659F  FF                      fcb $ff
65A0  FF                      fcb $ff
65A1  FF                      fcb $ff
65A2  FF                      fcb $ff
65A3  FF                      fcb $ff
65A4  FF                      fcb $ff
65A5  FF                      fcb $ff
65A6  FF                      fcb $ff
65A7  FF                      fcb $ff
65A8  FF                      fcb $ff
65A9  FF                      fcb $ff
65AA  FF                      fcb $ff
65AB  FF                      fcb $ff
65AC  FF                      fcb $ff
65AD  FF                      fcb $ff
65AE  FF                      fcb $ff
65AF  FF                      fcb $ff
65B0  FF                      fcb $ff
65B1  FF                      fcb $ff
65B2  FF                      fcb $ff
65B3  FF                      fcb $ff
65B4  FF                      fcb $ff
65B5  FF                      fcb $ff
65B6  FF                      fcb $ff
65B7  FF                      fcb $ff
65B8  FF                      fcb $ff
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                       INTERNAL VARIABLES FOR EF936X HARDWARE                *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
004B                  PLOTDEST equ $4B ; $29
004D                  PLOTCDEST equ $4D ; $27
004F                  PLOTC2DEST equ $4F ; $25
65B9  0000            XGR    fdb 0
65BB  0000            YGR    fdb 0
65BD  FFFF            LINE   fcb $ff, $ff
65BF  0000            CLIPX1    fdb 0
65C1  0000            CLIPY1    fdb 0
                      ; peephole(12): inlined3
                      ;CLIPX2    fdb 319
                      ; peephole(12): inlined3
                      ;CLIPY2    fdb 199
65C3  0000            ORIGINX   fdb 0
65C5  0000            ORIGINY   fdb 0
65C7  0000            RESOLUTIONX   fdb 0
65C9  0000            RESOLUTIONY   fdb 0
                      ; peephole(6): unread2
                      ;LASTCOLOR fcb 0
                      ; peephole(12): inlined3
                      ;CURRENTWIDTH      fdb 320
                      ; peephole(12): inlined3
                      ;CURRENTHEIGHT      fdb 200
                      ; peephole(6): unread2
                      ;CURRENTTILES        fcb 255
                      ; peephole(12): inlined3
                      ;CURRENTTILESWIDTH      fcb 40
                      ; peephole(12): inlined3
                      ;CURRENTTILESHEIGHT      fcb 25
                      ; peephole(12): inlined3
                      ;CURRENTFRAMESIZE   fdb 40*200
                      ; peephole(12): inlined3
                      ;CURRENTSL          fcb 40
                      ; peephole(6): unread2
                      ;FONTWIDTH       fcb 8
                      ; peephole(6): unread2
                      ;FONTHEIGHT      fcb 8
65CB  00              TILEMAPVISIBLE  fcb 0
65CC  00              DOUBLEBUFFERENABLED  fcb 0
65CD  00              XSCROLL fcb 0
65CE  00              YSCROLL fcb 0
65CF  00              XSCROLLPOS fcb 0
65D0  00              YSCROLLPOS fcb 0
0041                  IMAGEX EQU $41 ; $42
0043                  IMAGEY EQU $43 ; $44
0046                  IMAGEW EQU $46 ; $47
0048                  IMAGEH EQU $48
0049                  IMAGEH2 EQU $49
0050                  IMAGET EQU $50
0051                  IMAGEF EQU $51
0052                  IMAGEW2 EQU $52 ; $53
                      ; to avoid issue #443
0053                  IMAGEW2l EQU $53
0054                  IMAGEY2 EQU $54 ; $55
65D1  0000            BLITTMPPTR fdb $0
65D3  0000            BLITTMPPTR2 fdb $0
65D5  00              BLITS0 fcb $0
65D6  00              BLITS1 fcb $0
65D7  00              BLITS2 fcb $0
65D8  00              BLITR0 fcb $0
65D9  00              BLITR1 fcb $0
65DA  00              BLITR2 fcb $0
65DB  00              BLITR3 fcb $0
                      ; ------------------------------------------------------------------------------
                      ; BITMAP MODE 16 (MODE #3)
                      ; ------------------------------------------------------------------------------
65DC                  PLOTVBASE
65DC  000000280050007800A000C800F0011801400168         fdb $0000, $0028, $0050, $0078, $00A0, $00C8, $00F0, $0118, $0140, $0168
65F0  019001B801E0020802300258028002A802D002F8         fdb $0190, $01B8, $01E0, $0208, $0230, $0258, $0280, $02A8, $02D0, $02F8
6604  032003480370039803C003E80410043804600488         fdb $0320, $0348, $0370, $0398, $03C0, $03E8, $0410, $0438, $0460, $0488
6618  04B004D8050005280550057805A005C805F00618         fdb $04B0, $04D8, $0500, $0528, $0550, $0578, $05A0, $05C8, $05F0, $0618
662C  06400668069006B806E0070807300758078007A8         fdb $0640, $0668, $0690, $06B8, $06E0, $0708, $0730, $0758, $0780, $07A8
6640  07D007F8082008480870089808C008E809100938         fdb $07D0, $07F8, $0820, $0848, $0870, $0898, $08C0, $08E8, $0910, $0938
6654  0960098809B009D80A000A280A500A780AA00AC8         fdb $0960, $0988, $09B0, $09D8, $0A00, $0A28, $0A50, $0A78, $0AA0, $0AC8
6668  0AF00B180B400B680B900BB80BE00C080C300C58         fdb $0AF0, $0B18, $0B40, $0B68, $0B90, $0BB8, $0BE0, $0C08, $0C30, $0C58
667C  0C800CA80CD00CF80D200D480D700D980DC00DE8         fdb $0C80, $0CA8, $0CD0, $0CF8, $0D20, $0D48, $0D70, $0D98, $0DC0, $0DE8
6690  0E100E380E600E880EB00ED80F000F280F500F78         fdb $0E10, $0E38, $0E60, $0E88, $0EB0, $0ED8, $0F00, $0F28, $0F50, $0F78
66A4  0FA00FC80FF0101810401068109010B810E01108         fdb $0FA0, $0FC8, $0FF0, $1018, $1040, $1068, $1090, $10B8, $10E0, $1108
66B8  11301158118011A811D011F81220124812701298         fdb $1130, $1158, $1180, $11A8, $11D0, $11F8, $1220, $1248, $1270, $1298
66CC  12C012E8131013381360138813B013D814001428         fdb $12C0, $12E8, $1310, $1338, $1360, $1388, $13B0, $13D8, $1400, $1428
66E0  1450147814A014C814F0151815401568159015B8         fdb $1450, $1478, $14A0, $14C8, $14F0, $1518, $1540, $1568, $1590, $15B8
66F4  15E0160816301658168016A816D016F817201748         fdb $15E0, $1608, $1630, $1658, $1680, $16A8, $16D0, $16F8, $1720, $1748
6708  1770179817C017E8181018381860188818B018D8         fdb $1770, $1798, $17C0, $17E8, $1810, $1838, $1860, $1888, $18B0, $18D8
671C  190019281950197819A019C819F01A181A401A68         fdb $1900, $1928, $1950, $1978, $19A0, $19C8, $19F0, $1A18, $1A40, $1A68
6730  1A901AB81AE01B081B301B581B801BA81BD01BF8         fdb $1A90, $1AB8, $1AE0, $1B08, $1B30, $1B58, $1B80, $1BA8, $1BD0, $1BF8
6744  1C201C481C701C981CC01CE81D101D381D601D88         fdb $1C20, $1C48, $1C70, $1C98, $1CC0, $1CE8, $1D10, $1D38, $1D60, $1D88
6758  1DB01DD81E001E281E501E781EA01EC81EF01F18         fdb $1DB0, $1DD8, $1E00, $1E28, $1E50, $1E78, $1EA0, $1EC8, $1EF0, $1F18
                              
                      ;       (x1,y1)  w (chars) / wb (bytes)
                      ;       +----------------+
                      ;  sa ->|*               | h (chars) / hb (bytes)
                      ;       |                |
                      ;       +----------------+ (x2, y2)
                      ;
676C  FF              CONSOLEID     fcb $ff       ; <-- actual
                      ;
                      ; Text mode
                      ;
676D  00              CONSOLEX1     fcb 0         ; <-- input from program (chars)
676E  00              CONSOLEY1     fcb 0         ; <-- input from program (chars)
676F  1F              CONSOLEX2     fcb 31        ; <-- recalculated (chars)
6770  0F              CONSOLEY2     fcb 15        ; <-- recalculated (chars)
6771  20              CONSOLEW      fcb 32        ; <-- calculated (chars)
6772  10              CONSOLEH      fcb 16        ; <-- calculated (chars)
                      ;
                      ; Graphic mode
                      ;
6773  0000            CONSOLESA     fdb 0         ; <-- calculated (address)
6775  20              CONSOLEWB     fcb 32        ; <-- calculated (bytes)
6776  10              CONSOLEHB     fcb 16        ; <-- calculated (bytes)
                      ;
6777  0000000000000000000000000000000000000000000000000000000000000000 CONSOLES      rzb 4*8        ; <-- storage for virtual consoles
6797  0000000000000000 CONSOLES2     rzb 4*2        ; <-- storage for memorize / remember on console
679F                  CONSOLECALCULATE
679F  B66772                  LDA CONSOLEH
67A2  B76776                  STA CONSOLEHB
67A5  786776                  ASL CONSOLEHB
67A8  786776                  ASL CONSOLEHB
67AB  786776                  ASL CONSOLEHB
67AE  B66771                  LDA CONSOLEW
67B1  B76775                  STA CONSOLEWB
67B4  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
67B7  2719                    BEQ CONSOLECALCULATE0
67B9  8101                    CMPA #1
67BB  2715                    BEQ CONSOLECALCULATE1
67BD  8102                    CMPA #2
67BF  2711                    BEQ CONSOLECALCULATE2
67C1  8103                    CMPA #3
67C3  2704                    BEQ CONSOLECALCULATE3
67C5  8104                    CMPA #4
67C7  2709                    BEQ CONSOLECALCULATE4
67C9                  CONSOLECALCULATE3
67C9  786775                  ASL CONSOLEWB
67CC  786775                  ASL CONSOLEWB
67CF  786775                  ASL CONSOLEWB
67D2                  CONSOLECALCULATE0
67D2                  CONSOLECALCULATE1
67D2                  CONSOLECALCULATE2
67D2                  CONSOLECALCULATE4
67D2  39                      RTS
                      ;-----------------------------------------------------------------------------
                      ; BITMAP MODE
                      ;-----------------------------------------------------------------------------
67D3                  TEXTATCALCPOS
67D3  3426                    PSHS D,Y
67D5  B66F85                  LDA CURRENTMODE
67D8  8103                    CMPA #3
67DA  2739                    BEQ TEXTATCALCPOS3
67DC  BE6F81                  LDX BITMAPADDRESS
67DF  1CFE                    ANDCC #$FE
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
67E1  4F                      CLRA
67E2  D617                    LDB <MATHPTR3
67E4  58                      LSLB
67E5  49                      ROLA
67E6  58                      LSLB
67E7  49                      ROLA
67E8  58                      LSLB
67E9  49                      ROLA
67EA  58                      LSLB
67EB  49                      ROLA
67EC  58                      LSLB
67ED  49                      ROLA
67EE  58                      LSLB
67EF  49                      ROLA
67F0  58                      LSLB
67F1  49                      ROLA
67F2  58                      LSLB
67F3  49                      ROLA
67F4  1F02                    TFR D,Y 
67F6  1CFE                    ANDCC #$FE
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
67F8  4F                      CLRA
67F9  D617                    LDB <MATHPTR3
67FB  58                      LSLB
67FC  49                      ROLA
67FD  58                      LSLB
67FE  49                      ROLA
67FF  58                      LSLB
6800  49                      ROLA
6801  58                      LSLB
6802  49                      ROLA
6803  58                      LSLB
6804  49                      ROLA
6805  58                      LSLB
6806  49                      ROLA
6807  31AB                    LEAY D,Y 
6809  1F20                    TFR Y, D
680B  308B                    LEAX D,X 
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
680D  4F                      CLRA
680E  D616                    LDB <MATHPTR2
6810  308B                    LEAX D,X 
6812  3526                    PULS D,Y
6814  39                      RTS
6815                  TEXTATCALCPOS3
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
6815  4F                      CLRA
6816  D617                    LDB <MATHPTR3
6818  58                      LSLB
6819  49                      ROLA
681A  58                      LSLB
681B  49                      ROLA
681C  58                      LSLB
681D  49                      ROLA
681E  58                      LSLB
681F  49                      ROLA
6820  C365DC                  ADDD #PLOTVBASE
6823  1F01                    TFR D,X 
6825  EC84                    LDD ,X 
6827  F36F81                  ADDD BITMAPADDRESS
682A  1F01                    TFR D,X 
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
682C  4F                      CLRA
682D  D616                    LDB <MATHPTR2
682F  58                      LSLB
6830  49                      ROLA
6831  3085                    LEAX B,X 
6833  3526                    PULS D,Y
6835  39                      RTS
0001                  TEXTPTR equ $01
0003                  TEXTSIZE equ $03
0004                  TABSTODRAW equ $04
0008                  SCREENCODE equ $08
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                          STARTUP ROUTINE ON EF936X                          *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
6836                  CPUMEMMOVE
6836  11830000                CMPU #0
683A  270C                    BEQ CPUMEMMOVEDONE
683C                  CPUMEMMOVEL1
683C  A6A0                    LDA ,Y+
683E  A780                    STA ,X+
6840  335F                    LEAU -1,U
6842  11830000                CMPU #$0
6846  26F4                    BNE CPUMEMMOVEL1
6848                  CPUMEMMOVEDONE
6848  39                      RTS
                              
6849                  EF936XSTARTUP
6849  CED70E                  LDU #COMMONPALETTE
684C  108EE7DA                LDY #(BASE_SEGMENT+$DA)
6850  8E0010                  LDX #16
                              ; LDA #0
                              ; STA 1,Y
6853  7FE7DB                  CLR (BASE_SEGMENT+$DB)
6856                  EF936XSTARTUPL1
6856  3706                    PULU D
6858  E7A4                    STB ,Y
685A  A7A4                    STA ,Y
685C  301F                    LEAX -1,X
685E  26F6                    BNE EF936XSTARTUPL1
6860  39                      RTS
                              ; ===========[ VERTICAL BLANK ]===========
                              ; ==   Wait for vertical blank routine  ==
                              ; ==    (possibily at) given scanline   ==
                              ; ========================================
6861                  WAITVBLSCANLINE
                              ; Save registers.
6861  3406                    PSHS D
                              ; Check if scanline counter is ready
                              ; Scanline counter is ready if the conditional
                              ; branch to wait for entering drawing area is
                              ; a BNE branch.
                              
6863  B668C5                  LDA WAITVBL0
6866  8126                    CMPA #$26
6868  2722                    BEQ WAITVBLSCANLINESKIP
                              ; Set the scanline counter
686A  864F                    LDA #$4F
686C  B768D5                  STA WAITVBLSCREENWAITL1
686F  CCC3FF                  LDD #$C3FF
6872  FD68D6                  STD WAITVBLSCREENWAITL1+1
6875  CCFF10                  LDD #$FF10
6878  FD68D8                  STD WAITVBLSCREENWAITL1+3
687B  CC8300                  LDD #$8300
687E  FD68DA                  STD WAITVBLSCREENWAITL1+5
6881  CC0027                  LDD #$0027
6884  FD68DC                  STD WAITVBLSCREENWAITL1+7
                              ; Update the conditional branch to unconditional,
                              ; since to wait for a specific scanline we must
                              ; be sure to count from the beginning of the
                              ; drawing area.
6887  8626                    LDA #$26
6889  B768C5                  STA WAITVBL0
688C                  WAITVBLSCANLINESKIP
                              ; Retrieve the parameter from B register.
688C  3506                    PULS D
                              
                              ; Actually, each scan line at 50 Hz lasts
                              ; 64 μs. Each cycle on Motorola 6809 at 1 Mhz
                              ; lasts 1 μs. So we must wait 64 cycles for
                              ; each scanline requested. The counter routine
                              ; lasts 64 cycles. 
                              ;
                              ; D = 1 -> t = 12 cycles
                              ; D = 2 -> t = 64 cycles
                              ; D = 3 -> t = 54 cycles
688E  7E68BE                  JMP WAITVBL
                              ; ENTRY POINT
6891                  WAITVBLSCREEN
                              ; Save registers.
6891  3406                    PSHS D
                              ; Check if screen counter is ready
                              ; Screen counter is ready if the conditional
                              ; branch to wait for entering drawing area is
                              ; a BRN branch
6893  B668C5                  LDA WAITVBL0
6896  8126                    CMPA #$26
6898  2622                    BNE WAITVBLSCREENSKIP
                              ; Reset the screen counter
689A  8612                    LDA #$12
689C  FD68D5                  STD WAITVBLSCREENWAITL1
689F  CC1212                  LDD #$1212
68A2  FD68D6                  STD WAITVBLSCREENWAITL1+1
68A5  CC1212                  LDD #$1212
68A8  FD68D8                  STD WAITVBLSCREENWAITL1+3
68AB  CC1212                  LDD #$1212
68AE  FD68DA                  STD WAITVBLSCREENWAITL1+5
68B1  CC1221                  LDD #$1221
68B4  FD68DC                  STD WAITVBLSCREENWAITL1+7
68B7  8621                    LDA #$21
68B9  B768C5                  STA WAITVBL0
                              
68BC                  WAITVBLSCREENSKIP
68BC  3506                    PULS D
                              ; Wait for ending of screen generation.
68BE                  WAITVBL
                              ; Let's disable interrupts.
68BE  1A50                    ORCC #$50
                              ; First of all, we check if we are 
                              ; inside a drawing area.
68C0  B6E7E7                  LDA BASE_SEGMENT+$E7
68C3  8480                    ANDA #$80
                              ; CASE SCREEN (jump = BRN // BEQ)
                              ;   let's wait for the next drawing area
                              ;   if we are outside the drawing area.
                              ; CASE SCANLINE (jump = BNE // BEQ)
                              ;   let's wait anyway for the next drawing area.
68C5                  WAITVBL0
68C5  2124                    BRN WAITVBLSCREENINSIDE
68C7  2729                    BEQ WAITVBLSCREENOUTSIDE
                              ; Busy loop to wait - 
                              ; while we are inside the drawing area.
68C9                  WAITVBLSCREENWAITL1X
                              ; CASE SCREEN
                              ; We loose 30 μs but it is not very important.
                              ;
                              ; CASE SCANLINE
                              ; We entered this routine with a 9-12 μs delay.
                              ; So we must wait at most (64 - (9-12) ) = 55-42 μs
                              ; at the very first step. Since the first loop
                              ; will take 12 μs, we can wait 30 μs.
                              ;
                              ; PULS #0       ->  5 cycles
68C9  3500                    FCB $35, $00
                              ; PULS #0       ->  5 cycles
68CB  3500                    FCB $35, $00
                              ; PULS #0       ->  5 cycles
68CD  3500                    FCB $35, $00
                              ; PULS #0       ->  5 cycles
68CF  3500                    FCB $35, $00
                              ; PULS #0       ->  5 cycles
68D1  3500                    FCB $35, $00
                              ; PULS #0       ->  5 cycles
68D3  3500                    FCB $35, $00
68D5                  WAITVBLSCREENWAITL1
                              ; The "NOP area" is used to leave space
                              ; for actual counter routine. On wait for
                              ; vertical blank on an entire screen, the
                              ; routine is simple. On wait for a specific
                              ; scanline, the routine follows:
                              ;
                              ; CLRA                  ->  2 cycles
                              ; SUBD #-1              ->  4 cycles
                              ; CMPD #0               ->  5 cycles
                              ; BEQ exit loop         ->  3 cycles
                              ;                          -----------
                              ;                          14 cycles
                              ;
68D5  12                      NOP
68D6  12                      NOP
68D7  12                      NOP
68D8  12                      NOP
68D9  12                      NOP
68DA  12                      NOP
68DB  12                      NOP
68DC  12                      NOP
68DD  2109                    BRN WAITVBLSCREENWAITL1DONE
68DF  3500                    FCB $35, $00
                              ; PULS #0               ->  5 cycles
                              ; LDA (register)        ->  4 cycles
                              ; ANDA #$80             ->  2 cycles
                              ; BNE (loop)            ->  3 cycles
                              ;                          ---------
                              ;                          14 cycles
                              ;
68E1  B6E7E7                  LDA BASE_SEGMENT+$E7
68E4  8480                    ANDA #$80
68E6  26ED                    BNE WAITVBLSCREENWAITL1
68E8                  WAITVBLSCREENWAITL1DONE
                              ; We get out of drawing area, let's
                              ; enable again the interupt and
                              ; go ahead.
68E8  1CAF                    ANDCC #$AF
68EA  39                      RTS
68EB                  WAITVBLSCREENINSIDE
                              ; Busy loop to wait - 
                              ; we must wait for exiting the drawing area.
68EB                  WAITVBLSCREENWAITL3
68EB  B6E7E7                  LDA BASE_SEGMENT+$E7
68EE  8480                    ANDA #$80
68F0  26F9                    BNE WAITVBLSCREENWAITL3
68F2                  WAITVBLSCREENOUTSIDE
                              ; Busy loop to wait - 
                              ; we must wait for entering the drawing area.
68F2                  WAITVBLSCREENWAITL2
                              ; LDA (register)        ->  4 cycles
68F2  B6E7E7                  LDA BASE_SEGMENT+$E7
                              ; ANDA #$80             ->  2 cycles
68F5  8480                    ANDA #$80
                              ; BEQ (loop)            ->  3 cycles
68F7  27F9                    BEQ WAITVBLSCREENWAITL2
                              ; We entered the drawing area with a delay 
                              ; from 5 cycles (5 μs) to 9 cycles (9 μs).
                              ; To start the scanline detection will
                              ; take additional 3 cycles (3 μs), so
                              ; we will loose 8-12 μs.
                              ;
                              ; BRA (label)           ->  3 cycles
68F9  20CE                    BRA WAITVBLSCREENWAITL1X
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                      KEYBOARD MATRIX DETECTION ON THOMSON TO8               *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
68FB                  SCANCODECOUNTER     
68FB  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6903  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
690B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6913  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
691B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6923  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
692B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6933  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
693B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6943  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
694B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6953  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
695B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6963  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
696B  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
6973  0000000000000000         fcb $0, $0, $0, $0, $0, $0, $0, $0
697B                  KBDMANAGER
697B  3416                    PSHS X, D
697D  BDE809                  JSR $E809
6980  240F                    BCC KBDMANAGERDONE
6982  BDE806                  JSR $E806
6985  8E68FB                  LDX #SCANCODECOUNTER
6988  8610                    LDA #16
698A  C47F                    ANDB #$7F
698C  A785                    STA B,X 
698E  3516                    PULS X, D
6990  39                      RTS
6991                  KBDMANAGERDONE
6991  8E68FB                  LDX #SCANCODECOUNTER
6994  C67F                    LDB #$7F
6996                  KBDMANAGERDONEL1
6996  A685                    LDA B,X 
6998  2702                    BEQ KBDMANAGERDONEL2
699A  6A85                    DEC B,X 
699C                  KBDMANAGERDONEL2
699C  5A                      DECB
699D  26F7                    BNE KBDMANAGERDONEL1
699F  3516                    PULS X, D
69A1  39                      RTS
69A2                  KEYPRESSED
69A2  8E68FB                  LDX #SCANCODECOUNTER
69A5  847F                    ANDA #$7F
69A7  E686                    LDB A,X
69A9  39                      RTS
                              
69AA                  SCANCODE
69AA  BDE806                  JSR $E806
69AD  2403                    BCC SCANCODEDONE
69AF  86FF                    LDA #$FF
69B1  39                      RTS
69B2                  SCANCODEDONE
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
69B2  4F                      CLRA
69B3  39                      RTS
69B4                  INKEY
69B4  BD69AA                  JSR SCANCODE
69B7  39                      RTS
69B8                  WAITKEY
69B8  BD69AA                  JSR SCANCODE
69BB  81FF                    CMPA #$FF
69BD  26F9                    BNE WAITKEY
69BF  39                      RTS
69C0                  WAITKEYRELEASE
69C0  BD69B8                  JSR WAITKEY
69C3                  WAITKEYRELEASE2
69C3  BD69AA                  JSR SCANCODE
69C6  81FF                    CMPA #$FF
69C8  26F9                    BNE WAITKEYRELEASE2
69CA  39                      RTS
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http//www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo
                      ;  *
                      ;  * http//www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                      TEXT AT GIVEN POSITION ON EF936X                       *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
69CB                  TEXTATDECODE
69CB  811F                    CMPA #$1F
69CD  2205                    BHI TEXTATDECODEX1F
69CF  8620                    LDA #$20
69D1  7E69F0                  JMP TEXTATDECODE0
69D4                  TEXTATDECODEX1F
69D4  8140                    CMPA #$40
69D6  2403                    BHS TEXTATDECODEX39
                              ; SUBA #$40
69D8  7E69F0                  JMP TEXTATDECODE0
69DB                  TEXTATDECODEX39
69DB  815F                    CMPA #$5F
69DD  2203                    BHI TEXTATDECODEX5A
                              ; SUBA #$20
69DF  7E69F0                  JMP TEXTATDECODE0
69E2                  TEXTATDECODEX5A
69E2  817F                    CMPA #$7F
69E4  2205                    BHI TEXTATDECODEX7F
69E6  8060                    SUBA #$60
69E8  7E69F0                  JMP TEXTATDECODE0
69EB                  TEXTATDECODEX7F
69EB  8620                    LDA #$20
69ED  7E69F0                  JMP TEXTATDECODE0
69F0                  TEXTATDECODE0
69F0  9708                    STA <SCREENCODE
69F2  39                      RTS
69F3                  TEXTAT
69F3  9603                    LDA <TEXTSIZE
69F5  2601                    BNE TEXTATGO
69F7  39                      RTS
69F8                  TEXTATGO
                              ; Check if double buffering is active -- in case,
                              ; whe should use a different version.
69F8  B665CC                  LDA DOUBLEBUFFERENABLED
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
69FB  1027024D                LBEQ TEXTATGOORIG
                      ; ----------------------------------------------
                      ; Version active on double buffering ON
                      ; ----------------------------------------------
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
69FF                  TEXTATGODB
                              
                      ; peephole(12): inlined1
                      ;       LDY TEXTADDRESS
69FF  108E4000                LDY #$4000
6A01                  TEXTADDRESS equ *-2
6A03  109F41                  STY <COPYOFTEXTADDRESS
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
6A06  4F                      CLRA
6A07  9704                    STA <TABSTODRAW
6A09  109E01                  LDY <TEXTPTR
                      ;     LDA CURRENTMODE
                      ;     CMPA #0
                      ;     BNE TEXTATDB0X
                      ;     JMP TEXTATDB0
                      ; TEXTATDB0X
                      ;     CMPA #1
                      ;     BNE TEXTATDB1X
                      ;     JMP TEXTATDB1
                      ; TEXTATDB1X
                      ;     CMPA #2
                      ;     BNE TEXTATDB2X
                      ;     JMP TEXTATDB2
                      ; TEXTATDB2X
                      ;     CMPA #3
                      ;     BNE TEXTATDB3X
                      ;     JMP TEXTATDB3
                      ; TEXTATDB3X
                      ;     CMPA #4
                      ;     BNE TEXTATDB4X
                      ;     JMP TEXTATDB4
                      ; TEXTATDB4X
                      ;     RTS
                              
                      ; TEXTATDBBITMAPMODE
                      ; TEXTATDB0
                      ; TEXTATDB1
                      ; TEXTATDB2
                      ; TEXTATDB3
                      ; TEXTATDB4
6A0C  964D                    LDA <XCURSYS
6A0E  9716                    STA <MATHPTR2
6A10  964E                    LDA <YCURSYS
6A12  9717                    STA <MATHPTR3
6A14  BD67D3                  JSR TEXTATCALCPOS
6A17  3406                    PSHS D
6A19  1F10                    TFR X, D
6A1B  F36F81                  ADDD BITMAPADDRESS
6A1E  1F01                    TFR D,X 
6A20  3506                    PULS D
                              ; JMP TEXTATDBCOMMON
6A22                  TEXTATDBCOMMON
6A22  1CFE                    ANDCC #$FE
                      ; peephole(12): inlined1
                      ;       LDA _PEN
6A24  8601                    LDA #$01
6A25                  _PEN equ *-1
6A26  840F                    ANDA #$0F
6A28  48                      ASLA
6A29  48                      ASLA
6A2A  48                      ASLA
6A2B  48                      ASLA
6A2C  9719                    STA <MATHPTR5
6A2E  B6C16E                  LDA _PAPER
6A31  840F                    ANDA #$0F
6A33  9A19                    ORA <MATHPTR5
6A35  9719                    STA <MATHPTR5
6A37  D603                    LDB <TEXTSIZE
6A39  109E01                  LDY <TEXTPTR
6A3C                  TEXTATDBBMLOOP2
6A3C  9604                    LDA <TABSTODRAW
6A3E  2703                    BEQ TEXTATDBBMNSKIPTAB
6A40  7E6BCF                  JMP TEXTATDBBMSKIPTAB
6A43                  TEXTATDBBMNSKIPTAB
6A43  A6A4                    LDA ,Y
6A45  9708                    STA <SCREENCODE
6A47  5A                      DECB
6A48  8109                    CMPA #$09
6A4A  270D                    BEQ TEXTATDBBMTAB
6A4C  810E                    CMPA #14
6A4E  2203                    BHI TEXTATDBBMXCC
6A50  7E6A72                  JMP TEXTATDBBMCC
6A53                  TEXTATDBBMXCC
6A53  BD69CB                  JSR TEXTATDECODE
6A56  7E6B0E                  JMP TEXTATDBBMSP0
6A59                  TEXTATDBBMTAB
6A59  964D                    LDA <XCURSYS
6A5B                  TEXTATDBBMTAB2
6A5B  B16F86                  CMPA TABCOUNT
6A5E  2306                    BLS TEXTATDBBMTAB3
6A60  B06F86                  SUBA TABCOUNT
6A63  7E6A5B                  JMP TEXTATDBBMTAB2
6A66                  TEXTATDBBMTAB3
6A66  9710                    STA <TMPPTR
6A68  B66F86                  LDA TABCOUNT
6A6B  9010                    SUBA <TMPPTR
6A6D  9704                    STA <TABSTODRAW
6A6F  7E6C3F                  JMP TEXTATDBBMNEXT
6A72                  TEXTATDBBMCC
6A72  810D                    CMPA #13
6A74  2727                    BEQ TEXTATDBBMLF
6A76  810A                    CMPA #10
6A78  2723                    BEQ TEXTATDBBMLF
6A7A  8101                    CMPA #01
6A7C  2725                    BEQ TEXTATDBBMPEN
6A7E  8102                    CMPA #02
6A80  2731                    BEQ TEXTATDBBMPAPER
6A82  8103                    CMPA #03
6A84  2738                    BEQ TEXTATDBBMCMOVEPREPARE
6A86  8104                    CMPA #04
6A88  2710                    BEQ TEXTATDBBMXAT
6A8A  8105                    CMPA #05
6A8C  2703                    BEQ TEXTATDBBMCLS
6A8E  7E6C3F                  JMP TEXTATDBBMNEXT
6A91                  TEXTATDBBMCLS
6A91  3121                    LEAY 1,Y
6A93  5A                      DECB
6A94  BDA66F                  JSR CLS
6A97  7E6C3F                  JMP TEXTATDBBMNEXT
6A9A                  TEXTATDBBMXAT
6A9A  7E6AF2                  JMP TEXTATDBBMAT
6A9D                  TEXTATDBBMLF
6A9D  3121                    LEAY 1,Y
6A9F  5A                      DECB
                              ; LDA #0
                              ; STA <XCURSYS
                              ; INC <YCURSYS
                              ; LDA <XCURSYS
                              ; STA <MATHPTR2
                              ; LDA <YCURSYS
                              ; STA <MATHPTR3
                              ; JSR TEXTATCALCPOS
                              ; PSHS D
                              ; TFR X, D
                              ; ADDD BITMAPADDRESS
                              ; TFR D, X
                              ; PULS D
                              
6AA0  7E6BFE                  JMP TEXTATDBBMNEXT2
6AA3                  TEXTATDBBMPEN
6AA3  3121                    LEAY 1,Y
6AA5  5A                      DECB
6AA6  A6A4                    LDA ,Y 
6AA8  81FF                    CMPA #$FF
6AAA  2601                    BNE TEXTATDBBMPEN2
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$0
6AAC  4F                      CLRA
6AAD                  TEXTATDBBMPEN2
6AAD  B76A25                  STA _PEN
6AB0  7E6C3F                  JMP TEXTATDBBMNEXT
6AB3                  TEXTATDBBMPAPER
6AB3  3121                    LEAY 1,Y
6AB5  5A                      DECB
6AB6  A6A4                    LDA ,Y 
6AB8  B7C16E                  STA _PAPER
6ABB  7E6C3F                  JMP TEXTATDBBMNEXT
6ABE                  TEXTATDBBMCMOVEPREPARE
6ABE  3121                    LEAY 1,Y
6AC0  5A                      DECB
6AC1  A6A4                    LDA ,Y 
6AC3  974B                    STA <CLINEX
6AC5  3121                    LEAY 1,Y
6AC7  301F                    LEAX -1,X
6AC9  A6A4                    LDA ,Y 
6ACB  974C                    STA <CLINEY
6ACD                  TEXTATDBBMCMOVE
6ACD  964B                    LDA <CLINEX
6ACF  9B4D                    ADDA <XCURSYS
6AD1  974D                    STA <XCURSYS
6AD3  964C                    LDA <CLINEY
6AD5  9B4E                    ADDA <YCURSYS
6AD7  974E                    STA <YCURSYS
6AD9  964D                    LDA <XCURSYS
6ADB  9716                    STA <MATHPTR2
6ADD  964E                    LDA <YCURSYS
6ADF  9717                    STA <MATHPTR3
6AE1  BD67D3                  JSR TEXTATCALCPOS
6AE4  3406                    PSHS D
6AE6  1F10                    TFR X, D
6AE8  F36F81                  ADDD BITMAPADDRESS
6AEB  1F01                    TFR D,X 
6AED  3506                    PULS D
6AEF  7E6C3F                  JMP TEXTATDBBMNEXT
6AF2                  TEXTATDBBMAT
6AF2  3121                    LEAY 1,Y
6AF4  5A                      DECB
6AF5  A6A4                    LDA ,Y 
6AF7  904D                    SUBA <XCURSYS
6AF9  BB676D                  ADDA CONSOLEX1
6AFC  974B                    STA <CLINEX
6AFE  3121                    LEAY 1,Y
6B00  301F                    LEAX -1,X
6B02  A6A4                    LDA ,Y 
6B04  904E                    SUBA <YCURSYS
6B06  BB676E                  ADDA CONSOLEY1
6B09  974C                    STA <CLINEY
6B0B  7E6ACD                  JMP TEXTATDBBMCMOVE
6B0E                  TEXTATDBBMSP0
6B0E  3436                    PSHS D,Y,X
6B10  1A50                    ORCC #$50
6B12  CE0000                  LDU #0
6B15  108EC2A6                LDY #UDCCHAR
6B19  9608                    LDA <SCREENCODE
6B1B  C608                    LDB #8
6B1D  3D                      MUL
6B1E  31AB                    LEAY D,Y 
                      ;     LDA CURRENTMODE
                      ;     CMPA #0
                      ;     BNE TEXTATDBBMSP00X
                      ;     JMP TEXTATDBBMSP00
                      ; TEXTATDBBMSP00X
                      ;     CMPA #1
                      ;     BNE TEXTATDBBMSP01X
                      ;     JMP TEXTATDBBMSP01
                      ; TEXTATDBBMSP01X
                      ;     CMPA #2
                      ;     BNE TEXTATDBBMSP02X
                      ;     JMP TEXTATDBBMSP02
                      ; TEXTATDBBMSP02X
                      ;     CMPA #3
                      ;     BNE TEXTATDBBMSP03X
                      ;     JMP TEXTATDBBMSP03
                      ; TEXTATDBBMSP03X
                      ;     CMPA #4
                      ;     BNE TEXTATDBBMSP04X
                      ;     JMP TEXTATDBBMSP04
                      ; TEXTATDBBMSP04X
                      ;     JMP TEXTATDBBMSP0E
                      ; TEXTATDBBMSP00
                      ; TEXTATDBBMSP01
                      ; TEXTATDBBMSP04
                      ; TEXTATDBBMSP0L1
                      ; @IF TO8
                      ;     LDA BASE_SEGMENT+$c3
                      ;     ORA #$01
                      ;     STA BASE_SEGMENT+$c3
                      ; @ELSE
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ORA #$01
                      ;     STA BASE_SEGMENT+$c0
                      ; @ENDIF
                      ;     LDA ,Y
                      ;     STA ,X
                      ; @IF TO8
                      ;     LDA BASE_SEGMENT+$c3
                      ;     ANDA #$fe
                      ;     STA BASE_SEGMENT+$c3
                      ; @ELSE
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ANDA #$fe
                      ;     STA BASE_SEGMENT+$c0
                      ; @ENDIF
                      ;     LDA <MATHPTR5
                      ;     STA ,X
                      ;     JMP TEXTATDBBMSP0L1M2
                      ; TEXTATDBBMSP0L1M
                      ;     PSHS X
                      ;     LDX <MATHPTR5
                      ;     LDA ,Y
                      ;     ANDA #$F0
                      ;     LSRA
                      ;     LSRA
                      ;     LSRA
                      ;     LSRA
                      ;     LDA A, X
                      ;     PULS X
                      ;     STA , X
                      ;     LEAX 1, X
                      ;     PSHS X
                      ;     LDX <MATHPTR5
                      ;     LDA ,Y
                      ;     ANDA #$0F
                      ;     LDA A, X
                      ;     PULS X
                      ;     STA , X
                      ;     JMP TEXTATDBBMSP0L1M2
                      ; TEXTATDBBMSP0L1M2
                              
                      ;     LDA CURRENTSL
                      ;     LEAX A, X 
                      ;     LEAY 1, Y
                      ;     LEAU 1, U
                      ;     CMPU #8
                      ;     BEQ TEXTATDBBMSP0L1X
                      ;     JMP TEXTATDBBMSP0L1
                      ; TEXTATDBBMSP0L1X
                      ;     LDA #1
                      ;     JMP TEXTATDBBMSP0E
                      ; TEXTATDBBMSP02
                      ; TEXTATDBBMSP02L1
                      ; @IF TO8
                      ;     LDA BASE_SEGMENT+$c3
                      ;     ANDA #$fe
                      ;     STA BASE_SEGMENT+$c3
                      ; @ELSE
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ORA #$01
                      ;     STA BASE_SEGMENT+$c0
                      ; @ENDIF
                      ;     LDA _PEN
                      ;     ANDA #$01
                      ;     CMPA #$01
                      ;     BEQ TEXTATDBBMSP02L1NO
                      ;     LDA ,Y
                      ;     STA ,X
                      ;     JMP TEXTATDBBMSP02L1DONE
                      ; TEXTATDBBMSP02L1NO
                      ;     LDA #0
                      ;     STA ,X
                      ; TEXTATDBBMSP02L1DONE
                      ; @IF TO8
                      ;     LDA BASE_SEGMENT+$c3
                      ;     ORA #$01
                      ;     STA BASE_SEGMENT+$c3
                      ; @ELSE
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ANDA #$fe
                      ;     STA BASE_SEGMENT+$c0
                      ; @ENDIF
                      ;     LDA _PEN
                      ;     ANDA #$02
                      ;     CMPA #$02
                      ;     BEQ TEXTATDBBMSP02L2NO
                      ;     LDA ,Y
                      ;     STA ,X
                      ;     JMP TEXTATDBBMSP02L2DONE
                      ; TEXTATDBBMSP02L2NO
                      ;     LDA #0
                      ;     STA ,X
                      ; TEXTATDBBMSP02L2DONE
                      ;     LDA CURRENTSL
                      ;     LEAX A, X 
                      ;     LEAY 1, Y
                      ;     LEAU 1, U
                      ;     CMPU #8
                      ;     BEQ TEXTATDBBMSP02L1X
                      ;     JMP TEXTATDBBMSP02L1
                      ; TEXTATDBBMSP02L1X
                      ;     LDA #1
                      ;     JMP TEXTATDBBMSP0E
                      ;
6B20                  TEXTATDBBMSP03
6B20  A6A4                    LDA ,Y
6B22  3426                    PSHS Y,D
6B24  108E6F6B                LDY #TEXTATFLIP
6B28  840F                    ANDA #$0F
6B2A  31A6                    LEAY A,Y 
6B2C  A6A4                    LDA ,Y 
6B2E  48                      ASLA
6B2F  48                      ASLA
6B30  48                      ASLA
6B31  48                      ASLA
6B32  9714                    STA <MATHPTR0
6B34  3526                    PULS D,Y 
6B36  3426                    PSHS Y,D
6B38  108E6F6B                LDY #TEXTATFLIP
6B3C  84F0                    ANDA #$F0
6B3E  44                      LSRA
6B3F  44                      LSRA
6B40  44                      LSRA
6B41  44                      LSRA
6B42  31A6                    LEAY A,Y 
6B44  A6A4                    LDA ,Y 
6B46  9A14                    ORA <MATHPTR0
6B48  9714                    STA <MATHPTR0
6B4A  3526                    PULS D,Y 
6B4C  3440                    PSHS U
6B4E  CE0002                  LDU #2
6B51                  TEXTATDBBMSP03L1
6B51  9614                    LDA <MATHPTR0
6B53  8403                    ANDA #$03
6B55  3420                    PSHS Y
6B57  108E6F67                LDY #TEXTATBITMASK
6B5B  E6A6                    LDB A,Y 
6B5D  B66A25                  LDA _PEN
6B60  840F                    ANDA #$0F
6B62  3D                      MUL
6B63  1F98                    TFR B, A
6B65  3520                    PULS Y
6B67  9715                    STA <MATHPTR1
6B69  A6892000                LDA $2000,X
6B6D  9A15                    ORA <MATHPTR1
6B6F  A7892000                STA $2000,X
6B73  9614                    LDA <MATHPTR0
6B75  44                      LSRA
6B76  44                      LSRA
6B77  9714                    STA <MATHPTR0
6B79  8403                    ANDA #$03
6B7B  3420                    PSHS Y
6B7D  108E6F67                LDY #TEXTATBITMASK
6B81  E6A6                    LDB A,Y 
6B83  B66A25                  LDA _PEN
6B86  840F                    ANDA #$0F
6B88  3D                      MUL
6B89  1F98                    TFR B, A
6B8B  3520                    PULS Y
6B8D  9715                    STA <MATHPTR1
6B8F  A684                    LDA ,X
6B91  9A15                    ORA <MATHPTR1
6B93  A784                    STA ,X
6B95  3001                    LEAX 1,X 
6B97  9614                    LDA <MATHPTR0
6B99  44                      LSRA
6B9A  44                      LSRA
6B9B  9714                    STA <MATHPTR0
6B9D  335F                    LEAU -1,U 
6B9F  11830000                CMPU #0
6BA3  26AC                    BNE TEXTATDBBMSP03L1
6BA5  301E                    LEAX -2,X  
6BA7  3540                    PULS U
                              
                      ; peephole(12): inlined1
                      ;       LDA CURRENTSL
6BA9  8628                    LDA #40
6BAA                  CURRENTSL equ *-1
6BAB  3086                    LEAX A,X  
6BAD  3121                    LEAY 1,Y 
6BAF  3341                    LEAU 1,U 
6BB1  11830008                CMPU #8
6BB5  2703                    BEQ TEXTATDBBMSP03L1X
6BB7  7E6B20                  JMP TEXTATDBBMSP03
6BBA                  TEXTATDBBMSP03L1X
6BBA  8602                    LDA #2
6BBC  7E6BBF                  JMP TEXTATDBBMSP0E
6BBF                  TEXTATDBBMSP0E
6BBF  1CAF                    ANDCC #$AF
6BC1  3536                    PULS D,Y,X
6BC3  B66F85                  LDA CURRENTMODE
6BC6  8103                    CMPA #3
6BC8  2700                    BEQ TEXTATDBBMSP0E3
                              ; LEAX 1, X
                              ; JMP TEXTATDBBMINCX
6BCA                  TEXTATDBBMSP0E3
6BCA  3002                    LEAX 2,X 
6BCC  7E6BEE                  JMP TEXTATDBBMINCX
6BCF                  TEXTATDBBMSKIPTAB
6BCF  0A04                    DEC <TABSTODRAW
6BD1  9604                    LDA <TABSTODRAW
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
6BD3  2616                    BNE TEXTATDBBMSKIPTAB2
6BD5  964D                    LDA <XCURSYS
6BD7  9716                    STA <MATHPTR2
6BD9  964E                    LDA <YCURSYS
6BDB  9717                    STA <MATHPTR3
6BDD  BD67D3                  JSR TEXTATCALCPOS
6BE0  3406                    PSHS D
6BE2  1F10                    TFR X, D
6BE4  F36F81                  ADDD BITMAPADDRESS
6BE7  1F01                    TFR D,X 
6BE9  3506                    PULS D
6BEB                  TEXTATDBBMSKIPTAB2
6BEB  7E6BEE                  JMP TEXTATDBBMINCX
6BEE                  TEXTATDBBMINCX
6BEE  0C4D                    INC <XCURSYS
6BF0  C100                    CMPB #0
6BF2  2757                    BEQ TEXTATDBBMEND2
6BF4  964D                    LDA <XCURSYS
6BF6  B1676F                  CMPA CONSOLEX2
6BF9  2E03                    BGT TEXTATDBBMNEXT2
6BFB  7E6C3F                  JMP TEXTATDBBMNEXT
6BFE                  TEXTATDBBMNEXT2
6BFE  B6676D                  LDA CONSOLEX1
6C01  974D                    STA <XCURSYS
6C03  B66BAA                  LDA CURRENTSL
6C06  3086                    LEAX A,X 
6C08  3086                    LEAX A,X 
6C0A  3086                    LEAX A,X 
6C0C  3086                    LEAX A,X 
6C0E  3086                    LEAX A,X 
6C10  3086                    LEAX A,X 
6C12  3086                    LEAX A,X 
6C14  0C4E                    INC <YCURSYS
6C16                  TEXTATDBBMNEXT2A
6C16  964E                    LDA <YCURSYS
6C18  B16770                  CMPA CONSOLEY2
6C1B  2E03                    BGT TEXTATDBBMNEXT3
6C1D  7E6C3F                  JMP TEXTATDBBMNEXT
6C20                  TEXTATDBBMNEXT3
6C20  86FF                    LDA #$FF
6C22  974A                    STA <DIRECTION
6C24  BDA41A                  JSR VSCROLLT
6C27  0A4E                    DEC <YCURSYS
6C29  964D                    LDA <XCURSYS
6C2B  9716                    STA <MATHPTR2
6C2D  964E                    LDA <YCURSYS
6C2F  9717                    STA <MATHPTR3
6C31  BD67D3                  JSR TEXTATCALCPOS
6C34  3406                    PSHS D
6C36  1F10                    TFR X, D
6C38  F36F81                  ADDD BITMAPADDRESS
6C3B  1F01                    TFR D,X 
6C3D  3506                    PULS D
6C3F                  TEXTATDBBMNEXT
6C3F  9604                    LDA <TABSTODRAW
6C41  2703                    BEQ TEXTATDBBMXLOOP2
6C43  7E6A3C                  JMP TEXTATDBBMLOOP2
6C46                  TEXTATDBBMXLOOP2
6C46  3121                    LEAY 1,Y
6C48  7E6A3C                  JMP TEXTATDBBMLOOP2
6C4B                  TEXTATDBBMEND2
6C4B                  TEXTATDBBMEND
6C4B  39                      RTS
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; **********************************************************************************
                      ; ----------------------------------------------
                      ; Version active on double buffering OFF
                      ; ----------------------------------------------
6C4C                  TEXTATGOORIG
6C4C  10BE6A01                LDY TEXTADDRESS
6C50  109F41                  STY <COPYOFTEXTADDRESS
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
6C53  4F                      CLRA
6C54  9704                    STA <TABSTODRAW
6C56  109E01                  LDY <TEXTPTR
6C59  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
6C5C  2603                    BNE TEXTAT0X
6C5E  7E6C7E                  JMP TEXTAT0
6C61                  TEXTAT0X
6C61  8101                    CMPA #1
6C63  2603                    BNE TEXTAT1X
6C65  7E6C7E                  JMP TEXTAT1
6C68                  TEXTAT1X
6C68  8102                    CMPA #2
6C6A  2603                    BNE TEXTAT2X
6C6C  7E6C7E                  JMP TEXTAT2
6C6F                  TEXTAT2X
6C6F  8103                    CMPA #3
6C71  2603                    BNE TEXTAT3X
6C73  7E6C7E                  JMP TEXTAT3
6C76                  TEXTAT3X
6C76  8104                    CMPA #4
6C78  2603                    BNE TEXTAT4X
6C7A  7E6C7E                  JMP TEXTAT4
6C7D                  TEXTAT4X
6C7D  39                      RTS
                              
6C7E                  TEXTATBITMAPMODE
6C7E                  TEXTAT0
6C7E                  TEXTAT1
6C7E                  TEXTAT2
6C7E                  TEXTAT3
6C7E                  TEXTAT4
6C7E  964D                    LDA <XCURSYS
6C80  9716                    STA <MATHPTR2
6C82  964E                    LDA <YCURSYS
6C84  9717                    STA <MATHPTR3
6C86  BD67D3                  JSR TEXTATCALCPOS
6C89  7E6C8C                  JMP TEXTATCOMMON
6C8C                  TEXTATCOMMON
6C8C  1CFE                    ANDCC #$FE
6C8E  B66A25                  LDA _PEN
6C91  840F                    ANDA #$0F
6C93  48                      ASLA
6C94  48                      ASLA
6C95  48                      ASLA
6C96  48                      ASLA
6C97  9719                    STA <MATHPTR5
6C99  B6C16E                  LDA _PAPER
6C9C  840F                    ANDA #$0F
6C9E  9A19                    ORA <MATHPTR5
6CA0  9719                    STA <MATHPTR5
6CA2  D603                    LDB <TEXTSIZE
6CA4  109E01                  LDY <TEXTPTR
6CA7                  TEXTATBMLOOP2
6CA7  9604                    LDA <TABSTODRAW
6CA9  2703                    BEQ TEXTATBMNSKIPTAB
6CAB  7E6EFA                  JMP TEXTATBMSKIPTAB
6CAE                  TEXTATBMNSKIPTAB
6CAE  A6A4                    LDA ,Y
6CB0  9708                    STA <SCREENCODE
6CB2  5A                      DECB
6CB3  8109                    CMPA #$09
6CB5  270D                    BEQ TEXTATBMTAB
6CB7  810E                    CMPA #14
6CB9  2203                    BHI TEXTATBMXCC
6CBB  7E6CDD                  JMP TEXTATBMCC
6CBE                  TEXTATBMXCC
6CBE  BD69CB                  JSR TEXTATDECODE
6CC1  7E6D6E                  JMP TEXTATBMSP0
6CC4                  TEXTATBMTAB
6CC4  964D                    LDA <XCURSYS
6CC6                  TEXTATBMTAB2
6CC6  B16F86                  CMPA TABCOUNT
6CC9  2306                    BLS TEXTATBMTAB3
6CCB  B06F86                  SUBA TABCOUNT
6CCE  7E6CC6                  JMP TEXTATBMTAB2
6CD1                  TEXTATBMTAB3
6CD1  9710                    STA <TMPPTR
6CD3  B66F86                  LDA TABCOUNT
6CD6  9010                    SUBA <TMPPTR
6CD8  9704                    STA <TABSTODRAW
6CDA  7E6F56                  JMP TEXTATBMNEXT
6CDD                  TEXTATBMCC
6CDD  810D                    CMPA #13
6CDF  2727                    BEQ TEXTATBMLF
6CE1  810A                    CMPA #10
6CE3  2723                    BEQ TEXTATBMLF
6CE5  8101                    CMPA #01
6CE7  2725                    BEQ TEXTATBMPEN
6CE9  8102                    CMPA #02
6CEB  2731                    BEQ TEXTATBMPAPER
6CED  8103                    CMPA #03
6CEF  2738                    BEQ TEXTATBMCMOVEPREPARE
6CF1  8104                    CMPA #04
6CF3  2710                    BEQ TEXTATBMXAT
6CF5  8105                    CMPA #05
6CF7  2703                    BEQ TEXTATBMCLS
6CF9  7E6F56                  JMP TEXTATBMNEXT
6CFC                  TEXTATBMCLS
6CFC  3121                    LEAY 1,Y
6CFE  5A                      DECB
6CFF  BDA66F                  JSR CLS
6D02  7E6F56                  JMP TEXTATBMNEXT
6D05                  TEXTATBMXAT
6D05  7E6D52                  JMP TEXTATBMAT
6D08                  TEXTATBMLF
6D08  3121                    LEAY 1,Y
6D0A  5A                      DECB
                              ; LDA #0
                              ; STA <XCURSYS
                              ; INC <YCURSYS
                              ; LDA <XCURSYS
                              ; STA <MATHPTR2
                              ; LDA <YCURSYS
                              ; STA <MATHPTR3
                              ; JSR TEXTATCALCPOS
6D0B  7E6F20                  JMP TEXTATBMNEXT2
6D0E                  TEXTATBMPEN
6D0E  3121                    LEAY 1,Y
6D10  5A                      DECB
6D11  A6A4                    LDA ,Y 
6D13  81FF                    CMPA #$FF
6D15  2601                    BNE TEXTATBMPEN2
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$0
6D17  4F                      CLRA
6D18                  TEXTATBMPEN2
6D18  B76A25                  STA _PEN
6D1B  7E6F56                  JMP TEXTATBMNEXT
6D1E                  TEXTATBMPAPER
6D1E  3121                    LEAY 1,Y
6D20  5A                      DECB
6D21  A6A4                    LDA ,Y 
6D23  B7C16E                  STA _PAPER
6D26  7E6F56                  JMP TEXTATBMNEXT
6D29                  TEXTATBMCMOVEPREPARE
6D29  3121                    LEAY 1,Y
6D2B  5A                      DECB
6D2C  A6A4                    LDA ,Y 
6D2E  974B                    STA <CLINEX
6D30  3121                    LEAY 1,Y
6D32  301F                    LEAX -1,X
6D34  A6A4                    LDA ,Y 
6D36  974C                    STA <CLINEY
6D38                  TEXTATBMCMOVE
6D38  964B                    LDA <CLINEX
6D3A  9B4D                    ADDA <XCURSYS
6D3C  974D                    STA <XCURSYS
6D3E  964C                    LDA <CLINEY
6D40  9B4E                    ADDA <YCURSYS
6D42  974E                    STA <YCURSYS
6D44  964D                    LDA <XCURSYS
6D46  9716                    STA <MATHPTR2
6D48  964E                    LDA <YCURSYS
6D4A  9717                    STA <MATHPTR3
6D4C  BD67D3                  JSR TEXTATCALCPOS
6D4F  7E6F56                  JMP TEXTATBMNEXT
6D52                  TEXTATBMAT
6D52  3121                    LEAY 1,Y
6D54  5A                      DECB
6D55  A6A4                    LDA ,Y 
6D57  904D                    SUBA <XCURSYS
6D59  BB676D                  ADDA CONSOLEX1
6D5C  974B                    STA <CLINEX
6D5E  3121                    LEAY 1,Y
6D60  301F                    LEAX -1,X
6D62  A6A4                    LDA ,Y 
6D64  904E                    SUBA <YCURSYS
6D66  BB676E                  ADDA CONSOLEY1
6D69  974C                    STA <CLINEY
6D6B  7E6D38                  JMP TEXTATBMCMOVE
6D6E                  TEXTATBMSP0
6D6E  3436                    PSHS D,Y,X
6D70  CE0000                  LDU #0
6D73  108EC2A6                LDY #UDCCHAR
6D77  9608                    LDA <SCREENCODE
6D79  C608                    LDB #8
6D7B  3D                      MUL
6D7C  31AB                    LEAY D,Y 
6D7E  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
6D81  2603                    BNE TEXTATBMSP00X
6D83  7E6DA5                  JMP TEXTATBMSP00
6D86                  TEXTATBMSP00X
6D86  8101                    CMPA #1
6D88  2603                    BNE TEXTATBMSP01X
6D8A  7E6DA5                  JMP TEXTATBMSP01
6D8D                  TEXTATBMSP01X
6D8D  8102                    CMPA #2
6D8F  2603                    BNE TEXTATBMSP02X
6D91  7E6DFC                  JMP TEXTATBMSP02
6D94                  TEXTATBMSP02X
6D94  8103                    CMPA #3
6D96  2603                    BNE TEXTATBMSP03X
6D98  7E6E49                  JMP TEXTATBMSP03
6D9B                  TEXTATBMSP03X
6D9B  8104                    CMPA #4
6D9D  2603                    BNE TEXTATBMSP04X
6D9F  7E6DA5                  JMP TEXTATBMSP04
6DA2                  TEXTATBMSP04X
6DA2  7E6EE7                  JMP TEXTATBMSP0E
6DA5                  TEXTATBMSP00
6DA5                  TEXTATBMSP01
6DA5                  TEXTATBMSP04
6DA5                  TEXTATBMSP0L1
6DA5  B6E7C3                  LDA BASE_SEGMENT+$c3
6DA8  8A01                    ORA #$01
6DAA  B7E7C3                  STA BASE_SEGMENT+$c3
6DAD  A6A4                    LDA ,Y
6DAF  A784                    STA ,X
6DB1  B6E7C3                  LDA BASE_SEGMENT+$c3
6DB4  84FE                    ANDA #$fe
6DB6  B7E7C3                  STA BASE_SEGMENT+$c3
6DB9  9619                    LDA <MATHPTR5
6DBB  A784                    STA ,X
6DBD  7E6DE5                  JMP TEXTATBMSP0L1M2
6DC0                  TEXTATBMSP0L1M
6DC0  3410                    PSHS X
6DC2  9E19                    LDX <MATHPTR5
6DC4  A6A4                    LDA ,Y
6DC6  84F0                    ANDA #$F0
6DC8  44                      LSRA
6DC9  44                      LSRA
6DCA  44                      LSRA
6DCB  44                      LSRA
6DCC  A686                    LDA A,X 
6DCE  3510                    PULS X
6DD0  A784                    STA ,X 
6DD2  3001                    LEAX 1,X 
6DD4  3410                    PSHS X
6DD6  9E19                    LDX <MATHPTR5
6DD8  A6A4                    LDA ,Y
6DDA  840F                    ANDA #$0F
6DDC  A686                    LDA A,X 
6DDE  3510                    PULS X
6DE0  A784                    STA ,X 
6DE2  7E6DE5                  JMP TEXTATBMSP0L1M2
6DE5                  TEXTATBMSP0L1M2
                              
6DE5  B66BAA                  LDA CURRENTSL
6DE8  3086                    LEAX A,X  
6DEA  3121                    LEAY 1,Y 
6DEC  3341                    LEAU 1,U 
6DEE  11830008                CMPU #8
6DF2  2703                    BEQ TEXTATBMSP0L1X
6DF4  7E6DA5                  JMP TEXTATBMSP0L1
6DF7                  TEXTATBMSP0L1X
6DF7  8601                    LDA #1
6DF9  7E6EE7                  JMP TEXTATBMSP0E
6DFC                  TEXTATBMSP02
6DFC                  TEXTATBMSP02L1
6DFC  B6E7C3                  LDA BASE_SEGMENT+$c3
6DFF  84FE                    ANDA #$fe
6E01  B7E7C3                  STA BASE_SEGMENT+$c3
6E04  B66A25                  LDA _PEN
6E07  8401                    ANDA #$01
6E09  8101                    CMPA #$01
6E0B  2707                    BEQ TEXTATBMSP02L1NO
6E0D  A6A4                    LDA ,Y
6E0F  A784                    STA ,X
6E11  7E6E17                  JMP TEXTATBMSP02L1DONE
6E14                  TEXTATBMSP02L1NO
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
6E14  4F                      CLRA
6E15  A784                    STA ,X
6E17                  TEXTATBMSP02L1DONE
6E17  B6E7C3                  LDA BASE_SEGMENT+$c3
6E1A  8A01                    ORA #$01
6E1C  B7E7C3                  STA BASE_SEGMENT+$c3
6E1F  B66A25                  LDA _PEN
6E22  8402                    ANDA #$02
6E24  8102                    CMPA #$02
6E26  2707                    BEQ TEXTATBMSP02L2NO
6E28  A6A4                    LDA ,Y
6E2A  A784                    STA ,X
6E2C  7E6E32                  JMP TEXTATBMSP02L2DONE
6E2F                  TEXTATBMSP02L2NO
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
6E2F  4F                      CLRA
6E30  A784                    STA ,X
6E32                  TEXTATBMSP02L2DONE
6E32  B66BAA                  LDA CURRENTSL
6E35  3086                    LEAX A,X  
6E37  3121                    LEAY 1,Y 
6E39  3341                    LEAU 1,U 
6E3B  11830008                CMPU #8
6E3F  2703                    BEQ TEXTATBMSP02L1X
6E41  7E6DFC                  JMP TEXTATBMSP02L1
6E44                  TEXTATBMSP02L1X
6E44  8601                    LDA #1
6E46  7E6EE7                  JMP TEXTATBMSP0E
                      ;
6E49                  TEXTATBMSP03
6E49  A6A4                    LDA ,Y
6E4B  3426                    PSHS Y,D
6E4D  108E6F6B                LDY #TEXTATFLIP
6E51  840F                    ANDA #$0F
6E53  31A6                    LEAY A,Y 
6E55  A6A4                    LDA ,Y 
6E57  48                      ASLA
6E58  48                      ASLA
6E59  48                      ASLA
6E5A  48                      ASLA
6E5B  9714                    STA <MATHPTR0
6E5D  3526                    PULS D,Y 
6E5F  3426                    PSHS Y,D
6E61  108E6F6B                LDY #TEXTATFLIP
6E65  84F0                    ANDA #$F0
6E67  44                      LSRA
6E68  44                      LSRA
6E69  44                      LSRA
6E6A  44                      LSRA
6E6B  31A6                    LEAY A,Y 
6E6D  A6A4                    LDA ,Y 
6E6F  9A14                    ORA <MATHPTR0
6E71  9714                    STA <MATHPTR0
6E73  3526                    PULS D,Y 
6E75  3440                    PSHS U
6E77  CE0002                  LDU #2
6E7A                  TEXTATBMSP03L1
6E7A  9614                    LDA <MATHPTR0
6E7C  8403                    ANDA #$03
6E7E  3420                    PSHS Y
6E80  108E6F67                LDY #TEXTATBITMASK
6E84  E6A6                    LDB A,Y 
6E86  B66A25                  LDA _PEN
6E89  840F                    ANDA #$0F
6E8B  3D                      MUL
6E8C  1F98                    TFR B, A
6E8E  3520                    PULS Y
6E90  F6E7C3                  LDB BASE_SEGMENT+$c3
6E93  C4FE                    ANDB #$fe
6E95  A784                    STA ,X
6E97  9614                    LDA <MATHPTR0
6E99  44                      LSRA
6E9A  44                      LSRA
6E9B  9714                    STA <MATHPTR0
6E9D  8403                    ANDA #$03
6E9F  F7E7C3                  STB BASE_SEGMENT+$c3
6EA2  3420                    PSHS Y
6EA4  108E6F67                LDY #TEXTATBITMASK
6EA8  E6A6                    LDB A,Y 
6EAA  B66A25                  LDA _PEN
6EAD  840F                    ANDA #$0F
6EAF  3D                      MUL
6EB0  1F98                    TFR B, A
6EB2  3520                    PULS Y
6EB4  F6E7C3                  LDB BASE_SEGMENT+$c3
6EB7  CA01                    ORB #$01
6EB9  A780                    STA ,X+
6EBB  9614                    LDA <MATHPTR0
6EBD  44                      LSRA
6EBE  44                      LSRA
6EBF  9714                    STA <MATHPTR0
6EC1  F7E7C3                  STB BASE_SEGMENT+$c3
6EC4  335F                    LEAU -1,U 
6EC6  11830000                CMPU #0
6ECA  26AE                    BNE TEXTATBMSP03L1
6ECC  301E                    LEAX -2,X  
6ECE  3540                    PULS U
                              
6ED0  B66BAA                  LDA CURRENTSL
6ED3  3086                    LEAX A,X  
6ED5  3121                    LEAY 1,Y 
6ED7  3341                    LEAU 1,U 
6ED9  11830008                CMPU #8
6EDD  2703                    BEQ TEXTATBMSP03L1X
6EDF  7E6E49                  JMP TEXTATBMSP03
6EE2                  TEXTATBMSP03L1X
6EE2  8602                    LDA #2
6EE4  7E6EE7                  JMP TEXTATBMSP0E
                      ;
6EE7                  TEXTATBMSP0E
6EE7  3536                    PULS D,Y,X
6EE9  B66F85                  LDA CURRENTMODE
6EEC  8103                    CMPA #3
6EEE  2705                    BEQ TEXTATBMSP0E3
6EF0  3001                    LEAX 1,X 
6EF2  7E6F0E                  JMP TEXTATBMINCX
6EF5                  TEXTATBMSP0E3
6EF5  3002                    LEAX 2,X 
6EF7  7E6F0E                  JMP TEXTATBMINCX
6EFA                  TEXTATBMSKIPTAB
6EFA  0A04                    DEC <TABSTODRAW
6EFC  9604                    LDA <TABSTODRAW
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
6EFE  260B                    BNE TEXTATBMSKIPTAB2
6F00  964D                    LDA <XCURSYS
6F02  9716                    STA <MATHPTR2
6F04  964E                    LDA <YCURSYS
6F06  9717                    STA <MATHPTR3
6F08  BD67D3                  JSR TEXTATCALCPOS
6F0B                  TEXTATBMSKIPTAB2
6F0B  7E6F0E                  JMP TEXTATBMINCX
6F0E                  TEXTATBMINCX
6F0E  0C4D                    INC <XCURSYS
6F10  C100                    CMPB #0
6F12  10270050                LBEQ TEXTATBMEND2
6F16  964D                    LDA <XCURSYS
6F18  B1676F                  CMPA CONSOLEX2
6F1B  2E03                    BGT TEXTATBMNEXT2
6F1D  7E6F56                  JMP TEXTATBMNEXT
6F20                  TEXTATBMNEXT2
6F20  B6676D                  LDA CONSOLEX1
6F23  974D                    STA <XCURSYS
6F25  B66BAA                  LDA CURRENTSL
6F28  3086                    LEAX A,X 
6F2A  3086                    LEAX A,X 
6F2C  3086                    LEAX A,X 
6F2E  3086                    LEAX A,X 
6F30  3086                    LEAX A,X 
6F32  3086                    LEAX A,X 
6F34  3086                    LEAX A,X 
6F36  0C4E                    INC <YCURSYS
6F38                  TEXTATBMNEXT2A
6F38  964E                    LDA <YCURSYS
6F3A  B16770                  CMPA CONSOLEY2
6F3D  2E03                    BGT TEXTATBMNEXT3
6F3F  7E6F56                  JMP TEXTATBMNEXT
6F42                  TEXTATBMNEXT3
6F42  86FF                    LDA #$FF
6F44  974A                    STA <DIRECTION
6F46  BDA41A                  JSR VSCROLLT
6F49  0A4E                    DEC <YCURSYS
6F4B  964D                    LDA <XCURSYS
6F4D  9716                    STA <MATHPTR2
6F4F  964E                    LDA <YCURSYS
6F51  9717                    STA <MATHPTR3
6F53  BD67D3                  JSR TEXTATCALCPOS
6F56                  TEXTATBMNEXT
6F56  9604                    LDA <TABSTODRAW
6F58  2703                    BEQ TEXTATBMXLOOP2
6F5A  7E6CA7                  JMP TEXTATBMLOOP2
6F5D                  TEXTATBMXLOOP2
6F5D  3121                    LEAY 1,Y
6F5F  C100                    CMPB #0
6F61  2703                    BEQ TEXTATBMEND
6F63  7E6CA7                  JMP TEXTATBMLOOP2
6F66                  TEXTATBMEND
6F66                  TEXTATBMEND2
6F66  39                      RTS
6F67                  TEXTATBITMASK
6F67  00100111                fcb $00, $10, $01, $11
6F6B                  TEXTATFLIP
6F6B  0008040C020A060E         fcb $0, $8, $4, $c, $2, $a, $6, $e
6F73  0109050D030B070F         fcb $1, $9, $5, $d, $3, $b, $7, $f
6F7B                  CODESTART2
6F7B  10CE6507                LDS #STACKEND
E700                  BASE_SEGMENT EQU $e700
                              IF (((128+vars_after-(*+2))|(127-vars_after+(*+2)))&0x8000)
                              JMP vars_after
                              ELSE
6F7F  200B                    BRA vars_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                   INTERNAL VARIABLES FOR THOMSON TO8                        *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ; peephole(12): inlined3
                      ;TEXTADDRESS         fdb     $4000
6F81  4000            BITMAPADDRESS       fdb     $4000
6F83  0000            COLORMAPADDRESS     fdb     $0000
6F85  00              CURRENTMODE         fcb     $0
                      ; peephole(6): unread2
                      ;CURRENTTILEMODE     fcb     0
6F86  04              TABCOUNT            fcb     4
                      ; peephole(6): unread2
                      ;XCURS               fcb     0
                      ; peephole(6): unread2
                      ;YCURS               fcb     0
6F87  60              EMPTYTILE           fcb     $60
6F88  00              TICKSPERSECOND      fcb     $0
0010                  TMPPTR equ $10    ; $23
0012                  TMPPTR2 equ $12    ; $25
0014                  MATHPTR0 equ $14
0015                  MATHPTR1 equ $15
0016                  MATHPTR2 equ $16
0017                  MATHPTR3 equ $17
0018                  MATHPTR4 equ $18
0019                  MATHPTR5 equ $19
001A                  MATHPTR6 equ $1a
001B                  MATHPTR7 equ $1b
001C                  MATHPTR8 equ $1c
001D                  MATHPTRB0 equ $1d
001E                  MATHPTRB1 equ $1e
001F                  MATHPTRB2 equ $1f
0020                  MATHPTRB3 equ $20
0021                  MATHPTRB4 equ $21
0022                  MATHPTRB5 equ $22
0023                  MATHPTRB6 equ $23
0024                  MATHPTRB7 equ $24
0025                  MATHPTRB8 equ $25
003B                  DSSTATUS equ $3b
003C                  DSSIZE equ $3c
003D                  DSADDRLO equ $3d
003E                  DSADDRHI equ $3e
003F                  DSBANKLO equ $3f
0040                  DSBANKHI equ $40
0041                  COPYOFTEXTADDRESS equ $41
0043                  COPYOFBITMAPADDRESS equ $43
0045                  COPYOFCOLORMAPADDRESS equ $45
0047                  COPYOFTEXTADDRESS2 equ $47
0049                  COPYOFCOLORMAPADDRESS2 equ $49
004A                  DIRECTION equ $4a
004A                  PATTERN equ $4a
004A                  CHARACTERS equ $4a
004B                  CLINEX equ $4b
004C                  CLINEY equ $4c
004A                  BITSTOCONVERT equ $4a
004D                  XCURSYS equ $4d
004E                  YCURSYS equ $4e
6F89  00              BANKSHADOW      fcb     $00
6F8A  0000            DATAPTR fdb  0
6F8C                  vars_after
                              IF (((128+startup_after-(*+2))|(127-startup_after+(*+2)))&0x8000)
6F8C  7E7127                  JMP startup_after
                              ELSE
                              BRA startup_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*           STARTUP ROUTINE ON THOMSON MO6/OLLIVETTI TO8 PRODEST            *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
0061                  PAGE0 equ $61
                      ; TIMER service routine
6F8F                  TO8IRQ
6F8F  3406                    PSHS  D
6F91  CC0000                  LDD   #0              ; TI variable
6F92                  TO8TIMER  set *-2       ; (variable within code)
6F94  C30001                  ADDD  #1              ; increment
6F97  FD6F92                  STD   TO8TIMER      ; write result to TI variable
6F9A  8661                    LDA   #PAGE0          ; sets the direct page
6F9C  1F8B                    TFR   A,DP            ; for ugbc routines
6F9E  BD697B                  JSR   KBDMANAGER
6FA1  3506                    PULS  D
6FA3  7E6FA6                  JMP   >TO8IRQDEF    ; jump to next ISR
6FA4                  TO8IRQN   set *-2       ; (variable within code)
                      ; defaut service routine
6FA6                  TO8IRQDEF
6FA6  7E6FA9                  JMP   >TO8IRQEMPTY  ; jmp to the previous routine
6FA7                  TO8IRQO   set *-2       ; (variable within code)
                      ; empty service routine
6FA9                  TO8IRQEMPTY
6FA9  3B                      RTI                   ;  by defaut do RTI
6FAA  00              TO8IRQOINIT     fcb $0
6FAB                  TO8STARTUP
6FAB  1A50                    ORCC #$50
6FAD  B66FAA                  LDA   TO8IRQOINIT
6FB0  261C                    BNE   TO8STARTUPNOIRQ
6FB2  8601                    LDA   #1
6FB4  B76FAA                  STA   TO8IRQOINIT    
6FB7  8E6027                  LDX   #$6027
6FBA  A602                    LDA   2,X             ; Is previous TIMERPT enable ?
6FBC  2705                    BEQ   TO8STARTUP2   ; no ==> keep default return code (RTI)
6FBE  EC84                    LDD   ,X              ; yes ==> backup previous ISR
6FC0  FD6FA7                  STD   TO8IRQO       ;         and chain it at the end of our own
6FC3                  TO8STARTUP2
6FC3  CC6F8F                  LDD   #TO8IRQ       ; install our own ISR
6FC6  ED84                    STD   ,X
6FC8  CC09C4                  LDD   #2500
6FCB  FDE7C6                  STD   $E7C6
6FCE                  TO8STARTUPNOIRQ
6FCE  8661                    LDA   #PAGE0          ; any non-zero value will do, let's use the one that'll go to DP
6FD0  A702                    STA   2,X             ; enable the ISR
6FD2  1F8B                    TFR   A,DP        ; setup direct-page
6FD4  5F                      CLRB
6FD5  1F01                    TFR   D,X
6FD7  4F                      CLRA
6FD8                  TO8STARTUP3 
6FD8  E780                    STB   ,X+         ; clear direct-page
6FDA  4A                      DECA
6FDB  26FB                    BNE   TO8STARTUP3
6FDD  B66019                  LDA $6019
6FE0  84FB                    ANDA #$FB
6FE2  B76019                  STA $6019
6FE5  8601                    LDA #1
6FE7  B76073                  STA $6073
6FEA  1CAF                    ANDCC #$AF
6FEC  CC0000                  LDD #$0
6FEF                  TO8STARTUPL1
6FEF  C30001                  ADDD #$1
6FF2  DD14                    STD <MATHPTR0
6FF4  10833100                CMPD #$3100
6FF8  26F5                    BNE TO8STARTUPL1
6FFA  B66F93                  LDA TO8TIMER+1
6FFD  8128                    CMPA #40
6FFF  2F08                    BLE TO8NTSC
7001                  TO8PAL
7001  8632                    LDA #50
7003  B76F88                  STA TICKSPERSECOND
7006  7E7011                  JMP TO8STARTUPDONE
7009                  TO8NTSC
7009  863C                    LDA #60
700B  B76F88                  STA TICKSPERSECOND
700E  7E7011                  JMP TO8STARTUPDONE
7011                  TO8STARTUPDONE
7011  1A50                    ORCC  #$50
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB   #0
7013  5F                      CLRB
7014  F72076                  STB   $2076
7017  F62019                  LDB   $2019
701A  CA08                    ORB   #8
701C  F72019                  STB   $2019
701F  CE659C                  LDU #BANKLOAD
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
7022  5F                      CLRB
7023                  BANKLOADL1
7023  A6C5                    LDA B,U
7025  81FF                    CMPA #$FF
7027  102700D7                LBEQ BANKLOADL2
702B  B7E7E5                  STA $E7E5
702E  5C                      INCB
702F  3476                    PSHS D,Y,X,U
                              ; motor on
7031  8601                    LDA #1
7033  B76029                  STA $6029
7036  BDE815                  JSR $E815
7039  102500C5                LBCS BANKLOADL2
703D  8EA000                  LDX #$A000
                              ; move forward to the first data block
7040  CE0032                  LDU #50
7043                  BANKLOADL1SKIP
7043  8602                    LDA #2
7045  B76029                  STA $6029
7048  BDE815                  JSR $E815
704B  102500B3                LBCS BANKLOADL2
704F  335F                    LEAU -1,U 
7051  11830000                CMPU #0
7055  1026FFEA                LBNE BANKLOADL1SKIP
7059                  BANKLOADL1SIZE
                              ; read size
7059  8602                    LDA #2
705B  B76029                  STA $6029
705E  BDE815                  JSR $E815
7061  1025009D                LBCS BANKLOADL2
                              ; read bytes
7065  4F                      CLRA
7066  830005                  SUBD #5
7069  1F03                    TFR D,U 
                              ; skip
706B  8602                    LDA #2
706D  B76029                  STA $6029
7070  BDE815                  JSR $E815
7073  1025008B                LBCS BANKLOADL2
7077  BDE815                  JSR $E815
707A  10250084                LBCS BANKLOADL2
707E  BDE815                  JSR $E815
7081  1025007D                LBCS BANKLOADL2
7085  BDE815                  JSR $E815
7088  10250076                LBCS BANKLOADL2
708C  BDE815                  JSR $E815
708F  1025006F                LBCS BANKLOADL2
7093                  BANKLOADL1REPEAT
7093  8602                    LDA #2
7095  B76029                  STA $6029
7098  BDE815                  JSR $E815
709B  10250063                LBCS BANKLOADL2
709F  E780                    STB ,X+
70A1  335F                    LEAU -1,U 
70A3  11830000                CMPU #0
70A7  26EA                    BNE BANKLOADL1REPEAT
                              ; skip checksum
70A9  8602                    LDA #2
70AB  B76029                  STA $6029
70AE  BDE815                  JSR $E815
70B1                  BANKLOADL1END
                              ; move forward to the next data type
70B1  CE000E                  LDU #14
                              ; read last block?
70B4  8602                    LDA #2
70B6  B76029                  STA $6029
70B9  BDE815                  JSR $E815
70BC  2544                    BCS BANKLOADL2
70BE  C1DC                    CMPB #$DC
70C0  2702                    BEQ BANKLOADL2SKIP
70C2  335E                    LEAU -2,U 
70C4                  BANKLOADL2SKIP
70C4  8602                    LDA #2
70C6  B76029                  STA $6029
70C9  BDE815                  JSR $E815
70CC  2534                    BCS BANKLOADL2
70CE  335F                    LEAU -1,U 
70D0  11830000                CMPU #0
70D4  26EE                    BNE BANKLOADL2SKIP
                              ; end of data?
                              
70D6  C1FF                    CMPB #$FF
70D8  270E                    BEQ BANKLOADLEOD
                              ; read size 
70DA  8602                    LDA #2
70DC  B76029                  STA $6029
70DF  BDE815                  JSR $E815
70E2  4F                      CLRA
70E3  1F03                    TFR D,U 
                              ; read next block
70E5  7E7093                  JMP BANKLOADL1REPEAT
70E8                  BANKLOADLEOD
70E8  8602                    LDA #2
70EA  B76029                  STA $6029
70ED  BDE815                  JSR $E815
70F0  8602                    LDA #2
70F2  B76029                  STA $6029
70F5  BDE815                  JSR $E815
70F8  3576                    PULS D,Y,X,U
70FA  861F                    LDA #$1F
70FC  B7E7E5                  STA $E7E5
70FF  7E7023                  JMP BANKLOADL1
7102                  BANKLOADL2
7102  8610                    LDA #16
7104  B76029                  STA $6029
7107  BDE815                  JSR $E815
710A  861F                    LDA #$1F
710C  B7E7E5                  STA $E7E5
710F  1CAF                    ANDCC #$AF
7111  BDD731                  JSR DATAPREPARATION
7114  39                      RTS
7115                  WAITTIMER
7115  BE6F92                  LDX TO8TIMER
7118                  WAITTIMERL1
7118  BC6F92                  CPX TO8TIMER
711B  27FB                    BEQ WAITTIMERL1
711D  830001                  SUBD #1
7120  10830000                CMPD #0
7124  26EF                    BNE WAITTIMER
7126  39                      RTS
                              
7127                  startup_after
7127  BD6FAB                  JSR TO8STARTUP
712A  4F                      CLRA
712B  974D                    STA <XCURSYS
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
712D  974E                    STA <YCURSYS
712F  BD6849                  JSR EF936XSTARTUP
7132  CC0000                  LDD #$0000
7135  FD65BF                  STD CLIPX1
7138  CC013F                  LDD #$013f
713B  FD9033                  STD CLIPX2
713E  CC0000                  LDD #$0000
7141  FD65C1                  STD CLIPY1
7144  CC00C7                  LDD #$00c7
7147  FD903E                  STD CLIPY2
714A  CC1F40                  LDD #$1f40
714D  FDA55C                  STD CURRENTFRAMESIZE
7150  CC0000                  LDD #$0000
7153  FD65C3                  STD ORIGINX
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
7156  FD65C5                  STD ORIGINY
7159  CC0140                  LDD #$0140
715C  FD71E6                  STD CURRENTWIDTH
715F  CC00C8                  LDD #$00c8
7162  FD71EC                  STD CURRENTHEIGHT
7165  974D                    STA <XCURSYS
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
7167  974E                    STA <YCURSYS
7169  C628                    LDB #$28
716B  F7A42A                  STB CURRENTTILESWIDTH
716E  C619                    LDB #$19
7170  F7A431                  STB CURRENTTILESHEIGHT
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
7173  CC4000                  LDD #$4000
7176  FD6773                  STD CONSOLESA
7179  C628                    LDB #$28
717B  F76775                  STB CONSOLEWB
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$c8
717E  CC00C8                  LDD #$00c8
7181  B7676D                  STA CONSOLEX1
7184  B7676E                  STA CONSOLEY1
7187  F76776                  STB CONSOLEHB
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
718A  C627                    LDB #$27
718C  F7676F                  STB CONSOLEX2
718F  C618                    LDB #$18
7191  F76770                  STB CONSOLEY2
7194  C628                    LDB #$28
7196  F76771                  STB CONSOLEW
7199  C619                    LDB #$19
719B  F76772                  STB CONSOLEH
719E  CC4000                  LDD #$4000
71A1  FD6773                  STD CONSOLESA
71A4  C628                    LDB #$28
71A6  F76775                  STB CONSOLEWB
                      ; peephole(2): r320 (LDA,LDB)->(LDD)
                      ;       LDA #%00100000
                      ;       LDB #$c8
71A9  CC20C8                  LDD #((%00100000)&255)*256+(($c8)&255)
71AC  B7E7DC                  STA BASE_SEGMENT+$DC
71AF  F76776                  STB CONSOLEHB
71B2  CC0000                  LDD #$0000
71B5  FD65BF                  STD CLIPX1
71B8  CC013F                  LDD #$013f
71BB  FD9033                  STD CLIPX2
71BE  CC0000                  LDD #$0000
71C1  FD65C1                  STD CLIPY1
71C4  CC00C7                  LDD #$00c7
71C7  FD903E                  STD CLIPY2
71CA  CC1F40                  LDD #$1f40
71CD  FDA55C                  STD CURRENTFRAMESIZE
71D0  CC0000                  LDD #$0000
71D3  FD65C3                  STD ORIGINX
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
71D6  FD65C5                  STD ORIGINY
71D9  CC0140                  LDD #$0140
71DC  FD71E6                  STD CURRENTWIDTH
71DF  CC00C8                  LDD #$00c8
71E2  FD71EC                  STD CURRENTHEIGHT
                      ; peephole(12): inlined1
                      ;       LDD CURRENTWIDTH
71E5  CC0140                  LDD #320
71E6                  CURRENTWIDTH equ *-2
71E8  FD65C7                  STD RESOLUTIONX
                      ; peephole(12): inlined1
                      ;       LDD CURRENTHEIGHT
71EB  CC00C8                  LDD #200
71EC                  CURRENTHEIGHT equ *-2
71EE  FD65C9                  STD RESOLUTIONY
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$ff
                      ; peephole(6): unread1
                      ;       STB CURRENTTILES
71F1  C628                    LDB #$28
71F3  F7A42A                  STB CURRENTTILESWIDTH
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$19
71F6  CC0019                  LDD #$0019
71F9  974D                    STA <XCURSYS
71FB  974E                    STA <YCURSYS
71FD  F7A431                  STB CURRENTTILESHEIGHT
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
7200  CC4000                  LDD #$4000
7203  FD6773                  STD CONSOLESA
7206  C6A0                    LDB #$a0
7208  F76775                  STB CONSOLEWB
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$c8
720B  CC00C8                  LDD #$00c8
720E  B7676D                  STA CONSOLEX1
7211  B7676E                  STA CONSOLEY1
7214  F76776                  STB CONSOLEHB
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
7217  C627                    LDB #$27
7219  F7676F                  STB CONSOLEX2
721C  C618                    LDB #$18
721E  F76770                  STB CONSOLEY2
7221  C628                    LDB #$28
7223  F76771                  STB CONSOLEW
7226  C619                    LDB #$19
7228  F76772                  STB CONSOLEH
722B  CC4000                  LDD #$4000
722E  FD6773                  STD CONSOLESA
7231  C6A0                    LDB #$a0
7233  F76775                  STB CONSOLEWB
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$c8
7236  CC00C8                  LDD #$00c8
7239  B76F85                  STA CURRENTMODE
723C  F76776                  STB CONSOLEHB
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STA CURRENTTILEMODE
                              IF (((128+VARINIT-(*+2))|(127-VARINIT+(*+2)))&0x8000)
723F  BDCAA6                  JSR VARINIT
                              ELSE
                              BSR VARINIT
                              ENDIF
                              ; L:0
                              ; P:374
                              ; L:1
                              ; VSP
                              ; P:0
                              ; L:2
                              ; VSP
                              ; P:0
                              ; L:3
                              ; VSP
                              ; P:0
                              ; L:4
                              ; VSP
                              ; P:0
                              ; L:5
                              ; VSP
                              ; P:0
                              ; L:6
                              ; VSP
                              ; P:0
                              ; L:7
                              ; VSP
                              ; P:0
                              ; L:8
                              ; VSP
                              ; P:0
                              ; L:9
                              ; VSP
                              ; P:0
                              ; L:10
                              ; VSP
                              ; P:0
                              ; L:11
                              ; VSP
                              ; P:0
                              ; L:12
                              ; VSP
                              ; P:0
                              ; L:13
                              ; VSP
                              ; P:0
                              ; L:14
                              ; VSP
                              ; P:0
                              ; L:15
                              ; VSP
                              ; P:0
                              ; L:16
                              ; VSP
                              ; P:0
                              ; L:17
7242  CCAD40                  LDD #_vblast_bin
                      ; peephole(1): r615 (STDa,LDDa,STDb)->(STDb)
                      ;       STD _Ttmp2
                      ;       LDD _Ttmp2
7245  FDAD3E                  STD _vblast_address
                              ; Q _Ttmp2
                              ; Q _Ttmp3
                              ; VSP
                              ; P:4
                              ; L:18
                              ; VSP
                              ; P:0
                              ; L:19
                              ; VSP
                              ; P:0
                              ; L:20
                              ; VSP
                              ; P:0
                              ; L:21
                              ; VSP
                              ; P:0
                              ; L:22
                              ; VSP
                              ; P:0
                              ; L:23
                              ; VSP
                              ; P:0
                              ; L:24
                              ; VSP
                              ; P:0
                              ; L:25
                              ; VSP
                              ; P:0
                              ; L:26
                              ; VSP
                              ; P:0
                              ; L:27
                              ; VSP
                              ; P:0
                              ; L:28
                              ; VSP
                              ; P:0
                              ; L:29
                              ; VSP
                              ; P:0
                              ; L:30
                              ; VSP
                              ; P:0
                              ; L:31
                              ; VSP
                              ; P:0
                              ; L:32
                              ; VSP
                              ; P:0
                              ; L:33
                              ; VSP
                              ; P:0
                              ; L:34
                              ; VSP
                              ; P:0
                              ; L:35
                              ; VSP
                              ; P:0
                              ; L:36
                              ; VSP
                              ; P:0
                              ; L:37
                              ; VSP
                              ; P:0
                              ; L:38
                              ; VSP
                              ; P:0
                              ; L:39
                              ; VSP
                              ; P:0
                              ; L:40
                              ; VSP
                              ; P:0
                              ; L:41
                              ; VSP
                              ; P:0
                              ; L:67
                              ; VSP
                              ; P:0
                              ; L:68
                              ; VSP
                              ; P:0
                              ; L:69
                              ; VSP
                              ; P:0
                              ; L:70
                              ; VSP
                              ; P:0
                              ; L:71
                              ; VSP
                              ; P:0
                              ; L:72
                              ; VSP
                              ; P:0
                              ; L:73
                              ; VSP
                              ; P:0
                              ; L:76
                              ; VSP
                              ; P:0
                              ; L:77
7248  CC0007                  LDD #$0007
724B  FD8E0C                  STD _default_color
                              ; VSP
                              ; P:2
                              ; L:78
                              ; VSP
                              ; P:0
                              ; L:79
                              ; VSP
                              ; P:0
                              ; L:80
                              ; VSP
                              ; P:0
                              ; L:81
                              ; VSP
                              ; P:0
                              ; L:82
                              ; VSP
                              ; P:0
                              ; L:83
                              ; VSP
                              ; P:0
                              ; L:84
724E  CC1200                  LDD #$1200
7251  FD7553                  STD _pos_x
                              ; VSP
                              ; P:2
                              ; L:85
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0c00
7254  860C                    LDA #$0c
7256  FDC106                  STD _pos_y
                              ; VSP
                              ; P:2
                              ; L:86
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$ff00
7259  86FF                    LDA #$ff
725B  FD841B                  STD _dir_x0
                              ; VSP
                              ; P:2
                              ; L:87
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
725E  4F                      CLRA
725F  FD84B3                  STD _dir_y0
                              ; VSP
                              ; P:2
                              ; L:88
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$ff00
                      ; peephole(3): r813 [A=0](LDA#ff)->(DECA)
                      ;       LDA #$ff
7262  4A                      DECA
7263  FD89E4                  STD _dir_x
                              ; VSP
                              ; P:2
                              ; L:89
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
7266  4F                      CLRA
7267  FD89F0                  STD _dir_y
                              ; VSP
                              ; P:2
                              ; L:90
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
726A  FD86C9                  STD _plane_x0
                              ; VSP
                              ; P:2
                              ; L:91
726D  CCFF80                  LDD #$ff80
7270  FD8761                  STD _plane_y0
                              ; VSP
                              ; P:2
                              ; L:92
7273  CC0000                  LDD #$0000
7276  FDC108                  STD _plane_x
                              ; VSP
                              ; P:2
                              ; L:93
7279  CCFF80                  LDD #$ff80
727C  FD89F3                  STD _plane_y
                              ; VSP
                              ; P:2
                              ; L:94
                              ; VSP
                              ; P:0
                              ; L:95
                              ; VSP
                              ; P:0
                              ; L:96
                              ; VSP
                              ; P:0
                              ; L:97
727F  CC0000                  LDD #$0000
7282  FDC10A                  STD _angle
                              ; VSP
                              ; P:2
                              ; L:98
                              ; VSP
                              ; P:0
                              ; L:99
                              IF (((128+event_handlerafter-(*+2))|(127-event_handlerafter+(*+2)))&0x8000)
7285  7E8977                  JMP event_handlerafter
                              ELSE
                              BRA event_handlerafter
                              ENDIF
7288                  PROCevent_handler
                              ; VSP
                              ; P:6
                              ; L:100
                              ; VSP
                              ; P:0
                              ; L:101
                              ; VSP
                              ; P:0
                              ; L:102
7288  4F                      CLRA
7289  B7C16F                  STA _event_handler_compute_dir
                              ; VSP
                              ; P:2
                              ; L:103
                              ; VSP
                              ; P:0
                              ; L:104
                              ; VSP
                              ; P:0
                              ; L:105
                              ; VSP
                              ; P:0
                              ; L:106
                              IF (((128+dstring_after-(*+2))|(127-dstring_after+(*+2)))&0x8000)
728C  7E73ED                  JMP dstring_after
                              ELSE
                              BRA dstring_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                DINAMYC STRING MANAGEMENT WITH GARBAGE COLLECTION            *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ; DSEQUAL(X=descriptor,Y=string) -> C / NC
728F                  DSEQUAL
728F  3406                    PSHS D
7291  3420                    PSHS Y
7293  E6A4                    LDB ,Y
7295  E184                    CMPB ,X
7297  2618                    BNE DSEQUALNO
7299  3121                    LEAY 1,Y 
729B  E684                    LDB ,X 
729D  EC01                    LDD 1,X 
729F  1F01                    TFR D,X 
72A1                  DSEQUALL1
72A1  A680                    LDA ,X +
72A3  A1A0                    CMPA ,Y +
72A5  260A                    BNE DSEQUALNO
72A7  5A                      DECB
72A8  26F7                    BNE DSEQUALL1
72AA                  DSEQUALYES
72AA  3520                    PULS Y
72AC  3506                    PULS D
72AE  1A01                    ORCC #$01
72B0  39                      RTS
72B1                  DSEQUALNO
72B1  3520                    PULS Y
72B3  3506                    PULS D
72B5  1CFE                    ANDCC #$FE
72B7  39                      RTS
                      ; DSFINDEQUAL(Y) -> B / 0
72B8                  DSFINDEQUAL
72B8  3402                    PSHS  A
72BA  C601                    LDB   #1; // fix denote 0 as "unused slot"
72BC                  DSFINDEQUALL
72BC  BD7342                  JSR   DSDESCRIPTOR
72BF  A603                    LDA   3,X
72C1  84C0                    ANDA  #$C0
72C3  81C0                    CMPA  #$C0
72C5  2708                    BEQ   DSFINDEQUALF1
72C7                  DSFINDEQUALF2
72C7  5C                      INCB
72C8  C1FF                    CMPB  #MAXSTRINGS
72CA  26F0                    BNE   DSFINDEQUALL
72CC                  DSFINDEQUALNO
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
72CC  5F                      CLRB
72CD  3582                    PULS  A,PC
72CF                  DSFINDEQUALF1
72CF  BD728F                  JSR DSEQUAL
72D2  24F3                    BCC DSFINDEQUALF2
72D4                  DSFINDEQUALYES
72D4  3582                    PULS  A,PC
                      ; DSDEFINE(Y) -> B
72D6                  DSDEFINE
72D6  8DE0                    BSR   DSFINDEQUAL
72D8  C100                    CMPB  #0
72DA  260F                    BNE   DSDEFINEE
72DC  8D4F                    BSR   DSFINDFREE
72DE  8D62                    BSR   DSDESCRIPTOR
72E0  A6A0                    LDA   ,Y+
72E2  A784                    STA ,X 
72E4  10AF01                  STY 1,X 
72E7  86C0                    LDA #$C0
72E9  A703                    STA 3,X 
72EB                  DSDEFINEE
72EB  39                      RTS
72EC                  OUT_OF_MEMORY
72EC  20FE                    BRA   OUT_OF_MEMORY
                      ; DSFREE(B)
72EE                  DSFREE
72EE  8D52                    BSR   DSDESCRIPTOR
72F0  4F                      CLRA
72F1  A703                    STA 3,X 
72F3  A784                    STA ,X 
72F5  39                      RTS
                      ; DSWRITE(B)
72F6                  DSWRITE
72F6  8D4A                    BSR   DSDESCRIPTOR
72F8  A603                    LDA 3,X 
72FA  2A23                    BPL   DSWRITED
72FC  847F                    ANDA #$7F
72FE  A703                    STA 3,X 
7300  A684                    LDA ,X 
7302  8D46                    BSR   DSCHECKFREE
7304                  DSWRITEOK
7304  10AE01                  LDY 1,X 
7307  3420                    PSHS Y
7309  BD73B3                  JSR   DSUSINGALLOC
730C  3520                    PULS Y
730E  EE01                    LDU 1,X 
7310                  DSCOPY
7310  A684                    LDA ,X 
                              
7312                  DSWRITECOPY
7312  270B                    BEQ DSWRITED
7314  3404                    PSHS B
7316                  DSWRITECOPYL
7316  E6A0                    LDB   ,Y+
7318  E7C0                    STB   ,U+
731A  4A                      DECA
731B  26F9                    BNE DSWRITECOPYL 
731D  3584                    PULS  B,PC
731F                  DSWRITED
731F  39                      RTS
                      ; DSRESIZE(B,A)
7320                  DSRESIZE
7320  8D20                    BSR   DSDESCRIPTOR
7322  A784                    STA ,X 
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$0
7324  2606                    BNE DSRESIZEDONE
7326  A603                    LDA 3,X
7328  8A80                    ORA #$80
732A  A703                    STA 3,X
732C                  DSRESIZEDONE
732C  39                      RTS
                      ; DSFINDFREE() -> B
732D                  DSFINDFREE
732D  3402                    PSHS  A
732F  C601                    LDB   #1; // fix denote 0 as "unused slot"
7331                  DSFINDFREEL
7331  8D0F                    BSR   DSDESCRIPTOR
7333  A603                    LDA   3,X
7335  8440                    ANDA  #$40
7337  2707                    BEQ   DSFINDFREEN
7339  5C                      INCB
733A  C1FF                    CMPB  #MAXSTRINGS
733C  26F3                    BNE   DSFINDFREEL
733E  20AC                    BRA   OUT_OF_MEMORY   
7340                  DSFINDFREEN
7340  3582                    PULS  A,PC
                      ; DSDESCRIPTOR(B) -> X
7342                  DSDESCRIPTOR
7342  8ECB12                  LDX   #DESCRIPTORS
7345  3A                      ABX
7346  3A                      ABX
7347  3A                      ABX
7348  3A                      ABX
7349  39                      RTS
                      ; DSCHECKFREE()
734A                  DSCHECKFREE
734A  3406                    PSHS  A,B
734C  B77355                  STA   DSCHECKFREE2x
734F                  DSCHECKFREE2
                      ; peephole(12): inlined1
                      ;       LDD   FREE_STRING
734F  CC0400                  LDD #stringsspace
7350                  FREE_STRING equ *-2
7355                  DSCHECKFREE2x SET *+3
7352  10830000                CMPD  #$0000
7356  2C04                    BGE   DSCHECKFREEOK
7358                  DSCHECKFREEKO
7358  8D04                    BSR   DSGC
735A  20F3                    BRA   DSCHECKFREE2
735C                  DSCHECKFREEOK
735C  3586                    PULS  A,B,PC
                      ; DSGC()
735E                  DSGC
735E  3410                    PSHS X
7360  CC03FF                  LDD #(max_free_string-1)
7363  FD7350                  STD FREE_STRING
7366  B673DA                  LDA USING
7369  2605                    BNE   DSGW
736B  CED30E                  LDU #TEMPORARY
736E  2003                    BRA   BSGCLOOP0
7370                  DSGW
7370  CECF0E                  LDU #WORKING
7373                  BSGCLOOP0
7373  C601                    LDB #1
7375                  DSGCLOOP
7375  3406                    PSHS A,B
7377  8DC9                    BSR   DSDESCRIPTOR
7379  A603                    LDA 3,X 
737B  2B1A                    BMI   DSGCLOOP2
737D  8440                    ANDA #$40
737F  2714                    BEQ DSGCLOOP1
7381  A684                    LDA ,X 
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$0
7383  2712                    BEQ DSGCLOOP3
7385  10AE01                  LDY 1,X 
7388  A684                    LDA ,X 
738A  8D27                    BSR   DSUSINGALLOC
738C  EE01                    LDU 1,X 
738E  A684                    LDA ,X 
7390  17FF7F                  LBSR  DSWRITECOPY
7393  2002                    BRA   DSGCLOOP3
7395                  DSGCLOOP1
                      ;    CLRA       (A already = 0 here)
7395  A784                    STA ,X 
                      ;    BRA   DSGCLOOP3
7397                  DSGCLOOP2
                              ; LDA #0
                              ; STA , X
7397                  DSGCLOOP3
7397  3506                    PULS A,B
7399  5C                      INCB
739A  C1FF                    CMPB #MAXSTRINGS
739C  26D7                    BNE DSGCLOOP
739E                  DSGCEND
739E  7373DA                  COM   USING
73A1  3590                    PULS  X,PC
                      ;OUT_OF_MEMORY2
                      ;    SYNC
                      ;    BRA OUT_OF_MEMORY
                      ; DSALLOC(A) -> B
73A3                  DSALLOC
73A3  3402                    PSHS A
73A5  8D86                    BSR   DSFINDFREE
73A7  8D99                    BSR   DSDESCRIPTOR
73A9  A603                    LDA 3,X 
73AB  8A40                    ORA   #$40
73AD  A703                    STA   3,X
73AF  3502                    PULS A
73B1  8D97                    BSR   DSCHECKFREE
73B3                  DSALLOCOK
73B3                  DSUSINGALLOC
73B3  8D18                    BSR   DSUSING
                      ;    BRA   DSMALLOC
                      ; DSMALLOC(U,A,B)
73B5                  DSMALLOC
73B5  3440                    PSHS  U
73B7  8D89                    BSR   DSDESCRIPTOR
73B9  A784                    STA ,X 
73BB  3406                    PSHS  D
73BD  FC7350                  LDD FREE_STRING
73C0  E0E4                    SUBB  ,S
73C2  8200                    SBCA  #0
73C4  FD7350                  STD   FREE_STRING
73C7  E362                    ADDD  2,S
73C9  ED01                    STD   1,X
                              
73CB  35C6                    PULS  U,D,PC
                      ; DSUSING() -> U
73CD                  DSUSING
73CD  7D73DA                  TST   USING
73D0  2704                    BEQ DSUSINGW
73D2  CED30E                  LDU #TEMPORARY
73D5  39                      RTS
73D6                  DSUSINGW
73D6  CECF0E                  LDU #WORKING
73D9  39                      RTS
73DA                  USING 
73DA  00                      FCB   0
                              
73DB                  DSINIT
73DB  108E0BFC                LDY #((stringscount*4+stringsspace*2))
73DF  8ECB12                  LDX #DESCRIPTORS
73E2                  DSINITL1
73E2  A780                    STA ,X+
73E4  313F                    LEAY -1,Y 
73E6  108C0000                CMPY #$0
73EA  26F6                    BNE DSINITL1
73EC  39                      RTS
73ED                  dstring_after
                      ; peephole(12): inlined1
                      ;       LDB _event_handler_Ttmp6
73ED  C600                    LDB #1-1
73EE                  _event_handler_Ttmp6 equ *-1
73EF  BD72EE                  JSR DSFREE
73F2  108ECB0E                LDY #_event_handler_Tstr4
73F6  BD72D6                  JSR DSDEFINE
73F9  F773EE                  STB _event_handler_Ttmp6
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp6
73FC  BD7342                  JSR DSDESCRIPTOR
73FF  EC01                    LDD 1,X 
7401  FDC187                  STD _event_handler_Ttmp9
7404  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp10
7406  97FB                    STA <(_event_handler_Ttmp10)
7408  F6C170                  LDB _event_handler_key
740B  BD72EE                  JSR DSFREE
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
740E  96FB                    LDA <(_event_handler_Ttmp10)
7410  BD73A3                  JSR DSALLOC
7413  F7C170                  STB _event_handler_key
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_key
7416  BD7342                  JSR DSDESCRIPTOR
7419  EC01                    LDD 1,X 
                      ; peephole(12): direct-page1
                      ;       STD _event_handler_Ttmp11
741B  DDFD                    STD <(_event_handler_Ttmp11)
741D  A684                    LDA ,X 
741F  B7C1EC                  STA _event_handler_Ttmp12
                              IF (((128+cpu_mem_move_after-(*+2))|(127-cpu_mem_move_after+(*+2)))&0x8000)
                              JMP cpu_mem_move_after
                              ELSE
7422  2000                    BRA cpu_mem_move_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ; CPUMEMMOVE
                      ;     CMPU #0
                      ;     BEQ CPUMEMMOVEDONE
                      ; CPUMEMMOVEL1
                      ;     LDA ,Y+
                      ;     STA ,X+
                      ;     LEAU -1,U
                      ;     CMPU #$0
                      ;     BNE CPUMEMMOVEL1
                      ; CPUMEMMOVEDONE
                      ;     RTS
7424                  cpu_mem_move_after
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7424  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
7425  D6FB                    LDB <(_event_handler_Ttmp10)
7427  10BEC187                LDY _event_handler_Ttmp9
                      ; peephole(12): direct-page1
                      ;       LDX _event_handler_Ttmp11
742B  9EFD                    LDX <(_event_handler_Ttmp11)
742D  BD6507                  JSR DUFFDEVICE
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp9
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp11
                              ; Q _event_handler_Ttmp12
                              ; VSP
                              ; P:264
                              ; L:107
7430  F6CB0C                  LDB _event_handler_Tstr13
7433  F7C1EB                  STB _event_handler_Ttmp8
7436  F6C170                  LDB _event_handler_key
7439  BD7342                  JSR DSDESCRIPTOR
743C  EC01                    LDD 1,X 
743E  FDC187                  STD _event_handler_Ttmp9
7441  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
7443  97F4                    STA <(_event_handler_Ttmp7)
7445  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
7446  97FC                    STA <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
7448  D6F4                    LDB <(_event_handler_Ttmp7)
744A  F1C1EB                  CMPB _event_handler_Ttmp8
                              IF (((128+_label15-(*+2))|(127-_label15+(*+2)))&0x8000)
                              LBNE _label15
                              ELSE
744D  2657                    BNE _label15
                              ENDIF
744F  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7451  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
7453  D6F4                    LDB <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label15-(*+2))|(127-_label15+(*+2)))&0x8000)
                              LBEQ _label15
                              ELSE
7455  274F                    BEQ _label15
                              ENDIF
7457  CCCB0C                  LDD #_event_handler_Tstr13
                      ; peephole(12): direct-page1
                      ;       STD _event_handler_Ttmp11
745A  DDFD                    STD <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11+1
745C  0CFE                    INC <(_event_handler_Ttmp11+1)
745E  2602                    BNE _label17
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11
7460  0CFD                    INC <(_event_handler_Ttmp11)
7462                  _label17
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7462  96F4                    LDA <(_event_handler_Ttmp7)
7464  2736                    BEQ _label18equal
7466  10BEC187                LDY _event_handler_Ttmp9
                      ; peephole(12): direct-page1
                      ;       LDX _event_handler_Ttmp11
746A  9EFD                    LDX <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
746C  96F4                    LDA <(_event_handler_Ttmp7)
746E  8480                    ANDA #$80
7470  2717                    BEQ _label18second
7472                  _label18first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7472  4F                      CLRA
7473                  _label18loop
7473  E686                    LDB A,X
7475  E1A6                    CMPB A,Y
7477  262A                    BNE _label18diff
7479  8B01                    ADDA #1
747B  817F                    CMPA #$7F
747D  26F4                    BNE _label18loop
747F  31A87F                  LEAY 127,Y
7482  30887F                  LEAX 127,X
7485  3121                    LEAY 1,Y
7487  3001                    LEAX 1,X
7489                  _label18second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7489  96F4                    LDA <(_event_handler_Ttmp7)
748B  847F                    ANDA #$7f
748D  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
748F  4F                      CLRA
7490                  _label18loop2
7490  E686                    LDB A,X
7492  E1A6                    CMPB A,Y
7494  260D                    BNE _label18diff
7496  8B01                    ADDA #1
7498  9114                    CMPA <MATHPTR0
749A  26F4                    BNE _label18loop2
749C                  _label18equal
749C  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
749E  97FC                    STA <(_event_handler_Ttmp16)
74A0  7E74A6                  JMP _label18final
74A3                  _label18diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
74A3  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
74A4  97FC                    STA <(_event_handler_Ttmp16)
74A6                  _label18final
74A6                  _label15
74A6  F6CB0A                  LDB _event_handler_Tstr19
74A9  F7C1EC                  STB _event_handler_Ttmp12
74AC  F6C170                  LDB _event_handler_key
74AF  BD7342                  JSR DSDESCRIPTOR
74B2  EC01                    LDD 1,X 
74B4  FDC189                  STD _event_handler_Ttmp23
74B7  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp10
74B9  97FB                    STA <(_event_handler_Ttmp10)
74BB  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
74BC  97FF                    STA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
74BE  D6FB                    LDB <(_event_handler_Ttmp10)
74C0  F1C1EC                  CMPB _event_handler_Ttmp12
                              IF (((128+_label21-(*+2))|(127-_label21+(*+2)))&0x8000)
                              LBNE _label21
                              ELSE
74C3  265B                    BNE _label21
                              ENDIF
74C5  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp22
74C7  D7FF                    STB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
74C9  D6FB                    LDB <(_event_handler_Ttmp10)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label21-(*+2))|(127-_label21+(*+2)))&0x8000)
                              LBEQ _label21
                              ELSE
74CB  2753                    BEQ _label21
                              ENDIF
74CD  CCCB0A                  LDD #_event_handler_Tstr19
74D0  FDC18B                  STD _event_handler_Ttmp24
74D3  7CC18C                  INC _event_handler_Ttmp24+1
74D6  2603                    BNE _label25
74D8  7CC18B                  INC _event_handler_Ttmp24
74DB                  _label25
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
74DB  96FB                    LDA <(_event_handler_Ttmp10)
74DD  2737                    BEQ _label26equal
74DF  10BEC189                LDY _event_handler_Ttmp23
74E3  BEC18B                  LDX _event_handler_Ttmp24
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
74E6  96FB                    LDA <(_event_handler_Ttmp10)
74E8  8480                    ANDA #$80
74EA  2717                    BEQ _label26second
74EC                  _label26first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
74EC  4F                      CLRA
74ED                  _label26loop
74ED  E686                    LDB A,X
74EF  E1A6                    CMPB A,Y
74F1  262A                    BNE _label26diff
74F3  8B01                    ADDA #1
74F5  817F                    CMPA #$7F
74F7  26F4                    BNE _label26loop
74F9  31A87F                  LEAY 127,Y
74FC  30887F                  LEAX 127,X
74FF  3121                    LEAY 1,Y
7501  3001                    LEAX 1,X
7503                  _label26second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
7503  96FB                    LDA <(_event_handler_Ttmp10)
7505  847F                    ANDA #$7f
7507  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7509  4F                      CLRA
750A                  _label26loop2
750A  E686                    LDB A,X
750C  E1A6                    CMPB A,Y
750E  260D                    BNE _label26diff
7510  8B01                    ADDA #1
7512  9114                    CMPA <MATHPTR0
7514  26F4                    BNE _label26loop2
7516                  _label26equal
7516  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7518  97FF                    STA <(_event_handler_Ttmp22)
751A  7E7520                  JMP _label26final
751D                  _label26diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
751D  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
751E  97FF                    STA <(_event_handler_Ttmp22)
7520                  _label26final
7520                  _label21
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp22
7520  D6FF                    LDB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       ORB _event_handler_Ttmp16
7522  DAFC                    ORB <(_event_handler_Ttmp16)
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp27
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp27
                              IF (((128+_label29e0-(*+2))|(127-_label29e0+(*+2)))&0x8000)
                              LBEQ _label29e0
                              ELSE
7524  2732                    BEQ _label29e0
                              ENDIF
7526                  _label29t
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp9
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp11
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp16
                              ; Q _event_handler_Ttmp22
                              ; Q _event_handler_Ttmp23
                              ; Q _event_handler_Ttmp24
                              ; VSP
                              ; P:156
                              ; L:108
                      ; peephole(12): inlined1
                      ;       LDD _event_handler_map_pos
7526  CC0000                  LDD #$0000
7527                  _event_handler_map_pos equ *-2
7529  8EBD00                  LDX #_world_map
752C  308B                    LEAX D,X
752E  A684                    LDA ,X
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
7530  97F4                    STA <(_event_handler_Ttmp7)
                              ; move from array to = _event_handler_Ttmp7
7532  4F                      CLRA
7533  B7C1EB                  STA _event_handler_Ttmp8
7536  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7537  96F4                    LDA <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
7539  2601                    BNE _label33
753B  5A                      DECB
753C                  _label33
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
753C  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp16
                              IF (((128+_label34e0-(*+2))|(127-_label34e0+(*+2)))&0x8000)
                              LBEQ _label34e0
                              ELSE
753E  2718                    BEQ _label34e0
                              ENDIF
7540                  _label34t
                              ; Q _event_handler_Ttmp7
                              ; V _event_handler_Ttmp8
                              ; VSP
                              ; P:21
                              ; L:109
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$80
7540  CC0080                  LDD #$0080
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7543  97FF                    STA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp7
7545  D7F4                    STB <(_event_handler_Ttmp7)
                      ;       CLRA
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp22
7547  D6FF                    LDB <(_event_handler_Ttmp22)
7549  F7C1EB                  STB _event_handler_Ttmp8
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp8
                      ; peephole(12): direct-page1
                      ;       SUBB _event_handler_Ttmp7
754C  D0F4                    SUBB <(_event_handler_Ttmp7)
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp35
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp35
754E  1D                      SEX
754F  FDC18D                  STD _event_handler_Ttmp36
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp36
                      ; peephole(12): inlined1
                      ;       ADDD _pos_x
7552  C31200                  ADDD #$1200
7553                  _pos_x equ *-2
7555  FD7553                  STD _pos_x
                              ; V _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp22
                              ; Q _event_handler_Ttmp35
                              ; Q _event_handler_Ttmp36
                              ; VSP
                              ; P:15
                              ; L:110
7558                  _label34f
7558                  _label34e0
                              ; Q _event_handler_Ttmp16
                              ; VSP
                              ; P:2
                              ; L:111
7558                  _label29f
7558                  _label29e0
                              ; Q _event_handler_Ttmp27
                              ; VSP
                              ; P:2
                              ; L:112
7558  F6CB08                  LDB _event_handler_Tstr37
755B  F7C1EB                  STB _event_handler_Ttmp8
755E  F6C170                  LDB _event_handler_key
7561  BD7342                  JSR DSDESCRIPTOR
7564  EC01                    LDD 1,X 
7566  FDC187                  STD _event_handler_Ttmp9
7569  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
756B  97F4                    STA <(_event_handler_Ttmp7)
756D  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
756E  97FC                    STA <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
7570  D6F4                    LDB <(_event_handler_Ttmp7)
7572  F1C1EB                  CMPB _event_handler_Ttmp8
                              IF (((128+_label39-(*+2))|(127-_label39+(*+2)))&0x8000)
                              LBNE _label39
                              ELSE
7575  2657                    BNE _label39
                              ENDIF
7577  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7579  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
757B  D6F4                    LDB <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label39-(*+2))|(127-_label39+(*+2)))&0x8000)
                              LBEQ _label39
                              ELSE
757D  274F                    BEQ _label39
                              ENDIF
757F  CCCB08                  LDD #_event_handler_Tstr37
                      ; peephole(12): direct-page1
                      ;       STD _event_handler_Ttmp11
7582  DDFD                    STD <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11+1
7584  0CFE                    INC <(_event_handler_Ttmp11+1)
7586  2602                    BNE _label40
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11
7588  0CFD                    INC <(_event_handler_Ttmp11)
758A                  _label40
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
758A  96F4                    LDA <(_event_handler_Ttmp7)
758C  2736                    BEQ _label41equal
758E  10BEC187                LDY _event_handler_Ttmp9
                      ; peephole(12): direct-page1
                      ;       LDX _event_handler_Ttmp11
7592  9EFD                    LDX <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7594  96F4                    LDA <(_event_handler_Ttmp7)
7596  8480                    ANDA #$80
7598  2717                    BEQ _label41second
759A                  _label41first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
759A  4F                      CLRA
759B                  _label41loop
759B  E686                    LDB A,X
759D  E1A6                    CMPB A,Y
759F  262A                    BNE _label41diff
75A1  8B01                    ADDA #1
75A3  817F                    CMPA #$7F
75A5  26F4                    BNE _label41loop
75A7  31A87F                  LEAY 127,Y
75AA  30887F                  LEAX 127,X
75AD  3121                    LEAY 1,Y
75AF  3001                    LEAX 1,X
75B1                  _label41second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
75B1  96F4                    LDA <(_event_handler_Ttmp7)
75B3  847F                    ANDA #$7f
75B5  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
75B7  4F                      CLRA
75B8                  _label41loop2
75B8  E686                    LDB A,X
75BA  E1A6                    CMPB A,Y
75BC  260D                    BNE _label41diff
75BE  8B01                    ADDA #1
75C0  9114                    CMPA <MATHPTR0
75C2  26F4                    BNE _label41loop2
75C4                  _label41equal
75C4  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
75C6  97FC                    STA <(_event_handler_Ttmp16)
75C8  7E75CE                  JMP _label41final
75CB                  _label41diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
75CB  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
75CC  97FC                    STA <(_event_handler_Ttmp16)
75CE                  _label41final
75CE                  _label39
75CE  F6CB06                  LDB _event_handler_Tstr42
75D1  F7C1EC                  STB _event_handler_Ttmp12
75D4  F6C170                  LDB _event_handler_key
75D7  BD7342                  JSR DSDESCRIPTOR
75DA  EC01                    LDD 1,X 
75DC  FDC189                  STD _event_handler_Ttmp23
75DF  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp10
75E1  97FB                    STA <(_event_handler_Ttmp10)
75E3  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
75E4  97FF                    STA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
75E6  D6FB                    LDB <(_event_handler_Ttmp10)
75E8  F1C1EC                  CMPB _event_handler_Ttmp12
                              IF (((128+_label44-(*+2))|(127-_label44+(*+2)))&0x8000)
                              LBNE _label44
                              ELSE
75EB  265B                    BNE _label44
                              ENDIF
75ED  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp22
75EF  D7FF                    STB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
75F1  D6FB                    LDB <(_event_handler_Ttmp10)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label44-(*+2))|(127-_label44+(*+2)))&0x8000)
                              LBEQ _label44
                              ELSE
75F3  2753                    BEQ _label44
                              ENDIF
75F5  CCCB06                  LDD #_event_handler_Tstr42
75F8  FDC18B                  STD _event_handler_Ttmp24
75FB  7CC18C                  INC _event_handler_Ttmp24+1
75FE  2603                    BNE _label45
7600  7CC18B                  INC _event_handler_Ttmp24
7603                  _label45
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
7603  96FB                    LDA <(_event_handler_Ttmp10)
7605  2737                    BEQ _label46equal
7607  10BEC189                LDY _event_handler_Ttmp23
760B  BEC18B                  LDX _event_handler_Ttmp24
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
760E  96FB                    LDA <(_event_handler_Ttmp10)
7610  8480                    ANDA #$80
7612  2717                    BEQ _label46second
7614                  _label46first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7614  4F                      CLRA
7615                  _label46loop
7615  E686                    LDB A,X
7617  E1A6                    CMPB A,Y
7619  262A                    BNE _label46diff
761B  8B01                    ADDA #1
761D  817F                    CMPA #$7F
761F  26F4                    BNE _label46loop
7621  31A87F                  LEAY 127,Y
7624  30887F                  LEAX 127,X
7627  3121                    LEAY 1,Y
7629  3001                    LEAX 1,X
762B                  _label46second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
762B  96FB                    LDA <(_event_handler_Ttmp10)
762D  847F                    ANDA #$7f
762F  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7631  4F                      CLRA
7632                  _label46loop2
7632  E686                    LDB A,X
7634  E1A6                    CMPB A,Y
7636  260D                    BNE _label46diff
7638  8B01                    ADDA #1
763A  9114                    CMPA <MATHPTR0
763C  26F4                    BNE _label46loop2
763E                  _label46equal
763E  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7640  97FF                    STA <(_event_handler_Ttmp22)
7642  7E7648                  JMP _label46final
7645                  _label46diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
7645  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7646  97FF                    STA <(_event_handler_Ttmp22)
7648                  _label46final
7648                  _label44
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp22
7648  D6FF                    LDB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       ORB _event_handler_Ttmp16
764A  DAFC                    ORB <(_event_handler_Ttmp16)
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp27
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp27
                              IF (((128+_label48e0-(*+2))|(127-_label48e0+(*+2)))&0x8000)
                              LBEQ _label48e0
                              ELSE
764C  2728                    BEQ _label48e0
                              ENDIF
764E                  _label48t
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp9
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp11
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp16
                              ; Q _event_handler_Ttmp22
                              ; Q _event_handler_Ttmp23
                              ; Q _event_handler_Ttmp24
                              ; VSP
                              ; P:156
                              ; L:113
764E  FC7527                  LDD _event_handler_map_pos
7651  8EBD00                  LDX #_world_map
7654  308B                    LEAX D,X
7656  A684                    LDA ,X
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
7658  97F4                    STA <(_event_handler_Ttmp7)
                              ; move from array to = _event_handler_Ttmp7
765A  4F                      CLRA
765B  B7C1EB                  STA _event_handler_Ttmp8
765E  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
765F  96F4                    LDA <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
7661  2601                    BNE _label52
7663  5A                      DECB
7664                  _label52
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7664  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp16
                              IF (((128+_label53e0-(*+2))|(127-_label53e0+(*+2)))&0x8000)
                              LBEQ _label53e0
                              ELSE
7666  270E                    BEQ _label53e0
                              ENDIF
7668                  _label53t
                              ; Q _event_handler_Ttmp7
                              ; V _event_handler_Ttmp8
                              ; VSP
                              ; P:21
                              ; L:114
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$80
7668  CC0080                  LDD #$0080
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp7
766B  D7F4                    STB <(_event_handler_Ttmp7)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp7
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
766D  FDC18D                  STD _event_handler_Ttmp36
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp36
7670  F37553                  ADDD _pos_x
7673  FD7553                  STD _pos_x
                              ; V _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; V _event_handler_Ttmp36
                              ; VSP
                              ; P:8
                              ; L:115
7676                  _label53f
7676                  _label53e0
                              ; Q _event_handler_Ttmp16
                              ; VSP
                              ; P:2
                              ; L:116
7676                  _label48f
7676                  _label48e0
                              ; Q _event_handler_Ttmp27
                              ; VSP
                              ; P:2
                              ; L:117
7676  F6CB0E                  LDB _event_handler_Tstr54
7679  F7C1EB                  STB _event_handler_Ttmp8
767C  F6C170                  LDB _event_handler_key
767F  BD7342                  JSR DSDESCRIPTOR
7682  EC01                    LDD 1,X 
7684  FDC187                  STD _event_handler_Ttmp9
7687  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
7689  97F4                    STA <(_event_handler_Ttmp7)
768B  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
768C  97FC                    STA <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
768E  D6F4                    LDB <(_event_handler_Ttmp7)
7690  F1C1EB                  CMPB _event_handler_Ttmp8
                              IF (((128+_label55-(*+2))|(127-_label55+(*+2)))&0x8000)
                              LBNE _label55
                              ELSE
7693  2657                    BNE _label55
                              ENDIF
7695  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7697  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
7699  D6F4                    LDB <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label55-(*+2))|(127-_label55+(*+2)))&0x8000)
                              LBEQ _label55
                              ELSE
769B  274F                    BEQ _label55
                              ENDIF
769D  CCCB0E                  LDD #_event_handler_Tstr54
                      ; peephole(12): direct-page1
                      ;       STD _event_handler_Ttmp11
76A0  DDFD                    STD <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11+1
76A2  0CFE                    INC <(_event_handler_Ttmp11+1)
76A4  2602                    BNE _label56
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11
76A6  0CFD                    INC <(_event_handler_Ttmp11)
76A8                  _label56
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
76A8  96F4                    LDA <(_event_handler_Ttmp7)
76AA  2736                    BEQ _label57equal
76AC  10BEC187                LDY _event_handler_Ttmp9
                      ; peephole(12): direct-page1
                      ;       LDX _event_handler_Ttmp11
76B0  9EFD                    LDX <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
76B2  96F4                    LDA <(_event_handler_Ttmp7)
76B4  8480                    ANDA #$80
76B6  2717                    BEQ _label57second
76B8                  _label57first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
76B8  4F                      CLRA
76B9                  _label57loop
76B9  E686                    LDB A,X
76BB  E1A6                    CMPB A,Y
76BD  262A                    BNE _label57diff
76BF  8B01                    ADDA #1
76C1  817F                    CMPA #$7F
76C3  26F4                    BNE _label57loop
76C5  31A87F                  LEAY 127,Y
76C8  30887F                  LEAX 127,X
76CB  3121                    LEAY 1,Y
76CD  3001                    LEAX 1,X
76CF                  _label57second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
76CF  96F4                    LDA <(_event_handler_Ttmp7)
76D1  847F                    ANDA #$7f
76D3  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
76D5  4F                      CLRA
76D6                  _label57loop2
76D6  E686                    LDB A,X
76D8  E1A6                    CMPB A,Y
76DA  260D                    BNE _label57diff
76DC  8B01                    ADDA #1
76DE  9114                    CMPA <MATHPTR0
76E0  26F4                    BNE _label57loop2
76E2                  _label57equal
76E2  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
76E4  97FC                    STA <(_event_handler_Ttmp16)
76E6  7E76EC                  JMP _label57final
76E9                  _label57diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
76E9  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
76EA  97FC                    STA <(_event_handler_Ttmp16)
76EC                  _label57final
76EC                  _label55
76EC  F6CB04                  LDB _event_handler_Tstr58
76EF  F7C1EC                  STB _event_handler_Ttmp12
76F2  F6C170                  LDB _event_handler_key
76F5  BD7342                  JSR DSDESCRIPTOR
76F8  EC01                    LDD 1,X 
76FA  FDC189                  STD _event_handler_Ttmp23
76FD  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp10
76FF  97FB                    STA <(_event_handler_Ttmp10)
7701  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7702  97FF                    STA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
7704  D6FB                    LDB <(_event_handler_Ttmp10)
7706  F1C1EC                  CMPB _event_handler_Ttmp12
                              IF (((128+_label60-(*+2))|(127-_label60+(*+2)))&0x8000)
                              LBNE _label60
                              ELSE
7709  265B                    BNE _label60
                              ENDIF
770B  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp22
770D  D7FF                    STB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
770F  D6FB                    LDB <(_event_handler_Ttmp10)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label60-(*+2))|(127-_label60+(*+2)))&0x8000)
                              LBEQ _label60
                              ELSE
7711  2753                    BEQ _label60
                              ENDIF
7713  CCCB04                  LDD #_event_handler_Tstr58
7716  FDC18B                  STD _event_handler_Ttmp24
7719  7CC18C                  INC _event_handler_Ttmp24+1
771C  2603                    BNE _label61
771E  7CC18B                  INC _event_handler_Ttmp24
7721                  _label61
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
7721  96FB                    LDA <(_event_handler_Ttmp10)
7723  2737                    BEQ _label62equal
7725  10BEC189                LDY _event_handler_Ttmp23
7729  BEC18B                  LDX _event_handler_Ttmp24
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
772C  96FB                    LDA <(_event_handler_Ttmp10)
772E  8480                    ANDA #$80
7730  2717                    BEQ _label62second
7732                  _label62first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7732  4F                      CLRA
7733                  _label62loop
7733  E686                    LDB A,X
7735  E1A6                    CMPB A,Y
7737  262A                    BNE _label62diff
7739  8B01                    ADDA #1
773B  817F                    CMPA #$7F
773D  26F4                    BNE _label62loop
773F  31A87F                  LEAY 127,Y
7742  30887F                  LEAX 127,X
7745  3121                    LEAY 1,Y
7747  3001                    LEAX 1,X
7749                  _label62second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
7749  96FB                    LDA <(_event_handler_Ttmp10)
774B  847F                    ANDA #$7f
774D  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
774F  4F                      CLRA
7750                  _label62loop2
7750  E686                    LDB A,X
7752  E1A6                    CMPB A,Y
7754  260D                    BNE _label62diff
7756  8B01                    ADDA #1
7758  9114                    CMPA <MATHPTR0
775A  26F4                    BNE _label62loop2
775C                  _label62equal
775C  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
775E  97FF                    STA <(_event_handler_Ttmp22)
7760  7E7766                  JMP _label62final
7763                  _label62diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
7763  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7764  97FF                    STA <(_event_handler_Ttmp22)
7766                  _label62final
7766                  _label60
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp22
7766  D6FF                    LDB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       ORB _event_handler_Ttmp16
7768  DAFC                    ORB <(_event_handler_Ttmp16)
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp27
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp27
                              IF (((128+_label64e0-(*+2))|(127-_label64e0+(*+2)))&0x8000)
776A  102700D8                LBEQ _label64e0
                              ELSE
                              BEQ _label64e0
                              ENDIF
776E                  _label64t
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp9
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp11
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp16
                              ; Q _event_handler_Ttmp22
                              ; Q _event_handler_Ttmp23
                              ; Q _event_handler_Ttmp24
                              ; VSP
                              ; P:156
                              ; L:118
776E  CC0167                  LDD #$0167
7771  FDC18D                  STD _event_handler_Ttmp36
7774  CC0167                  LDD #$0167
7777  F3C10A                  ADDD _angle
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
777A  FDC10A                  STD _angle
                              ; Q _event_handler_Ttmp7
                              ; V _event_handler_Ttmp36
                              ; Q _event_handler_Ttmp65
                              ; VSP
                              ; P:7
                              ; L:119
777D  CC0168                  LDD #$0168
7780  FDC18D                  STD _event_handler_Ttmp36
7783  FCC10A                  LDD _angle
7786  FD782C                  STD _event_handler_Ttmp66
                              IF (((128+cpu_math_div_16bit_to_16bit_after-(*+2))|(127-cpu_math_div_16bit_to_16bit_after+(*+2)))&0x8000)
7789  7E782B                  JMP cpu_math_div_16bit_to_16bit_after
                              ELSE
                              BRA cpu_math_div_16bit_to_16bit_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ; unsigned division
                      ; D=D/X X=D.mod.X
                      ; http://www.logicielsmoto.com/phpBB/viewtopic.php?p=1090#p1090
778C                  CPUMATHDIV16BITTO16BIT_fast
778C  3410                    PSHS  X
778E  E7E4                    STB   ,S
7790  E661                    LDB   1,S
7792  5A                      DECB
7793  C501                    BITB  #1
7795  2606                    BNE   CPUMATHDIV16BITTO16BIT_remainder
                              
7797  E6E4                    LDB   ,S
7799                  CPUMATHDIV16BITTO16BIT_slow
7799  EDE4                    STD   ,S
779B  203F                    BRA   CPUMATHDIV16BITTO16BIT0  
779D                  CPUMATHDIV16BITTO16BIT_remainder
779D  E4E4                    ANDB  ,S
779F  E761                    STB   1,S   
77A1  E6E4                    LDB   ,S
77A3  6FE4                    CLR   ,S
77A5  6E9977B3                JMP   [CPUMATHDIV16BITTO16BIT_tab-2,X]
77A9                  CPUMATHDIV16BITTO16BIT_fast32
77A9  44                      LSRA
77AA  56                      RORB
77AB                  CPUMATHDIV16BITTO16BIT_fast16    
77AB  44                      LSRA
77AC  56                      RORB
77AD                  CPUMATHDIV16BITTO16BIT_fast8    
77AD  44                      LSRA
77AE  56                      RORB
77AF                  CPUMATHDIV16BITTO16BIT_fast4    
77AF  44                      LSRA
77B0  56                      RORB
77B1                  CPUMATHDIV16BITTO16BIT_fast2    
77B1  44                      LSRA
77B2  56                      RORB
77B3  3590                    PULS  X,PC
77B5                  CPUMATHDIV16BITTO16BIT_tab
77B5  77B1                    FDB   CPUMATHDIV16BITTO16BIT_fast2
77B7  77AF                    FDB   CPUMATHDIV16BITTO16BIT_fast4
77B9  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77BB  77AD                    FDB   CPUMATHDIV16BITTO16BIT_fast8
77BD  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77BF  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77C1  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77C3  77AB                    FDB   CPUMATHDIV16BITTO16BIT_fast16
77C5  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77C7  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77C9  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77CB  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77CD  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77CF  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77D1  7799                    FDB   CPUMATHDIV16BITTO16BIT_slow
77D3  77A9                    FDB   CPUMATHDIV16BITTO16BIT_fast32
                              
77D5                  CPUMATHDIV16BITTO16BIT
77D5  8C0020                  CMPX  #32
77D8  23B2                    BLS   CPUMATHDIV16BITTO16BIT_fast
                              
77DA  3406                    PSHS  D
77DC                  CPUMATHDIV16BITTO16BIT0
77DC  BF77F6                  STX   CPUMATHDIV16BITTO16BITL2-2
77DF  BF77F1                  STX   CPUMATHDIV16BITTO16BITL2-7
77E2  3161                    LEAY  1,S
77E4  4F                      CLRA
77E5  5F                      CLRB
77E6  8E0010                  LDX   #16
77E9                  CPUMATHDIV16BITTO16BITL1    
77E9  69A4                    ROL   ,Y
77EB  69E4                    ROL   ,S
77ED  59                      ROLB
77EE  49                      ROLA
77EF  10835555                CMPD  #$5555
77F3  2503                    BCS   CPUMATHDIV16BITTO16BITL2
77F5  835555                  SUBD  #$5555
77F8                  CPUMATHDIV16BITTO16BITL2
77F8  301F                    LEAX  -1,X
77FA  26ED                    BNE CPUMATHDIV16BITTO16BITL1
77FC  1F01                    TFR   D,X
77FE  3506                    PULS  D
7800  59                      ROLB
7801  49                      ROLA
7802  53                      COMB
7803  43                      COMA
7804  39                      RTS
7805                  CPUMATHDIV16BITTO16BIT_SIGNED
7805  DD14                    STD   <MATHPTR0
7807  9F16                    STX   <MATHPTR2
7809  9816                    EORA  <MATHPTR2 ; compute sign of result
780B  9719                    STA   <MATHPTR5 ; store it on stack
780D  CC0000                  LDD   #0        ; D=-X
7810  9316                    SUBD  <MATHPTR2 ; X < 0 ?
7812  2B02                    BMI   CPUMATHDIV16BITTO16BIT_SIGNED1
7814  DD16                    STD   <MATHPTR2 ; yes ==> repmace with -X
7816                  CPUMATHDIV16BITTO16BIT_SIGNED1
7816  9E16                    LDX   <MATHPTR2
7818  DC14                    LDD   <MATHPTR0 ; D < 0 ?
781A  2A04                    BPL   CPUMATHDIV16BITTO16BIT_SIGNED2
781C  40                      NEGA            ; yes => negate D
781D  50                      NEGB
781E  8200                    SBCA  #0
7820                  CPUMATHDIV16BITTO16BIT_SIGNED2    
7820  8DB3                    BSR   CPUMATHDIV16BITTO16BIT
7822  0D19                    TST   <MATHPTR5 ; get sign of result
7824  2A04                    BPL   CPUMATHDIV16BITTO16BIT_SIGNED3    
7826  40                      NEGA            ; negative ? 
7827  50                      NEGB            ; yes => negate D
7828  8200                    SBCA  #0
782A                  CPUMATHDIV16BITTO16BIT_SIGNED3
782A  39                      RTS
782B                  cpu_math_div_16bit_to_16bit_after
                      ; peephole(12): inlined1
                      ;       LDD _event_handler_Ttmp66
782B  CC0000                  LDD #$0000
782C                  _event_handler_Ttmp66 equ *-2
782E  BEC18D                  LDX _event_handler_Ttmp36
7831  BD77D5                  JSR CPUMATHDIV16BITTO16BIT
7834  BFC18F                  STX _event_handler_Ttmp68
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp67
7837  FCC18F                  LDD _event_handler_Ttmp68
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
783A  FDC10A                  STD _angle
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; V _event_handler_Ttmp36
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Ttmp66
                              ; Q _event_handler_Ttmp67
                              ; Q _event_handler_Ttmp68
                              ; VSP
                              ; P:126
                              ; L:120
783D  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
783F  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp16
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp7
7841  D7F4                    STB <(_event_handler_Ttmp7)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp7
7843  F7C16F                  STB _event_handler_compute_dir
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp16
                              ; VSP
                              ; P:6
                              ; L:121
7846                  _label64f
7846                  _label64e0
                              ; Q _event_handler_Ttmp27
                              ; VSP
                              ; P:2
                              ; L:122
7846  F6CB02                  LDB _event_handler_Tstr69
7849  F7C1EB                  STB _event_handler_Ttmp8
784C  F6C170                  LDB _event_handler_key
784F  BD7342                  JSR DSDESCRIPTOR
7852  EC01                    LDD 1,X 
7854  FDC187                  STD _event_handler_Ttmp9
7857  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp7
7859  97F4                    STA <(_event_handler_Ttmp7)
785B  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
785C  97FC                    STA <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
785E  D6F4                    LDB <(_event_handler_Ttmp7)
7860  F1C1EB                  CMPB _event_handler_Ttmp8
                              IF (((128+_label71-(*+2))|(127-_label71+(*+2)))&0x8000)
                              LBNE _label71
                              ELSE
7863  2657                    BNE _label71
                              ENDIF
7865  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7867  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp7
7869  D6F4                    LDB <(_event_handler_Ttmp7)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label71-(*+2))|(127-_label71+(*+2)))&0x8000)
                              LBEQ _label71
                              ELSE
786B  274F                    BEQ _label71
                              ENDIF
786D  CCCB02                  LDD #_event_handler_Tstr69
                      ; peephole(12): direct-page1
                      ;       STD _event_handler_Ttmp11
7870  DDFD                    STD <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11+1
7872  0CFE                    INC <(_event_handler_Ttmp11+1)
7874  2602                    BNE _label72
                      ; peephole(12): direct-page1
                      ;       INC _event_handler_Ttmp11
7876  0CFD                    INC <(_event_handler_Ttmp11)
7878                  _label72
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7878  96F4                    LDA <(_event_handler_Ttmp7)
787A  2736                    BEQ _label73equal
787C  10BEC187                LDY _event_handler_Ttmp9
                      ; peephole(12): direct-page1
                      ;       LDX _event_handler_Ttmp11
7880  9EFD                    LDX <(_event_handler_Ttmp11)
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
7882  96F4                    LDA <(_event_handler_Ttmp7)
7884  8480                    ANDA #$80
7886  2717                    BEQ _label73second
7888                  _label73first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7888  4F                      CLRA
7889                  _label73loop
7889  E686                    LDB A,X
788B  E1A6                    CMPB A,Y
788D  262A                    BNE _label73diff
788F  8B01                    ADDA #1
7891  817F                    CMPA #$7F
7893  26F4                    BNE _label73loop
7895  31A87F                  LEAY 127,Y
7898  30887F                  LEAX 127,X
789B  3121                    LEAY 1,Y
789D  3001                    LEAX 1,X
789F                  _label73second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp7
789F  96F4                    LDA <(_event_handler_Ttmp7)
78A1  847F                    ANDA #$7f
78A3  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
78A5  4F                      CLRA
78A6                  _label73loop2
78A6  E686                    LDB A,X
78A8  E1A6                    CMPB A,Y
78AA  260D                    BNE _label73diff
78AC  8B01                    ADDA #1
78AE  9114                    CMPA <MATHPTR0
78B0  26F4                    BNE _label73loop2
78B2                  _label73equal
78B2  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
78B4  97FC                    STA <(_event_handler_Ttmp16)
78B6  7E78BC                  JMP _label73final
78B9                  _label73diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
78B9  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp16
78BA  97FC                    STA <(_event_handler_Ttmp16)
78BC                  _label73final
78BC                  _label71
78BC  F6CB00                  LDB _event_handler_Tstr74
78BF  F7C1EC                  STB _event_handler_Ttmp12
78C2  F6C170                  LDB _event_handler_key
78C5  BD7342                  JSR DSDESCRIPTOR
78C8  EC01                    LDD 1,X 
78CA  FDC189                  STD _event_handler_Ttmp23
78CD  A684                    LDA ,X 
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp10
78CF  97FB                    STA <(_event_handler_Ttmp10)
78D1  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
78D2  97FF                    STA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
78D4  D6FB                    LDB <(_event_handler_Ttmp10)
78D6  F1C1EC                  CMPB _event_handler_Ttmp12
                              IF (((128+_label76-(*+2))|(127-_label76+(*+2)))&0x8000)
                              LBNE _label76
                              ELSE
78D9  265B                    BNE _label76
                              ENDIF
78DB  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp22
78DD  D7FF                    STB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp10
78DF  D6FB                    LDB <(_event_handler_Ttmp10)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label76-(*+2))|(127-_label76+(*+2)))&0x8000)
                              LBEQ _label76
                              ELSE
78E1  2753                    BEQ _label76
                              ENDIF
78E3  CCCB00                  LDD #_event_handler_Tstr74
78E6  FDC18B                  STD _event_handler_Ttmp24
78E9  7CC18C                  INC _event_handler_Ttmp24+1
78EC  2603                    BNE _label77
78EE  7CC18B                  INC _event_handler_Ttmp24
78F1                  _label77
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
78F1  96FB                    LDA <(_event_handler_Ttmp10)
78F3  2737                    BEQ _label78equal
78F5  10BEC189                LDY _event_handler_Ttmp23
78F9  BEC18B                  LDX _event_handler_Ttmp24
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
78FC  96FB                    LDA <(_event_handler_Ttmp10)
78FE  8480                    ANDA #$80
7900  2717                    BEQ _label78second
7902                  _label78first
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
7902  4F                      CLRA
7903                  _label78loop
7903  E686                    LDB A,X
7905  E1A6                    CMPB A,Y
7907  262A                    BNE _label78diff
7909  8B01                    ADDA #1
790B  817F                    CMPA #$7F
790D  26F4                    BNE _label78loop
790F  31A87F                  LEAY 127,Y
7912  30887F                  LEAX 127,X
7915  3121                    LEAY 1,Y
7917  3001                    LEAX 1,X
7919                  _label78second
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp10
7919  96FB                    LDA <(_event_handler_Ttmp10)
791B  847F                    ANDA #$7f
791D  9714                    STA <MATHPTR0
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
791F  4F                      CLRA
7920                  _label78loop2
7920  E686                    LDB A,X
7922  E1A6                    CMPB A,Y
7924  260D                    BNE _label78diff
7926  8B01                    ADDA #1
7928  9114                    CMPA <MATHPTR0
792A  26F4                    BNE _label78loop2
792C                  _label78equal
792C  86FF                    LDA #$ff
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
792E  97FF                    STA <(_event_handler_Ttmp22)
7930  7E7936                  JMP _label78final
7933                  _label78diff
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
7933  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _event_handler_Ttmp22
7934  97FF                    STA <(_event_handler_Ttmp22)
7936                  _label78final
7936                  _label76
                      ; peephole(12): direct-page1
                      ;       LDB _event_handler_Ttmp22
7936  D6FF                    LDB <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       ORB _event_handler_Ttmp16
7938  DAFC                    ORB <(_event_handler_Ttmp16)
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp27
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp27
                              IF (((128+_label80e0-(*+2))|(127-_label80e0+(*+2)))&0x8000)
                              LBEQ _label80e0
                              ELSE
793A  2733                    BEQ _label80e0
                              ENDIF
793C                  _label80t
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp9
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp11
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp16
                              ; Q _event_handler_Ttmp22
                              ; Q _event_handler_Ttmp23
                              ; Q _event_handler_Ttmp24
                              ; VSP
                              ; P:156
                              ; L:123
793C  CC0167                  LDD #$0167
793F  FDC18D                  STD _event_handler_Ttmp36
7942  CCFE99                  LDD #$fe99
7945  F3C10A                  ADDD _angle
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
7948  FDC10A                  STD _angle
                              ; Q _event_handler_Ttmp7
                              ; V _event_handler_Ttmp36
                              ; Q _event_handler_Ttmp65
                              ; VSP
                              ; P:7
                              ; L:124
794B  CC0168                  LDD #$0168
794E  FDC18D                  STD _event_handler_Ttmp36
7951  FCC10A                  LDD _angle
7954  FD782C                  STD _event_handler_Ttmp66
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp66
7957  BEC18D                  LDX _event_handler_Ttmp36
795A  BD77D5                  JSR CPUMATHDIV16BITTO16BIT
795D  BFC18F                  STX _event_handler_Ttmp68
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp67
7960  FCC18F                  LDD _event_handler_Ttmp68
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
7963  FDC10A                  STD _angle
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; V _event_handler_Ttmp36
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Ttmp66
                              ; Q _event_handler_Ttmp67
                              ; Q _event_handler_Ttmp68
                              ; VSP
                              ; P:13
                              ; L:125
7966  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7968  D7FC                    STB <(_event_handler_Ttmp16)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp16
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp7
796A  D7F4                    STB <(_event_handler_Ttmp7)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp7
796C  F7C16F                  STB _event_handler_compute_dir
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp16
                              ; VSP
                              ; P:6
                              ; L:126
796F                  _label80f
796F                  _label80e0
                              ; Q _event_handler_Ttmp27
                              ; VSP
                              ; P:2
                              ; L:127
                              ; VSP
                              ; P:0
                              ; L:128
796F  C6FF                    LDB #$ff
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp16
7971  D7FC                    STB <(_event_handler_Ttmp16)
7973  F6C16F                  LDB _event_handler_compute_dir
                      ; peephole(12): direct-page1
                      ;       STB _event_handler_Ttmp22
7976  D7FF                    STB <(_event_handler_Ttmp22)
7978  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDA _event_handler_Ttmp22
7979  96FF                    LDA <(_event_handler_Ttmp22)
                      ; peephole(12): direct-page1
                      ;       CMPA _event_handler_Ttmp16
797B  91FC                    CMPA <(_event_handler_Ttmp16)
797D  2601                    BNE _label82
797F  5A                      DECB
7980                  _label82
                      ; peephole(6): unread1
                      ;       STB _event_handler_Ttmp27
7980  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _event_handler_Ttmp27
                              IF (((128+_label83e0-(*+2))|(127-_label83e0+(*+2)))&0x8000)
7981  10270FF1                LBEQ _label83e0
                              ELSE
                              BEQ _label83e0
                              ENDIF
7985                  _label83t
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp16
                              ; Q _event_handler_Ttmp22
                              ; VSP
                              ; P:18
                              ; L:129
                              IF (((128+fp_vars_after-(*+2))|(127-fp_vars_after+(*+2)))&0x8000)
7985  7E841A                  JMP fp_vars_after
                              ELSE
                              BRA fp_vars_after
                              ENDIF
                      ; FLOATING POINT ROUTINES FOR THE 6809
                      
                      ; I recently found these files on an old CD-R. They are intended to be
                      ; used with the sbc09 system. These routines should be fairly portable
                      ; to any 6809-based system
                      
                      ; Originally published on https://lennartb.home.xs4all.nl/m6809.html
                      ; Adapted by Marco Spedaletti
                      
                      ; FLOATING POINT PRIMITIVES.
                      
7988  00000000        INTBUF          RZB 4           ;BUFFER TO STORE INTEGER.
798C  00000000        INTBUF2         RZB 4
7990  0000000000      BCDBUF          RZB 5           ;BUFFER FOR BCD CONVERSION.
                      
7995  0000            ENDSTR          RZB 2           ;END ADDRESS OF STRING.
7997  00              DPL                 RZB 1               ;DECIMAL POINT LOCATION.
                      
                      ; U IS THE FLOATING POINT STACK POINTER AND POINTS TO THE FIRST FREE
                      ; LOCATION. EACH NUMBER OCCUPIES 5 BYTES, 
                      ; FORMAT: BYTE0: BINARY EXPONENT  $00-$FF $80 MEANS NUMBER IN RANGE 1..2.
                      ;         BYTE1-BYTE4 BINARY FRACTION BETWEEN 1.0 AND 2.0, MSB WOULD
                      ;         ALWAYS BE SET, BUT REPLACED BY SIGN.
                      ;               SPECIAL CASE: ALL BYTES ZERO, NUMBER=0.
                      
7998  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 FPSPAREA        RZB       5*32
                      
                      ; EXCHANGE TOP TWO NUMBERS ON STACK.
7A38                  FPEXG           
7A38  AE5E                    LDX -2,U
7A3A  EC59                    LDD -7,U
7A3C  AF59                    STX -7,U
7A3E  ED5E                    STD -2,U
7A40  AE5C                    LDX -4,U
7A42  EC57                    LDD -9,U
7A44  AF57                    STX -9,U
7A46  ED5C                    STD -4,U
7A48  A65B                    LDA -5,U
7A4A  E656                    LDB -10,U
7A4C  A756                    STA -10,U
7A4E  E75B                    STB -5,U
7A50  39                      RTS
                      
7A51                  FPDUP           
7A51  305B                    LEAX -5,U
                      ; LOAD FP NUMBER FROM ADDRESS X AND PUSH ONTO STACK.
7A53                  FPLOD           
7A53  EC81                    LDD ,X++
7A55  EDC1                    STD ,U++
7A57  EC81                    LDD ,X++
7A59  EDC1                    STD ,U++
7A5B  A680                    LDA ,X+
7A5D  A7C0                    STA ,U+
                      
7A5F                  FCKMEM          
                              ; TFR S,D
                              ; STU FPSP
                              ; SUBD FPSP
                              ; SUBD #40      
                              ; LBCS MAKEFREE ;TEST FOR SUFFICIENT FREE SPACE.
7A5F  39                      RTS 
                              
                      ; POP FP NUMBER FROM STACK AND STORE INTO ADDRESS X.
7A60                  FPSTO           
7A60  A65B                    LDA -5,U
7A62  A780                    STA ,X+
7A64  EC5C                    LDD -4,U
7A66  ED81                    STD ,X++
7A68  EC5E                    LDD -2,U
7A6A  ED81                    STD ,X++
7A6C  335B                    LEAU -5,U
7A6E  39                      RTS
                      
                      ; COMPARE MAGNITUDE (SECOND-TOP).
7A6F                  FPCMPMAG        
7A6F  A656                    LDA -10,U
7A71  A15B                    CMPA -5,U       ;COMPARE EXPONENTS.
7A73  2614                    BNE CMPEND
7A75  EC5C                    LDD -4,U
7A77  847F                    ANDA #$7F       ;ELIMINATE SIGN BIT.
7A79  EDE3                    STD ,--S
7A7B  EC57                    LDD -9,U
7A7D  847F                    ANDA #$7F       ;ELIMINATE SIGN BIT.
7A7F  A3E1                    SUBD ,S++       ;COMPARE MSB OF MANTISSA.
7A81  2606                    BNE CMPEND
7A83  EC59                    LDD -7,U
7A85  A35E                    SUBD -2,U
7A87  2600                    BNE CMPEND
7A89                  CMPEND          
7A89  39                      RTS
                      
                      ; TEST A TOP NUMBER FOR 0.
7A8A                  FPTEST0
7A8A  6D5B                    TST -5,U
7A8C  26FB                    BNE CMPEND
7A8E  EC5C                    LDD -4,U
7A90  26F7                    BNE CMPEND
7A92  EC5E                    LDD -2,U
7A94  39                      RTS
                      
                      ; FLOATING POINT SUBTRACTION.
7A95                  FPSUB           
7A95  BD7D77                  JSR FPNEG
                      
                      ; FLOATING POINT ADDITION.
7A98                  FPADD           
7A98  8DD5                    BSR FPCMPMAG    ;FIRST COMPARE MAGNITUDES.
7A9A  2403                    BCC FPADD1
7A9C  BD7A38                  JSR FPEXG       ;PUT THE BIGGEST ONE SECOND.
7A9F                  FPADD1          
7A9F  8DE9                    BSR FPTEST0             
7AA1  2774                    BEQ FPADDEND    ;DONE IF SMALLEST NUMBER IS 0.
7AA3  A656                    LDA -10,U
7AA5  A05B                    SUBA -5,U       ;DETERMINE EXPONENT DIFFERENCE.
7AA7  8120                    CMPA #32
7AA9  226C                    BHI FPADDEND    ;DONE IF DIFFERENCE TOO BIG.
7AAB  E657                    LDB -9,U
7AAD  C480                    ANDB #$80
7AAF  E7E2                    STB ,-S         ;STORE SIGN OF BIGGEST NUMBER.
7AB1  E85C                    EORB -4,U
7AB3  E7E2                    STB ,-S         ;STORE DIFFERENCE OF SIGNS.
7AB5  E657                    LDB -9,U
7AB7  CA80                    ORB #$80
7AB9  E757                    STB -9,U
7ABB  E65C                    LDB -4,U
7ABD  CA80                    ORB #$80
7ABF  E75C                    STB -4,U        ;PUT THE HIDDEN MSBS BACK IN.
7AC1  6FC4                    CLR ,U          ;MAKE EXTRA MANTISSA BYTE.
7AC3  4D                      TSTA
7AC4  270D                    BEQ FPADD2B     ;SKIP THE ALIGNMENT PHASE.
7AC6                  FPALIGN         
7AC6  645C                    LSR -4,U
7AC8  665D                    ROR -3,U
7ACA  665E                    ROR -2,U
7ACC  665F                    ROR -1,U        ;SHIFT THE SMALLER NUMBER RIGHT TO ALIGN
7ACE  66C4                    ROR ,U
7AD0  4A                      DECA
7AD1  26F3                    BNE FPALIGN
7AD3                  FPADD2B         
7AD3  6DE0                    TST ,S+
7AD5  2B43                    BMI DOSUB       ;DID SIGNS DIFFER? THEN SUBTRACT.
7AD7  EC59                    LDD -7,U        ;ADD THE MANTISSAS.
7AD9  E35E                    ADDD -2,U
7ADB  ED59                    STD -7,U
7ADD  EC57                    LDD -9,U
7ADF  E95D                    ADCB -3,U
7AE1  A95C                    ADCA -4,U
7AE3  ED57                    STD -9,U
7AE5  2410                    BCC FPADD2
7AE7                  FPADD2A         
7AE7  6C56                    INC -10,U       ;SUM OVERFLOWED, INC EXP, SHIFT MANT.
7AE9  10270726                LBEQ FPOVF      ;IF EXPONENT OVERFLOWED, TOO BAD.
7AED  6657                    ROR -9,U
7AEF  6658                    ROR -8,U
7AF1  6659                    ROR -7,U
7AF3  665A                    ROR -6,U
7AF5  66C4                    ROR ,U
7AF7                  FPADD2          
7AF7  6DC4                    TST ,U
7AF9  2A14                    BPL FPADD3      ;TEST MSB OF EXTRA MANTISSA BYTE.               
7AFB  EC59                    LDD -7,U        ;ADD 1 TO MANTISSA IF THIS IS SET
7AFD  C30001                  ADDD #1         
7B00  ED59                    STD -7,U        
7B02  240B                    BCC FPADD3
7B04  EC57                    LDD -9,U
7B06  6FC4                    CLR ,U
7B08  C30001                  ADDD #1
7B0B  ED57                    STD -9,U
7B0D  25D8                    BCS FPADD2A     
7B0F                  FPADD3          
7B0F  E657                    LDB -9,U
7B11  C47F                    ANDB #$7F
7B13  E8E0                    EORB ,S+
7B15  E757                    STB -9,U        ;PUT ORIGINAL SIGN BACK IN.             
7B17  335B            FPADDEND        LEAU -5,U
7B19  39                      RTS             
                      
7B1A                  DOSUB           
7B1A  E6C4                    LDB ,U
7B1C  50                      NEGB
7B1D  E7C4                    STB ,U
7B1F  EC59                    LDD -7,U        ;SIGNS DIFFERED, SO SBUTRACT.
7B21  E25F                    SBCB -1,U
7B23  A25E                    SBCA -2,U
7B25  ED59                    STD -7,U
7B27  EC57                    LDD -9,U
7B29  E25D                    SBCB -3,U
7B2B  A25C                    SBCA -4,U
7B2D  ED57                    STD -9,U
7B2F  2BC6                    BMI FPADD2      ;NUMBER STILL NORMALIZED, THEN DONE.
7B31  EC57                    LDD -9,U
7B33  2608                    BNE FPNORM
7B35  EC59                    LDD -7,U
7B37  2604                    BNE FPNORM
7B39  6DC4                    TST ,U
7B3B  2714                    BEQ FPUNDF      ;IF MANTISSA EXACTLY ZERO, UNDERFLOW.
7B3D                  FPNORM          
7B3D  6D56                    TST -10,U       ;DEC EXP, SHIFT MANT LEFT
7B3F  2710                    BEQ FPUNDF      ;UNDERFLOW, PUT A ZERO IN. 
7B41  6A56                    DEC -10,U
7B43  68C4                    ASL ,U
7B45  695A                    ROL -6,U
7B47  6959                    ROL -7,U
7B49  6958                    ROL -8,U
7B4B  6957                    ROL -9,U
7B4D  2AEE                    BPL FPNORM      ;UNTIL NUMBER IS NORMALIZED.
7B4F  20A6                    BRA FPADD2
                              
7B51                  FPUNDF          
7B51  6F56                    CLR -10,U       ;UNDERFLOW, SUBSTITUTE ZERO.
7B53  6F57                    CLR -9,U
7B55  6F58                    CLR -8,U
7B57  6F59                    CLR -7,U
7B59  6F5A                    CLR -6,U
7B5B  3261                    LEAS 1,S        ;DISCARD THE SIGN ON STACK.
7B5D  20B8                    BRA FPADDEND
                      
                      ; COMPARE FLOATING POINT NUMBERS, FLAGS AS WITH UNSIGNED COMPARISON.
7B5F  A657            FPCMP           LDA -9,U
7B61  8480                    ANDA #$80
7B63  A7E2                    STA ,-S
7B65  A65C                    LDA -4,U
7B67  8480                    ANDA #$80
7B69  A0E0                    SUBA ,S+        ;SUBTRACT THE SIGNS, SUBTRACTION IS REVERSED.
7B6B  2612                    BNE FPCMPEND
7B6D  6D57                    TST -9,U
7B6F  2B03                    BMI FPCMPNEG    ;ARE NUMBERS NEGATIVE?  
7B71  7E7A6F                  JMP FPCMPMAG
7B74  BD7A6F          FPCMPNEG        JSR FPCMPMAG
7B77  2706                    BEQ FPCMPEND    
7B79  1FA8                    TFR CC,A
7B7B  8801                    EORA #$1
7B7D  1F8A                    TFR A,CC        ;REVERSE THE CARRY FLAG.
7B7F  39              FPCMPEND        RTS
                      
                      ; MULTIPLY FLOATING POINT NUMBERS.
7B80  A657            FPMUL           LDA -9,U
7B82  A85C                    EORA -4,U
7B84  8480                    ANDA #$80
7B86  A7E2                    STA ,-S         ;SIGN DIFFERENCE TO STACK.
7B88  BD7A8A                  JSR FPTEST0     ;TEST ONE OPERAND FOR 0
7B8B  27C4                    BEQ FPUNDF      
7B8D  EC59                    LDD -7,U
7B8F  2608                    BNE FPMULA              
7B91  EC57                    LDD -9,U
7B93  2604                    BNE FPMULA      ;AND THE OTHER ONE.
7B95  E656                    LDB -10,U
7B97  27B8                    BEQ FPUNDF
7B99  E657            FPMULA          LDB -9,U
7B9B  CA80                    ORB #$80
7B9D  E757                    STB -9,U
7B9F  E65C                    LDB -4,U
7BA1  CA80                    ORB #$80
7BA3  A656                    LDA -10,U
7BA5  8080                    SUBA #$80       ;MAKE UNBIASED SIGNED NUM OF EXPONENTS.
7BA7  A7E2                    STA ,-S
7BA9  A65B                    LDA -5,U
7BAB  8080                    SUBA #$80
7BAD  ABE0                    ADDA ,S+        ;ADD EXPONENTS.
7BAF  E75C                    STB -4,U        ;PUT HIDDEN MSB BACK IN.
7BB1  2806                    BVC FPMUL1      ;CHECK OVER/UNDERFLOW
7BB3  102B065C                LBMI FPOVF
7BB7  2098                    BRA FPUNDF
7BB9  8B80            FPMUL1          ADDA #$80       ;MAKE EXPONENT BIASED AGAIN.
7BBB  A756                    STA -10,U       ;STORE RESULT EXPONENT.
                      ; NOW PERFORM MULTIPLICATION OF MANTISSAS TO 40-BIT PRODUCT.
                      ; 0,U--4,U PRODUCT. 5,U--9,U ADDED TERM
                      ; HAVING A MUL INSTRUCTION IS NICE, BUT USING IT FOR AN EFFICIENT 
                      ; MULTIPRECISION MULTIPLICATON IS HARD. THIS ROUTINE HAS 13 MUL INSTRUCTIONS.
7BBD  A65F                    LDA -1,U
7BBF  E658                    LDB -8,U
7BC1  3D                      MUL             ;B4*A2
7BC2  A744                    STA 4,U
7BC4  A65F                    LDA -1,U
7BC6  E657                    LDB -9,U
7BC8  3D                      MUL             ;B4*A1
7BC9  EB44                    ADDB 4,U
7BCB  8900                    ADCA #0
7BCD  ED43                    STD 3,U
7BCF  A65E                    LDA -2,U
7BD1  E659                    LDB -7,U
7BD3  3D                      MUL             ;B3*A3
7BD4  A749                    STA 9,U
7BD6  A65E                    LDA -2,U
7BD8  E658                    LDB -8,U
7BDA  3D                      MUL             ;B3*A2
7BDB  EB49                    ADDB 9,U
7BDD  8900                    ADCA #0
7BDF  ED48                    STD 8,U
7BE1  A65E                    LDA -2,U
7BE3  E657                    LDB -9,U
7BE5  3D                      MUL             ;B3*A1
7BE6  EB48                    ADDB 8,U
7BE8  8900                    ADCA #0
7BEA  ED47                    STD 7,U
7BEC  EC48                    LDD 8,U
7BEE  E343                    ADDD 3,U
7BF0  ED43                    STD 3,U
7BF2  E647                    LDB 7,U
7BF4  C900                    ADCB #0
7BF6  A65D                    LDA -3,U
7BF8  E742                    STB 2,U         ;ADD B4*A AND B3*A PARTIAL PRODUCTS.
7BFA  E65A                    LDB -6,U
7BFC  3D                      MUL             ;B2*A4
7BFD  A749                    STA 9,U
7BFF  A65D                    LDA -3,U
7C01  E659                    LDB -7,U
7C03  3D                      MUL             ;B2*A3
7C04  EB49                    ADDB 9,U
7C06  8900                    ADCA #0
7C08  ED48                    STD 8,U
7C0A  A65D                    LDA -3,U
7C0C  E658                    LDB -8,U
7C0E  3D                      MUL             ;B2*A2
7C0F  EB48                    ADDB 8,U
7C11  8900                    ADCA #0
7C13  ED47                    STD 7,U
7C15  A65D                    LDA -3,U
7C17  E657                    LDB -9,U        ;B2*A1
7C19  3D                      MUL     
7C1A  EB47                    ADDB 7,U
7C1C  8900                    ADCA #0
7C1E  ED46                    STD 6,U
7C20  EC48                    LDD 8,U
7C22  E343                    ADDD 3,U
7C24  ED43                    STD 3,U
7C26  EC46                    LDD 6,U
7C28  E942                    ADCB 2,U
7C2A  8900                    ADCA #0
7C2C  ED41                    STD 1,U         ;ADD B2*A PARTIAL PRODUCT IN.
7C2E  A65C                    LDA -4,U
7C30  E65A                    LDB -6,U
7C32  3D                      MUL             ;B1*A4
7C33  ED48                    STD 8,U
7C35  A65C                    LDA -4,U
7C37  E659                    LDB -7,U
7C39  3D                      MUL             ;B1*A3
7C3A  EB48                    ADDB 8,U
7C3C  8900                    ADCA #0
7C3E  ED47                    STD 7,U
7C40  A65C                    LDA -4,U
7C42  E658                    LDB -8,U
7C44  3D                      MUL             ;B1*A2
7C45  EB47                    ADDB 7,U
7C47  8900                    ADCA #0
7C49  ED46                    STD 6,U
7C4B  A65C                    LDA -4,U
7C4D  E657                    LDB -9,U
7C4F  3D                      MUL             ;B1*A1
7C50  EB46                    ADDB 6,U
7C52  8900                    ADCA #0
7C54  ED45                    STD 5,U
7C56  EC48                    LDD 8,U
7C58  E343                    ADDD 3,U
7C5A  ED5A                    STD -6,U
7C5C  EC46                    LDD 6,U
7C5E  E942                    ADCB 2,U
7C60  A941                    ADCA 1,U
7C62  ED58                    STD -8,U        
7C64  E645                    LDB 5,U
7C66  C900                    ADCB #0
7C68  E757                    STB -9,U        ;ADD PRODUCT TERM B1*A IN, RESULT TO DEST.
7C6A  2B0C                    BMI FPMUL2      
7C6C  685B                    ASL -5,U
7C6E  695A                    ROL -6,U
7C70  6959                    ROL -7,U
7C72  6958                    ROL -8,U
7C74  6957                    ROL -9,U        ;NORMALIZE BY SHIFTING MANTISSA LEFT.
7C76  2006                    BRA FPMUL3
7C78  6C56            FPMUL2          INC -10,U       ;INCREMENT EXPONENT.
7C7A  10270595                LBEQ FPOVF      ;TEST FOR OVERFLOW.
7C7E  6D5B            FPMUL3          TST -5,U        
7C80  102AFE8B                LBPL FPADD3
7C84  EC59                    LDD -7,U        ;ADD 1 IF MSB OF 5TH NIBBLE IS SET.
7C86  C30001                  ADDD #1
7C89  ED59                    STD -7,U
7C8B  1024FE80                LBCC FPADD3
7C8F  EC57                    LDD -9,U
7C91  C30001                  ADDD #1
7C94  ED57                    STD -9,U
7C96  2503                    BCS FPMUL4      ;IT COULD OVERFLOW.
7C98  16FE74                  LBRA FPADD3
7C9B  6F5B            FPMUL4          CLR -5,U
7C9D  20D9                    BRA FPMUL2
                      
                      ; DIVIDE FLOATING POINT NUMBERS.
7C9F  A657            FPDIV           LDA -9,U
7CA1  A85C                    EORA -4,U
7CA3  8480                    ANDA #$80
7CA5  A7E2                    STA ,-S         ;SIGN DIFFERENCE TO STACK.
7CA7  BD7A8A                  JSR FPTEST0     ;TEST DIVISOR FOR 0
7CAA  10270565                LBEQ FPOVF      
7CAE  EC59                    LDD -7,U
7CB0  260A                    BNE FPDIVA              
7CB2  EC57                    LDD -9,U
7CB4  2606                    BNE FPDIVA      ;AND THE OTHER ONE.
7CB6  E656                    LDB -10,U
7CB8  1027FE95                LBEQ FPUNDF
7CBC  E657            FPDIVA          LDB -9,U
7CBE  CA80                    ORB #$80
7CC0  E757                    STB -9,U
7CC2  E65C                    LDB -4,U
7CC4  CA80                    ORB #$80
7CC6  A65B                    LDA -5,U
7CC8  8080                    SUBA #$80       ;MAKE UNBIASED SIGNED DIFFERENCE OF EXPONENTS.
7CCA  A7E2                    STA ,-S
7CCC  A656                    LDA -10,U
7CCE  8080                    SUBA #$80
7CD0  A0E0                    SUBA ,S+        ;SUBTRACT EXPONENTS.
7CD2  E75C                    STB -4,U        ;PUT HIDDEN MSB BACK IN.
7CD4  2807                    BVC FPDIV1      ;CHECK OVER/UNDERFLOW
7CD6  102B0539                LBMI FPOVF
7CDA  16FE74                  LBRA FPUNDF
7CDD  8B80            FPDIV1          ADDA #$80       ;MAKE EXPONENT BIASED AGAIN.
7CDF  A756                    STA -10,U       ;STORE RESULT EXPONENT.
                      ; NOW START THE DIVISION OF MANTISSAS. TEMPRORARY 34-BIT QUOTIENT IN 0,U--4,U
                      ; -5,U IS EXTRA BYTE OF DIVIDEND.
7CE1  8622                    LDA #34
7CE3  A7E2                    STA ,-S
7CE5  6FC4                    CLR ,U
7CE7  6F41                    CLR 1,U
7CE9  6F42                    CLR 2,U
7CEB  6F43                    CLR 3,U
7CED  6F44                    CLR 4,U
7CEF  6F5B                    CLR -5,U
7CF1  6844            FPDIVLOOP       ASL 4,U         ;SHIFT QUOTIENT LEFT.
7CF3  6943                    ROL 3,U
7CF5  6942                    ROL 2,U
7CF7  6941                    ROL 1,U
7CF9  69C4                    ROL ,U          
7CFB  EC59                    LDD -7,U        ;PERFORM TRIAL SUBTRACTION.
7CFD  A35E                    SUBD -2,U       
7CFF  ED59                    STD -7,U
7D01  EC57                    LDD -9,U
7D03  E25D                    SBCB -3,U
7D05  A25C                    SBCA -4,U
7D07  ED57                    STD -9,U
7D09  E65B                    LDB -5,U
7D0B  C200                    SBCB #0
7D0D  2410                    BCC FPDIV2
7D0F  EC59                    LDD -7,U        ;UNDO THE TRIAL SUBTRACTION.            
7D11  E35E                    ADDD -2,U       
7D13  ED59                    STD -7,U
7D15  EC57                    LDD -9,U
7D17  E95D                    ADCB -3,U
7D19  A95C                    ADCA -4,U
7D1B  ED57                    STD -9,U
7D1D  2008                    BRA FPDIV4
7D1F  E75B            FPDIV2          STB -5,U        ;STORE NEW MSB OF QUOTIENT.
7D21  A644                    LDA 4,U         ;ADD 1 TO QUOTIENT.
7D23  8B40                    ADDA #$40
7D25  A744                    STA 4,U
7D27  685A            FPDIV4          ASL -6,U        ;SHIFT DIVIDEND LEFT.
7D29  6959                    ROL -7,U
7D2B  6958                    ROL -8,U
7D2D  6957                    ROL -9,U
7D2F  695B                    ROL -5,U
7D31  6AE4                    DEC ,S
7D33  26BC                    BNE FPDIVLOOP
7D35  3261                    LEAS 1,S
7D37  EC43                    LDD 3,U
7D39  ED5A                    STD -6,U
7D3B  EC41                    LDD 1,U
7D3D  ED58                    STD -8,U
7D3F  E6C4                    LDB ,U
7D41  E757                    STB -9,U        ;MOVE QUOTIENT TO FINAL LOCATION.
7D43  2B13                    BMI FPDIV3      
7D45  685B            FPDIV5          ASL -5,U
7D47  695A                    ROL -6,U
7D49  6959                    ROL -7,U
7D4B  6958                    ROL -8,U
7D4D  6957                    ROL -9,U        ;NORMALIZE BY SHIFTING MANTISSA LEFT.
7D4F  E656                    LDB -10,U       ;DECREMENT EXPONENT.
7D51  1027FDFC                LBEQ FPUNDF     ;TEST FOR UNDERFLOW.
7D55  5A                      DECB
7D56  E756                    STB -10,U
7D58  6D5B            FPDIV3          TST -5,U        
7D5A  102AFDB1                LBPL FPADD3
7D5E  EC59                    LDD -7,U        ;ADD 1 IF MSB OF 5TH NIBBLE IS SET.
7D60  C30001                  ADDD #1
7D63  ED59                    STD -7,U
7D65  1024FDA6                LBCC FPADD3
7D69  EC57                    LDD -9,U
7D6B  C30001                  ADDD #1
7D6E  ED57                    STD -9,U
7D70  1025FF27                LBCS FPMUL4     ;THIS ADDITION COULD OVERFLOW.
7D74  16FD98                  LBRA FPADD3                             
                      
                      ; FLOATING POINT NEGATION.
7D77  BD7A8A          FPNEG           JSR FPTEST0
7D7A  2706                    BEQ FPNEGEND    ;DO NOTHING IF NUMBER EQUALS ZERO.
7D7C  A65C                    LDA -4,U
7D7E  8880                    EORA #$80
7D80  A75C                    STA -4,U        ;INVERT THE SIGN BIT.   
7D82  39              FPNEGEND        RTS
                      
                      ; CONVERT UNSIGNED DOUBLE NUMBER AT X TO FLOAT.
7D83  3345            UFLOAT          LEAU 5,U        ;MAKE ROOM FOR EXTRA NUMBER ON STACK.
7D85  EC84                    LDD ,X
7D87  ED5C                    STD -4,U
7D89  EC02                    LDD 2,X
7D8B  6F5B                    CLR -5,U
7D8D  ED5E            UF16            STD -2,U        ;TRANSFER INTEGER TO FP NUMBER. 
7D8F  BD7A8A                  JSR FPTEST0
7D92  271D                    BEQ UFZERO
7D94  C69F                    LDB #$9F        ;NUMBER IS NOT ZERO.            
7D96  E75B                    STB -5,U
7D98  6D5C                    TST -4,U
7D9A  2B0C                    BMI UFDONE
7D9C  6A5B            UFLOOP          DEC -5,U        ;DECREMENT EXPONENT.
7D9E  685F                    ASL -1,U
7DA0  695E                    ROL -2,U
7DA2  695D                    ROL -3,U
7DA4  695C                    ROL -4,U        ;SHIFT MANTISSA.
7DA6  2AF4                    BPL UFLOOP      ;UNTIL NORMALIZED.
7DA8  E65C            UFDONE          LDB -4,U
7DAA  C47F                    ANDB #$7F
7DAC  E75C                    STB -4,U        ;REMOVE THE HIDDEN MSB.
7DAE  7E7A5F          UFEND           JMP FCKMEM      ;CHECK THAT FP STACK DOES NOT OVERFLOW
7DB1  6F5B            UFZERO          CLR -5,U        ;MAKE EXPONENT ZERO AS WELL.
7DB3  20F9                    BRA UFEND
                      
                      ; CONVERT UNSIGNED 16-BIT INTEGER IN D TO FLOATING POINT.
7DB5  6FE2            UNINT2FP        CLR ,-S
7DB7  2009                    BRA I2FP2
                      ; CONVERT SIGNED 16-BIT INTEGER IN D TO FLOATING POINT.
7DB9  A7E2            INT2FP          STA ,-S         ;STORE SIGN BYTE.
7DBB  2A05                    BPL I2FP2
7DBD  53                      COMB
7DBE  43                      COMA
7DBF  C30001                  ADDD #1         ;NEGATE D IF NEGATIVE.
7DC2  3345            I2FP2           LEAU 5,U
7DC4  6F5C                    CLR -4,U
7DC6  6F5B                    CLR -5,U
7DC8  6F5D                    CLR -3,U        ;CLEAR MSB      
7DCA  BD7D8D                  JSR UF16        
7DCD  6DE0                    TST ,S+
7DCF  2BA6                    BMI FPNEG
7DD1  39                      RTS             ;NEGATE NUMBER IF IT WAS NEGATIVE.
                      
                      ; CONVERT FLOAT TO UNSIGNED 32-BIT INTEGER AT X.
                      ; A IS NONZERO IF NUMBER WAS NOT INTEGER OR ZERO.
7DD2                  UINT            
7DD2  EC5C                    LDD -4,U
7DD4  8A80                    ORA #$80        ;PUT THE HIDDEN MSB BACK IN.
7DD6  ED84                    STD ,X
7DD8  EC5E                    LDD -2,U
7DDA  ED02                    STD 2,X         ;TRANSFER MANTISSA.
7DDC  4F                      CLRA
7DDD  E65B                    LDB -5,U
7DDF  C180                    CMPB #$80       ;IF LESS THAN 1, IT'S 0         
7DE1  251A                    BLO UIZERO
7DE3  C19F                    CMPB #$9F
7DE5  1022042B                LBHI INTRANGE   ;2^32 OR HIGHER, THAT'S TOO BAD.                
7DE9  270F                    BEQ UIDONE
7DEB                  UILOOP          
7DEB  6484                    LSR ,X
7DED  6601                    ROR 1,X
7DEF  6602                    ROR 2,X
7DF1  6603                    ROR 3,X         ;ADJUST INTEGER BY SHIFTING TO RIGHT
7DF3  8900                    ADCA #0         ;ADD ANY SHIFTED OUT BIT INTO A.
7DF5  5C                      INCB                            
7DF6  C19F                    CMPB #$9F
7DF8  25F1                    BLO UILOOP 
7DFA                  UIDONE          
7DFA  335B                    LEAU -5,U
7DFC  39                      RTS
7DFD                  UIZERO          
7DFD  4C                      INCA            ; INDICATE NON-INTEGER.
7DFE  6F84                    CLR ,X          ; NUMBER IS ZERO
7E00  6F01                    CLR 1,X
7E02  6F02                    CLR 2,X
7E04  6F03                    CLR 3,X
7E06  335B                    LEAU -5,U
7E08  39                      RTS   
                      
                      ; CONVERT FP NUMBER TO SIGNED OR UNSIGNED 16-BIT NUMBER IN D.
                      ; ACCEPTABLE VALUES ARE -65535..65535.
7E09                  FP2UINT         
7E09  E65C                    LDB -4,U ; ***X***
                              ; ANDB #$80
7E0B  E7E2                    STB ,-S         ;STORE SIGN.
7E0D  8E7988                  LDX #INTBUF     
7E10  8DC0                    BSR UINT
7E12  AE84                    LDX ,X
7E14  102603FC                LBNE INTRANGE   ;INTEGER MUST BE IN 16-BIT RANGE.
7E18  FC798A                  LDD INTBUF+2
7E1B  6DE0                    TST ,S+
7E1D  2A05                    BPL FP2IEND
7E1F  53                      COMB
7E20  43                      COMA
7E21  C30001                  ADDD #1         ;NEGATE NUMBER IF NEGATIVE.
7E24  39              FP2IEND         RTS
                      ; CONVERT FP NUMBER TO SIGNED 16-BIT NUMBER IN D. 
7E25  E65C            FP2INT          LDB -4,U
                              ; ANDB #$80
7E27  E7E2                    STB ,-S         ;STORE SIGN OF FP NUMBER.
7E29  8DDE                    BSR FP2UINT
7E2B  E6E4                    LDB ,S
7E2D  3406                    PSHS D
7E2F  A8E0                    EORA ,S+
7E31  102B03DF                LBMI INTRANGE   ;COMPARE SIGN TO WHAT IT SHOULD BE. 
7E35  3506                    PULS D
7E37  C480                    ANDB #$80
7E39  C180                    CMPB #$80
7E3B  2705                    BEQ FP2INTNEG
7E3D  FC798A                  LDD INTBUF+2
7E40  3580                    PULS PC
7E42                  FP2INTNEG
7E42  FC798A                  LDD INTBUF+2
7E45  53                      COMB
7E46  43                      COMA
7E47  C30001                  ADDD #1
7E4A  3580                    PULS PC
                      
                      ; SCAN A NUMBER AT ADDRESS Y AND CONVERT TO INTEGER OR FLOATING POINT
7E4C  BD8413          SCANNUM         JSR SKIPSPACE
7E4F  6FE2                    CLR ,-S         ;STORE SIGN ON STACK.
7E51  C12D                    CMPB #'-'       ;TEST FOR MINUS SIGN.
7E53  2604                    BNE SN1
7E55  6CE4                    INC ,S          ;SET SIGN ON STACK
7E57  E6A0                    LDB ,Y+
7E59  BD7F0A          SN1             JSR SCANINT     ;FIRST SCAN THE NUMBER AS AN INTEGER.
7E5C  8E7988                  LDX #INTBUF
7E5F  BD7D83                  JSR UFLOAT      ;CONVERT TO FLOAT.
7E62  E63F                    LDB -1,Y
7E64  C12E            SN1LOOP         CMPB #'.'
7E66  260C                    BNE SN1C
7E68  7D7997                  TST DPL         ;IF DPL ALREADY SET, ACCEPT NO OTHER POINT.
7E6B  262E                    BNE SN1D
7E6D  7C7997                  INC DPL
7E70  E6A0                    LDB ,Y+
7E72  20F0                    BRA SN1LOOP
7E74  C030            SN1C            SUBB #'0'
7E76  2523                    BLO SN1D
7E78  C109                    CMPB #9
7E7A  221F                    BHI SN1D
7E7C  4F                      CLRA
7E7D  BD7DB9                  JSR INT2FP      ;CONVERT DIGIT TO FP
7E80  BD7A38                  JSR FPEXG
7E83  8E8169                  LDX #FPTEN
7E86  BD7A53                  JSR FPLOD
7E89  BD7B80                  JSR FPMUL       ;MULTIPLY ORIGINAL NUMBER BY 10.
7E8C  BD7A98                  JSR FPADD       ;ADD DIGIT TO IT.
7E8F  7D7997                  TST DPL
7E92  2703                    BEQ SN1K
7E94  7C7997                  INC DPL         ;ADJUST DPL (ONE MORE DIGIT AFTER .)
7E97  E6A0            SN1K            LDB ,Y+
7E99  20C9                    BRA SN1LOOP             
7E9B  6DE0            SN1D            TST ,S+
7E9D  2703                    BEQ SN1A
7E9F  BD7D77                  JSR FPNEG       ;NEGATE THE NUMBER IF NEGATIVE.
7EA2  6FE2            SN1A            CLR ,-S
7EA4  6FE2                    CLR ,-S         ;PREPARE EXPONENT PART ON STACK.
7EA6  E63F                    LDB -1,Y
7EA8  C165                    CMPB #'e'
7EAA  2704                    BEQ SN1E
7EAC  C145                    CMPB #'E'
7EAE  263F                    BNE SN1F        ;TEST FOR EXPONENT PART.
7EB0  E6A0            SN1E            LDB ,Y+
7EB2  6FE2                    CLR ,-S         ;PREPARE EXPONENT SIGN ON STACK.
7EB4  C12B                    CMPB #'+'
7EB6  2706                    BEQ SN1G
7EB8  C12D                    CMPB #'-'
7EBA  2604                    BNE SN1H
7EBC  6CE4                    INC ,S          ;SET SIGN TO NEGATIVE.
7EBE  E6A0            SN1G            LDB ,Y+
7EC0  B67997          SN1H            LDA DPL
7EC3  3402                    PSHS A
7EC5  7F7997                  CLR DPL
7EC8  7C7997                  INC DPL
7ECB  BD7F0A                  JSR SCANINT     ;SCAN THE EXPONENT PART.
7ECE  3502                    PULS A
7ED0  B77997                  STA DPL         ;RESTORE DPL.
7ED3  B67988                  LDA INTBUF
7ED6  BA7989                  ORA INTBUF+1
7ED9  BA798A                  ORA INTBUF+2
7EDC  10260333                LBNE FPOVF      ;EXPONENT MAY NOT BE GREATER THAN 255.
7EE0  F6798B                  LDB INTBUF+3
7EE3  102B032C                LBMI FPOVF      ;NOT EVEN GREATER THAN 127.
7EE7  6DE0                    TST ,S+
7EE9  2701                    BEQ SN1I
7EEB  50                      NEGB
7EEC  1D              SN1I            SEX
7EED  EDE4                    STD ,S
7EEF  F67997          SN1F            LDB DPL
7EF2  2701                    BEQ SN1J
7EF4  5A                      DECB
7EF5  50              SN1J            NEGB
7EF6  1D                      SEX
7EF7  E3E1                    ADDD ,S++       ;ADD EXPONENT PART AS WELL
7EF9  3406                    PSHS D
7EFB  8E8169                  LDX #FPTEN
7EFE  BD7A53                  JSR FPLOD
7F01  3506                    PULS D
7F03  BD8018                  JSR FPIPOWER
7F06  BD7B80                  JSR FPMUL
7F09  39              SN1B            RTS             
                      
                      ; SCAN INTEGER NUMBER BELOW 1E9 AT ADDRESS Y, FIRST DIGIT IN B.
7F0A  7F7997          SCANINT         CLR DPL
7F0D  7F7988          SCANINT1        CLR INTBUF
7F10  7F7989                  CLR INTBUF+1
7F13  7F798A                  CLR INTBUF+2
7F16  7F798B                  CLR INTBUF+3    ;INITIALIZE NUMBER
7F19  C12E            SNLOOP          CMPB #'.'       
7F1B  1026000D                LBNE SN2A       ;TEST FOR DECIMAL POINT.
7F1F  7D7997                  TST DPL
7F22  1026008F                LBNE SNDONE     ;DONE IF SECOND POINT FOUND.
7F26  7C7997                  INC DPL         ;SET DPL TO INDICATE DECIMAL POINT.
7F29  160082                  LBRA SN3
7F2C  C030            SN2A            SUBB #'0'
7F2E  10250083                LBLO SNDONE
7F32  C109                    CMPB #9
7F34  1022007D                LBHI SNDONE     ;CHECK THAT CHARACTER IS A DIGIT.
7F38  7D7997                  TST DPL
7F3B  2703                    BEQ SN2B
7F3D  7C7997                  INC DPL         ;INCREMEND DEECIMAL POINT LOC IF SET.
7F40  3404            SN2B            PSHS B
7F42  FC798A                  LDD INTBUF+2
7F45  58                      ASLB
7F46  49                      ROLA
7F47  FD798A                  STD INTBUF+2
7F4A  FD798E                  STD INTBUF2+2
7F4D  FC7988                  LDD INTBUF
7F50  59                      ROLB
7F51  49                      ROLA
7F52  FD7988                  STD INTBUF
7F55  FD798C                  STD INTBUF2
7F58  78798B                  ASL INTBUF+3
7F5B  79798A                  ROL INTBUF+2
7F5E  797989                  ROL INTBUF+1
7F61  797988                  ROL INTBUF
7F64  78798B                  ASL INTBUF+3
7F67  79798A                  ROL INTBUF+2
7F6A  797989                  ROL INTBUF+1
7F6D  797988                  ROL INTBUF
7F70  FC798A                  LDD INTBUF+2
7F73  F3798E                  ADDD INTBUF2+2
7F76  FD798A                  STD INTBUF+2
7F79  FC7988                  LDD INTBUF
7F7C  F9798D                  ADCB INTBUF2+1
7F7F  B9798C                  ADCA INTBUF2
7F82  FD7988                  STD INTBUF      ;MULTIPLY THE INTEGER BY 10
7F85  FC798A                  LDD INTBUF+2
7F88  EBE0                    ADDB ,S+        ;ADD THE DIGIT IN.
7F8A  8900                    ADCA #0
7F8C  FD798A                  STD INTBUF+2
7F8F  2409                    BCC SN2
7F91  FC7988                  LDD INTBUF
7F94  C30001                  ADDD #1
7F97  FD7988                  STD INTBUF
7F9A  FC7988          SN2             LDD INTBUF
7F9D  108305F5                CMPD #$5F5      
7FA1  250B                    BLO SN3
7FA3  220E                    BHI SNOVF
7FA5  FC798A                  LDD INTBUF+2    ;NOTE $5F5E100 IS 100 MILLION
7FA8  1083E100                CMPD #$E100     ;COMPARE RESULT TO 100 MILLION 
7FAC  2405                    BHS SNOVF
7FAE  E6A0            SN3             LDB ,Y+         ;GET NEXT DIGIT.
7FB0  16FF66                  LBRA SNLOOP             
7FB3  E6A0            SNOVF           LDB ,Y+         ;GET NEXT DIGIT.
7FB5  E63F            SNDONE          LDB -1,Y
7FB7  39                      RTS
                      
                      *CONVERT INTEGER AT X TO BCD.
7FB8  7F7990          INT2BCD         CLR BCDBUF
7FBB  7F7991                  CLR BCDBUF+1
7FBE  7F7992                  CLR BCDBUF+2
7FC1  7F7993                  CLR BCDBUF+3
7FC4  7F7994                  CLR BCDBUF+4
7FC7  C604                    LDB #4
7FC9  6D80            TSTZERO         TST ,X+
7FCB  2605                    BNE BCD1
7FCD  5A                      DECB
7FCE  26F9                    BNE TSTZERO     ;SKIP BYTES THAT ARE ZERO.
7FD0  20E3                    BRA SNDONE      ;DONE IF NUMBER ALREADY ZERO.   
7FD2  E7E2            BCD1            STB ,-S         ;STORE NUMBER OF BYTES.
7FD4  301F                    LEAX -1,X
7FD6  C608            BCDLOOP         LDB #8
7FD8  6984            BCDLOOP1        ROL ,X          ;GET NEXT BIT OF BINARY NUNBER
7FDA  B67994                  LDA BCDBUF+4
7FDD  B97994                  ADCA BCDBUF+4
7FE0  19                      DAA
7FE1  B77994                  STA BCDBUF+4
7FE4  B67993                  LDA BCDBUF+3
7FE7  B97993                  ADCA BCDBUF+3
7FEA  19                      DAA
7FEB  B77993                  STA BCDBUF+3
7FEE  B67992                  LDA BCDBUF+2
7FF1  B97992                  ADCA BCDBUF+2
7FF4  19                      DAA
7FF5  B77992                  STA BCDBUF+2
7FF8  B67991                  LDA BCDBUF+1
7FFB  B97991                  ADCA BCDBUF+1
7FFE  19                      DAA
7FFF  B77991                  STA BCDBUF+1
8002  B67990                  LDA BCDBUF
8005  B97990                  ADCA BCDBUF
8008  19                      DAA
8009  B77990                  STA BCDBUF      ;ADD BCD NUMBER TO ITSELF PLUS THE EXTRA BIT.
800C  5A                      DECB
800D  26C9                    BNE BCDLOOP1            
800F  3001                    LEAX 1,X
8011  6AE4                    DEC ,S
8013  26C1                    BNE BCDLOOP
8015  3261                    LEAS 1,S        ;REMOVE COUNTER FROM STACK.
8017  39                      RTS
                      
                      ; RAISE FP NUMBER TO AN INTEGER POWER CONTAINED IN D. 
8018  A7E2            FPIPOWER        STA ,-S         ;STORE SIGN OF EXPONENT.
801A  2A05                    BPL FPPOW1      ;IS EXPONENT NEGATIVE.
801C  43                      COMA
801D  53                      COMB
801E  C30001                  ADDD #1         ;TAKE ABSOLUTE VALUE OF EXPONENT.
8021  EDE3            FPPOW1          STD ,--S        ;STORE THE EXPONENT.
8023  8E815F                  LDX #FPONE
8026  BD7A53                  JSR FPLOD       ;START WITH NUMBER ONE.
8029  64E4            FPPOWLOOP       LSR ,S
802B  6661                    ROR 1,S         ;DIVIDE EXPONENT BY 2.
802D  2408                    BCC FPPOW2      ;TEST IF IT WAS ODD.
802F  3056                    LEAX -10,U
8031  BD7A53                  JSR FPLOD
8034  BD7B80                  JSR FPMUL       ;MULTIPLY RESULT BY FACTOR.
8037  ECE4            FPPOW2          LDD ,S
8039  2712                    BEQ FPPOWDONE   ;IS EXPONENT ZERO?
803B  3056                    LEAX -10,U
803D  BD7A53                  JSR FPLOD
8040  BD7A51                  JSR FPDUP
8043  BD7B80                  JSR FPMUL       ;SQAURE THE FACTOR.
8046  3051                    LEAX -15,U
8048  BD7A60                  JSR FPSTO       ;STORE IT IN ITS PLACE ON STACK.
804B  20DC                    BRA FPPOWLOOP                           
804D  3262            FPPOWDONE       LEAS 2,S        ;REMOVE EXPONENT.
804F  6DE0                    TST ,S+
8051  2A0C                    BPL FPPOW3      ;WAS EXPONENT NEGATIVE?
8053  8E815F                  LDX #FPONE
8056  BD7A53                  JSR FPLOD
8059  BD7A38                  JSR FPEXG
805C  BD7C9F                  JSR FPDIV       :COMPUTE 1/RESULT.
805F  BD7A38          FPPOW3          JSR FPEXG
8062  335B                    LEAU -5,U       ;REMOVE FACTOR FROM STACK.
8064  39                      RTS                                                             
                      
                      
                      ; CONVERT FP NUMBER TO STRING AT ADDRESS Y IN SCIENTIFIC NOTATION.
8065                  FPSCIENT        
                              ; LDB #15
                              ; STB ,Y+               ;STORE THE STRING LENGTH.
8065  8620                    LDA #' '
8067  E65C                    LDB -4,U
8069  2A02                    BPL FPSC1
806B  862D                    LDA #'-'
806D                  FPSC1           
806D  A7A0                    STA ,Y+         ;STORE - OR SPACE DEPENDING ON SIGN.
806F  C47F                    ANDB #$7F
8071  E75C                    STB -4,U        ;MAKE NUMBER POSITIVE.
8073  6FE2                    CLR ,-S         ;STORE DECIMAL EXPONENT (DEFAULT 0)
8075  BD7A8A                  JSR FPTEST0             
8078  277A                    BEQ FPSC2       ;TEST FOR ZERO
807A  A65B                    LDA -5,U
807C  8080                    SUBA #$80
                              ; SUBA #$1D     ;ADJUST EXPONENT.
807E  2802                    BVC FPSC11A
8080  8680                    LDA #-128
8082                  FPSC11A         
8082  A7E2                    STA ,-S         ;STORE IT TO RECOVER SIGN LATER.
8084  2A01                    BPL POSEXP
8086  40                      NEGA            ;TAKE ABSOLUTE VALUE.
8087  C605            POSEXP          LDB #5
8089  3D                      MUL
808A  44                      LSRA
808B  56                      RORB
808C  44                      LSRA
808D  56                      RORB
808E  44                      LSRA
808F  56                      RORB
8090  44                      LSRA
8091  56                      RORB            ;MULTIPLY BY 5/16 APPROX 10LOG 2
8092  C125                    CMPB #37
8094  2302                    BLS EXPMAX
8096  C625                    LDB #37 ;MAXIMUM DECIMAL EXPONENT=37
8098                  EXPMAX          
8098  6DE0                    TST ,S+
809A  2A01                    BPL POSEXP1
809C  50                      NEGB
809D                  POSEXP1         
809D  E7E4                    STB ,S          ;STORE APPROXIMATE DECIMAL EXPONENT.
809F  50                      NEGB
80A0  1D                      SEX             ;APPROXIMATE (NEGATED) DECIMAL EXPONENT IN D.
80A1  3406                    PSHS D
80A3  8E8169                  LDX #FPTEN
80A6  BD7A53                  JSR FPLOD
80A9  3506                    PULS D
80AB  BD8018                  JSR FPIPOWER    ;TAKE 10^-EXP
80AE  BD7B80                  JSR FPMUL
80B1                  FPSC1A          
80B1  8E8173                  LDX #FPLOLIM
80B4  BD7A53                  JSR FPLOD
80B7  BD7A6F                  JSR FPCMPMAG    ;COMPARE NUMBER TO 100 MILLION
80BA  335B                    LEAU -5,U
80BC  240D                    BHS FPSC1C
80BE  6AE4                    DEC ,S          ;DECREMENT APPROXIMATE EXPONENT.
80C0  8E8169                  LDX #FPTEN
80C3  BD7A53                  JSR FPLOD
80C6  BD7B80                  JSR FPMUL       ;MULTIPLY BY TEN.
80C9  20E6                    BRA FPSC1A
80CB                  FPSC1C          
80CB  8E8178                  LDX #FPHILIM
80CE  BD7A53                  JSR FPLOD
80D1  BD7A6F                  JSR FPCMPMAG    ;COMPARE NUMBER TO 1 BILLION
80D4  335B                    LEAU -5,U
80D6  250D                    BLO FPSC1D
80D8  6CE4                    INC ,S          ;INCREMENT APPROXIMATE EXPONENT.
80DA  8E8169                  LDX #FPTEN
80DD  BD7A53                  JSR FPLOD
80E0  BD7C9F                  JSR FPDIV       ;DIVIDE BY TEN.
80E3  20E6                    BRA FPSC1C
80E5                  FPSC1D          
80E5  E6E4                    LDB ,S
80E7  CB08                    ADDB #8
80E9  E7E4                    STB ,S          ;ADJUST DECIMAL EXPONENT (8 DECIMALS)
80EB  8E816E                  LDX #FPHALF
80EE  BD7A53                  JSR FPLOD
80F1  BD7A98                  JSR FPADD       ;ADD 0.5 FOR THE FINAL ROUND TO INTEGER.                
                      ; NUMBER IS EITHER ZERO OR BETWEEN 100 MILLION AND 1 BILLION.
80F4                  FPSC2           
80F4  8E7988                  LDX #INTBUF
80F7  BD7DD2                  JSR UINT        ;CONVERT DECIMAL MANTISSA TO INTEGER.
80FA  BD7FB8                  JSR INT2BCD     ;CONVERT TO BCD.
80FD  F67990                  LDB BCDBUF
8100  CB30                    ADDB #'0'
8102  E7A0                    STB ,Y+         ;STORE DIGIT BEFORE DECIMAL POINT
                      ; peephole(2): r320 (LDA,LDB)->(LDD)
                      ;       LDA #4
                      ;       LDB #'.'
8104  CC042E                  LDD #((4)&255)*256+(('.')&255)
8107  A7E2                    STA ,-S
8109  E7A0                    STB ,Y+         ;STORE DECIMAL POINT.
810B  8E7991                  LDX #BCDBUF+1
810E                  FPSCLOOP        
810E  A680                    LDA ,X+
8110  1F89                    TFR A,B
8112  54                      LSRB
8113  54                      LSRB
8114  54                      LSRB
8115  54                      LSRB
8116  CB30                    ADDB #'0'       
8118  840F                    ANDA #$0F
811A  8B30                    ADDA #'0'       
811C  E7A0                    STB ,Y+
811E  A7A0                    STA ,Y+
8120  6AE4                    DEC ,S          ;CONVERT THE OTHER 8 DIGITS TO ASCII
8122  26EA                    BNE FPSCLOOP
8124  3261                    LEAS 1,S        ;REMOVE LOOP COUNTER.
                      ; peephole(2): r320 (LDA,LDB)->(LDD)
                      ;       LDA #'+'
                      ;       LDB #'E'
8126  CC2B45                  LDD #(('+')&255)*256+(('E')&255)
8129  E7A0                    STB ,Y+         ;STORE THE E CHARACTER.
812B  E6E0                    LDB ,S+         ;GET DECIMAL EXPONENT.
812D  2A03                    BPL FPSC3       ;TEST SIGN OF EXPONENT.
812F  862D                    LDA #'-'
8131  50                      NEGB            ;TAKE ABSOLUTE VALUE OF EXPONENT.
8132                  FPSC3           
8132  A7A0                    STA ,Y+         ;STORE SIGN OF EXPONENT.
8134  F7798B                  STB INTBUF+3
8137  7F798A                  CLR INTBUF+2
813A  7F7989                  CLR INTBUF+1
813D  7F7988                  CLR INTBUF
8140  8E7988                  LDX #INTBUF
8143  BD7FB8                  JSR INT2BCD     ;CONVERT DECIMAL EXPONENT TO BCD.
8146  B67994                  LDA BCDBUF+4
8149  1F89                    TFR A,B
814B  54                      LSRB
814C  54                      LSRB
814D  54                      LSRB
814E  54                      LSRB
814F  CB30                    ADDB #'0'       
8151  840F                    ANDA #$0F
8153  8B30                    ADDA #'0'
8155  E7A0                    STB ,Y+         ;CONVERT FIRST EXP DIGIT TO ASCII
8157  A7A0                    STA ,Y+         ;AND THE SECOND ONE.
8159  39                      RTS
                      
                      
                      * THESE ARE THE FLOATING POINT CONSTANTS.
                      * THEY ARE GENERATED BY THE PROGRAM MAKEFLOT.C
                      * SIMPLE CONSTANTS.
815A  0000000000      FPZERO           FCB $00,$00,$00,$00,$00 ;0
815F  8000000000      FPONE            FCB $80,$00,$00,$00,$00 ;1
8164  8100000000      FPTWO            FCB $81,$00,$00,$00,$00 ;2
8169  8320000000      FPTEN            FCB $83,$20,$00,$00,$00 ;10
816E  7F00000000      FPHALF           FCB $7F,$00,$00,$00,$00 ;0.5
                      * NUMBERS USED IN CONVERSION.
8173  9A3EBC1FFE      FPLOLIM          FCB $9A,$3E,$BC,$1F,$FE ;99999999.95
8178  9D6E6B27FE      FPHILIM          FCB $9D,$6E,$6B,$27,$FE ;999999999.5
                      * MATHEMATICAL CONSTANTS.
817D                  PI
817D  81490FDAA2      FPI              FCB $81,$49,$0F,$DA,$A2 ;3.1415926535898
8182  7F317217F8      FLN2             FCB $7F,$31,$72,$17,$F8 ;0.6931471805599
                      * EVEN COEFFICIENTS FOR THE SIN(X)/X POLYNUMIAL.
8187  66CD4CA7E3      SINCOEFF         FCB $66,$CD,$4C,$A7,$E3 ;-0.0000000239
818C  6D38B94ED4              FCB $6D,$38,$B9,$4E,$D4 ; 0.0000027526
8191  73D00C02A9              FCB $73,$D0,$0C,$02,$A9 ;-0.0001984090
8196  7908888691              FCB $79,$08,$88,$86,$91 ; 0.0083333315
819B  7DAAAAAAA6              FCB $7D,$AA,$AA,$AA,$A6 ;-0.1666666664
                      * EVEN COEFFICIENTS FOR THE ARCTAN(X)/X POLYNOMIAL.
81A0  773BD749A5      ATANCOEFF        FCB $77,$3B,$D7,$49,$A5 ; 0.0028662257
81A5  7A846E01CE              FCB $7A,$84,$6E,$01,$CE ;-0.0161657367
81AA  7B2FC1FDBF              FCB $7B,$2F,$C1,$FD,$BF ; 0.0429096138
81AF  7C9A31746C              FCB $7C,$9A,$31,$74,$6C ;-0.0752896400
81B4  7C5A3D8356              FCB $7C,$5A,$3D,$83,$56 ; 0.1065626393
81B9  7D917FC700              FCB $7D,$91,$7F,$C7,$00 ;-0.1420889944
81BE  7D4CBBE4D9              FCB $7D,$4C,$BB,$E4,$D9 ; 0.1999355085
81C3  7EAAAA6B91              FCB $7E,$AA,$AA,$6B,$91 ;-0.3333314528
                      * COEFFICIENTS FOR THE EXP(-X) POLYNOMIAL.
81C8  73942E4072      EXPCOEFF         FCB $73,$94,$2E,$40,$72 ;-0.0001413161
81CD  762E4F6F65              FCB $76,$2E,$4F,$6F,$65 ; 0.0013298820
81D2  7988026D37              FCB $79,$88,$02,$6D,$37 ;-0.0083013598
81D7  7B2AA0E512              FCB $7B,$2A,$A0,$E5,$12 ; 0.0416573475
81DC  7DAAAA4F14              FCB $7D,$AA,$AA,$4F,$14 ;-0.1666653019
81E1  7E7FFFFD56              FCB $7E,$7F,$FF,$FD,$56 ; 0.4999999206
81E6  7FFFFFFFFE              FCB $7F,$FF,$FF,$FF,$FE ;-0.9999999995
                      * COEFFICIENTS FOR THE LN(1+X) POLYNOMIAL.
81EB  78D37840A4      LNCOEFF          FCB $78,$D3,$78,$40,$A4 ;-0.0064535442
81F0  7B13D18743              FCB $7B,$13,$D1,$87,$43 ; 0.0360884937
81F5  7CC33C0E19              FCB $7C,$C3,$3C,$0E,$19 ;-0.0953293897
81FA  7D2BAD8242              FCB $7D,$2B,$AD,$82,$42 ; 0.1676540711
81FF  7DF682EC68              FCB $7D,$F6,$82,$EC,$68 ;-0.2407338084
8204  7E29E18FD9              FCB $7E,$29,$E1,$8F,$D9 ; 0.3317990258
8209  7EFFEF804C              FCB $7E,$FF,$EF,$80,$4C ;-0.4998741238
820E  7F7FFFC401              FCB $7F,$7F,$FF,$C4,$01 ; 0.9999964239
                      * END OF FLOATING POINT CONSTANTS.
                      
8213  3F              FPOVF           SWI
8214  3F              INTRANGE        SWI
8215  3F              INVAL           SWI
                      
                      ; THIS ROUTINE TAKES THE SQUARE ROOT OF AN FP NUMBER.
                      ; USES NEWTON'S ALGORITHM.
8216  6D5C            FPSQRT          TST -4,U
8218  102BFFF9                LBMI INVAL      ;NEGATIVE ARGUMENTS ARE INVALID.
821C  BD7A8A                  JSR FPTEST0
821F  2731                    BEQ SQDONE      ;SQAURE ROOT OF 0 IS 0.
8221  BD7A51                  JSR FPDUP
8224  E65B                    LDB -5,U
8226  C080                    SUBB #$80       ;UNBIAS THE EXPONENT.
8228  2A02                    BPL SQ1
822A  CB01                    ADDB #1
822C  57              SQ1             ASRB            ;DIVIDE EXPONENT BY 2.
822D  CB80                    ADDB #$80       ;MAKE IT BIASED AGAIN.
822F  E75B                    STB -5,U        ;THIS IS THE INITIAL GUESS FOR THE ROOT.
8231  C604                    LDB #4          ;DO THE LOOP 4 TIMES.
8233  E7E2                    STB ,-S
8235  3056            SQLOOP          LEAX -10,U
8237  BD7A53                  JSR FPLOD
823A  3056                    LEAX -10,U
823C  BD7A53                  JSR FPLOD
823F  BD7C9F                  JSR FPDIV       ;DIVIDE ARGUMENT BY GUESS.
8242  BD7A98                  JSR FPADD       ;ADD TO GUESS.
8245  6A5B                    DEC -5,U        ;DIVIDE THIS BY TWO, GIVING NEW GUESS.
8247  6AE4                    DEC ,S
8249  26EA                    BNE SQLOOP
824B  3261                    LEAS 1,S
824D  BD7A38                  JSR FPEXG       
8250  335B                    LEAU -5,U       ;REMOVE ARGUMENT, LEAVE FINAL GUESS.
8252  39              SQDONE          RTS     
                              
                      ; COMPUTE THE FLOOR OF AN FP NUMBER (RESULT IS STILL FP.
8253  E65B            FPFLOOR         LDB -5,U
8255  C19F                    CMPB #$9F
8257  24F9                    BHS SQDONE      ;IF ABS VALUE >=2^31, THEN ALREADY INTEGER.
8259  E65C                    LDB -4,U
825B  E7E2                    STB ,-S         ;STROE SIGN OF NUMBER
825D  C47F                    ANDB #$7F
825F  E75C                    STB -4,U        ;TAKE ABSOLUTE VALUE OF NUMBER.
8261  8E7988                  LDX #INTBUF
8264  BD7DD2                  JSR UINT        ;CONVERT TO INT (TRUNCATION)
8267  A7E2                    STA ,-S         ;STORE NUMBER OF FRACTION BITS.
8269  8E7988                  LDX #INTBUF
826C  BD7D83                  JSR UFLOAT      ;CONVERT BACK TO FLOAT
826F  ECE1                    LDD ,S++
8271  5D                      TSTB
8272  2ADE                    BPL SQDONE
8274  A7E2                    STA ,-S
8276  BD7D77                  JSR FPNEG       ;NEGATE NUMBER IF IT WAS NEGATIVE
8279  A6E0                    LDA ,S+
827B  27D5                    BEQ SQDONE
827D  8E815F                  LDX #FPONE
8280  BD7A53                  JSR FPLOD
8283  7E7A95                  JMP FPSUB       ;SUBTRACT 1 IF NEGATIVE & NOT INTEGER.
                              
                      ; FLOATING POINT MODULO OPERATION (FLOORED MODULO).
                      ; INTEGER PART OF QUOTIENT IS STILL LEFT IN INTBUF
8286  3056            FPMOD           LEAX -10,U
8288  BD7A53                  JSR FPLOD
828B  3056                    LEAX -10,U
828D  BD7A53                  JSR FPLOD
8290  BD7C9F                  JSR FPDIV       ;PERFORM DIVISION.
8293  BD8253                  JSR FPFLOOR
8296  BD7B80                  JSR FPMUL       ;MULTIPLY QUOTIENT AND DIVISOR
8299  3056                    LEAX -10,U
829B  7E7A95                  JMP FPSUB       ;DIVIDEND - QUOTIENT*DIVISOR = MODULUS.         
                              
                      
                      ; NOW THE TRANSCENDENTAL FUNCTIONS FOLLOW.
                      ; THEY USE APPROXIMATION POLYNOMIALS AS DEFINED IN THE
                      ; HANDBOOK OF MATHEMATICAL FUNCTIONS BY ABRAMOWITZ & STEGUN.
                      
                      ; COMPUTE POLYNOMIAL, NUMBER OF TERMS IN B, COEFFICIENTS START AT Y
829E  E7E2            FPPOLY          STB ,-S
82A0  8E815A                  LDX #FPZERO
82A3  BD7A53                  JSR FPLOD       ;START WITH ZERO.
82A6  30A4            POLYLOOP        LEAX ,Y
82A8  BD7A53                  JSR FPLOD
82AB  BD7A98                  JSR FPADD       ;ADD NEXT COEFFICIENT.
82AE  3125                    LEAY 5,Y        
82B0  3056                    LEAX -10,U              
82B2  BD7A53                  JSR FPLOD
82B5  BD7B80                  JSR FPMUL       ;MULTIPLY BY X.
82B8  6AE4                    DEC ,S
82BA  26EA                    BNE POLYLOOP
82BC  3261                    LEAS 1,S
82BE  BD7A38                  JSR FPEXG
82C1  335B                    LEAU -5,U       ;REMOVE X FROM STACK.
82C3  39                      RTS
                      
82C4  8E815F          ADD1            LDX #FPONE
82C7  BD7A53                  JSR FPLOD
82CA  BD7A98                  JSR FPADD
82CD  39                      RTS
                      
82CE  8E817D          HALFPI          LDX #FPI
82D1  BD7A53                  JSR FPLOD
82D4  6A5B                    DEC -5,U
82D6  39                      RTS
                      
                      ; SIN(X)
82D7  8E817D          FPSIN           LDX #FPI
82DA  BD7A53                  JSR FPLOD
82DD  6C5B                    INC -5,U        ;LOAD 2*PI
82DF  BD8286                  JSR FPMOD       ;MODULO 2PI
82E2  8DEA                    BSR HALFPI
82E4  BD7B5F                  JSR FPCMP       ;COMPARE X TO PI/2
82E7  231C                    BLS SIN2
82E9  6C5B                    INC -5,U        ;CHANGE PI/2 TO PI
82EB  BD7A95                  JSR FPSUB
82EE  BD7D77                  JSR FPNEG       ;X := PI-X IF X>PI/2
82F1  8DDB                    BSR HALFPI
82F3  BD7D77                  JSR FPNEG
82F6  BD7B5F                  JSR FPCMP       ;COMPARE X TO -PI/2
82F9  240A                    BHS SIN2
82FB  6C5B                    INC -5,U        ;CHANGE -PI/2 TO -PI
82FD  BD7A95                  JSR FPSUB
8300  BD7D77                  JSR FPNEG
8303  2002                    BRA SIN3
8305  335B            SIN2            LEAU -5,U       ;DROP THE COMPARE LIMIT PI/2 OR -PI/2
8307  BD7A51          SIN3            JSR FPDUP
830A  BD7A51                  JSR FPDUP
830D  BD7B80                  JSR FPMUL       ;ON STACK: X, X*X
8310  108E8187                LDY #SINCOEFF
8314  C605                    LDB #5
8316  BD829E                  JSR FPPOLY      ;DO THE SINE POLYNOMIAL WITH X*X AS ARGUMENT
8319  BD82C4                  JSR ADD1        ;ADD 1 TO THE RESULT.
831C  7E7B80                  JMP FPMUL       ;MULTIPLY THE POLYNOMIAL RESULT WITH X.                         
                      ; COS(X)
831F  BD82CE          FPCOS           JSR HALFPI
8322  BD7A95                  JSR FPSUB
8325  BD7D77                  JSR FPNEG
8328  20AD                    BRA FPSIN       ;COMPUTE SIN(PI/2-X)
                      
                      ; TAN(X)        
832A  BD7A51          FPTAN           JSR FPDUP
832D  BD82D7                  JSR FPSIN
8330  BD7A38                  JSR FPEXG
8333  BD831F                  JSR FPCOS
8336  7E7C9F                  JMP FPDIV       ;COMPUTE SIN(X)/COS(X)
                      
                      ; ATAN(X)
8339  6FE2            FPATAN          CLR ,-S         ;MAKE FLAG ON STACK
833B  E65B                    LDB -5,U
833D  C180                    CMPB #$80       ;COMPARE MAGNITUDE TO 1.
833F  250E                    BLO ATN1
8341  6CE4                    INC ,S          ;SET FLAG ON STACK.
8343  8E815F                  LDX #FPONE      ;IF X>1 THEN COMPUTE 1/X
8346  BD7A53                  JSR FPLOD
8349  BD7A38                  JSR FPEXG
834C  BD7C9F                  JSR FPDIV
834F  BD7A51          ATN1            JSR FPDUP
8352  BD7A51                  JSR FPDUP
8355  BD7B80                  JSR FPMUL       ;ON STACK: X, X*X
8358  C608                    LDB #8
835A  108E81A0                LDY #ATANCOEFF
835E  BD829E                  JSR FPPOLY      ;DOE THE ARCTAN POLYNOMYAL, X*X AS ARGUMENT.
8361  BD82C4                  JSR ADD1        ;ADD 1 TO RESULT
8364  BD7B80                  JSR FPMUL       ;MULTIPLY RESULT BY X.
8367  6DE0                    TST ,S+
8369  2709                    BEQ ATNDONE             
836B  BD82CE                  JSR HALFPI
836E  BD7A95                  JSR FPSUB
8371  BD7D77                  JSR FPNEG       ;COMPUTE PI/2 - RESULT WHEN X WAS >1
8374  39              ATNDONE         RTS
                      
                      ; EXP(X)
8375  E65C            FPEXP           LDB -4,U
8377  E7E2                    STB ,-S         ;STORE SIGN OF X.
8379  C47F                    ANDB #$7F
837B  E75C                    STB -4,U        ;TAKE ABSOLUTE VALUE.
837D  8E8182                  LDX #FLN2
8380  BD7A53                  JSR FPLOD
8383  BD8286                  JSR FPMOD       ;MODULO LN2.
8386  C607                    LDB #7
8388  108E81C8                LDY #EXPCOEFF
838C  BD829E                  JSR FPPOLY      ;DO THE EXP(-X) POLYNOMIAL.
838F  BD82C4                  JSR ADD1
8392  6DE0                    TST ,S+
8394  2A15                    BPL EXPPOS
8396  E65B                    LDB -5,U        ;NUMBER WAS NEGATIVE.
8398  F0798B                  SUBB INTBUF+3   ;SUBTRACT THE INTEGER QUOTIENT OF THE MODLN2    
839B  2533                    BCS EXPUND      
839D  B67988                  LDA INTBUF
83A0  BA7989                  ORA INTBUF+1
83A3  BA798A                  ORA INTBUF+2
83A6  2628                    BNE EXPUND      ;UNDERFLOW ALSO IF QUOTIENT >255
83A8  E75B                    STB -5,U        ;STORE EXPONENT.
83AA  39                      RTS
83AB  8E815F          EXPPOS          LDX #FPONE
83AE  BD7A53                  JSR FPLOD
83B1  BD7A38                  JSR FPEXG
83B4  BD7C9F                  JSR FPDIV       ;X WAS POSTITIVE, COMPUTE 1/EXP(-X)
83B7  F67988                  LDB INTBUF
83BA  FA7989                  ORB INTBUF+1
83BD  FA798A                  ORB INTBUF+2    ;CHECK INT PART IS LESS THAN 255
83C0  1026FE4F                LBNE FPOVF
83C4  E65B                    LDB -5,U
83C6  FB798B                  ADDB INTBUF+3   ;ADD INTEGER PART TO EXPONENT.
83C9  1025FE46                LBCS FPOVF      ;CHECK FOR OVERFLOW.    
83CD  E75B                    STB -5,U
83CF  39                      RTS
83D0  335B            EXPUND          LEAU -5,U
83D2  8E815A                  LDX #FPZERO
83D5  7E7A53                  JMP FPLOD       ;UNDERFLOW, RESULT IS ZERO.
                      
                      ; LN(X) NATURAL LOGARITHM
83D8  BD7A8A          FPLN    JSR FPTEST0
83DB  1027FE36                LBEQ INVAL      ;DON'T ACCEPT ZERO AS ARGUMENT.
83DF  6D5C                    TST -4,U
83E1  102BFE30                LBMI INVAL      ;NO NEGATIVE NUMBERS EITHER.
83E5  E65B                    LDB -5,U
83E7  E7E2                    STB ,-S         ;SAVE THE BINARY EXPONENT.
83E9  C680                    LDB #$80
83EB  E75B                    STB -5,U        ;REPLACE EXPONENT WITH 1.
83ED  8E815F                  LDX #FPONE      ;ARGUMENT IS NOW IN RANGE 1..2
83F0  BD7A53                  JSR FPLOD
83F3  BD7A95                  JSR FPSUB       ;SUBTRACT 1.
83F6  108E81EB                LDY #LNCOEFF
83FA  C608                    LDB #8
83FC  BD829E                  JSR FPPOLY      ;DO THE LN(1+X) POLYNOMIAL.
83FF  E6E0                    LDB ,S+         ;GET ORIGINAL EXPONENT.
8401  C080                    SUBB #$80       ;UNBIAS IT.
8403  1D                      SEX
8404  BD7DB9                  JSR INT2FP      ;CONVERT TO FP.
8407  8E8182                  LDX #FLN2
840A  BD7A53                  JSR FPLOD
840D  BD7B80                  JSR FPMUL       ;MULTIPLY IT BY LN2.
8410  7E7A98                  JMP FPADD       ;ADD THAT TO RESULT.
                      
8413  E6A0            SKIPSPACE       LDB ,Y+
8415  C120                    CMPB #' ' 
8417  27FA                    BEQ SKIPSPACE
8419  39                      RTS
841A                  fp_vars_after
                      ; peephole(12): inlined1
                      ;       LDD _dir_x0
841A  CCFF00                  LDD #$ff00
841B                  _dir_x0 equ *-2
841D  CE7998                  LDU #FPSPAREA
8420  BD7DB9                  JSR INT2FP
8423  8EC191                  LDX #_event_handler_Tflt84
8426  BD7A60                  JSR FPSTO
8429  FCC10A                  LDD _angle
842C  CE7998                  LDU #FPSPAREA
842F  BD7DB9                  JSR INT2FP
8432  8EC197                  LDX #_event_handler_Tflt85
8435  BD7A60                  JSR FPSTO
8438  FC817D                  LDD PI
843B  FDC1A3                  STD _event_handler_Tflt87
843E  FC817F                  LDD PI+2
8441  FDC1A5                  STD _event_handler_Tflt87+2
8444  C687                    LDB #$87
8446  F7C1A9                  STB _event_handler_Tflt88+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
8449  CC0034                  LDD #$0034
844C  B7C1AB                  STA _event_handler_Tflt88+2
844F  B7C1AC                  STA _event_handler_Tflt88+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8452  B7C1AD                  STA _event_handler_Tflt88+4
8455  F7C1AA                  STB _event_handler_Tflt88+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8458  CE7998                  LDU #FPSPAREA
845B  8EC197                  LDX #_event_handler_Tflt85
845E  BD7A53                  JSR FPLOD
8461  8EC1A3                  LDX #_event_handler_Tflt87
8464  BD7A53                  JSR FPLOD
8467  BD7B80                  JSR FPMUL
846A  8EC1AF                  LDX #_event_handler_Tflt89
846D  BD7A60                  JSR FPSTO
8470  CE7998                  LDU #FPSPAREA
8473  8EC1AF                  LDX #_event_handler_Tflt89
8476  BD7A53                  JSR FPLOD
8479  8EC1A9                  LDX #_event_handler_Tflt88
847C  BD7A53                  JSR FPLOD
847F  BD7C9F                  JSR FPDIV
8482  8EC1AF                  LDX #_event_handler_Tflt89
8485  BD7A60                  JSR FPSTO
8488  CE7998                  LDU #FPSPAREA
848B  8EC1AF                  LDX #_event_handler_Tflt89
848E  BD7A53                  JSR FPLOD
8491  BD831F                  JSR FPCOS
8494  8EC19D                  LDX #_event_handler_Tflt86
8497  BD7A60                  JSR FPSTO
849A  CE7998                  LDU #FPSPAREA
849D  8EC191                  LDX #_event_handler_Tflt84
84A0  BD7A53                  JSR FPLOD
84A3  8EC19D                  LDX #_event_handler_Tflt86
84A6  BD7A53                  JSR FPLOD
84A9  BD7B80                  JSR FPMUL
84AC  8EC1B5                  LDX #_event_handler_Tflt90
84AF  BD7A60                  JSR FPSTO
                      ; peephole(12): inlined1
                      ;       LDD _dir_y0
84B2  CC0000                  LDD #$0000
84B3                  _dir_y0 equ *-2
84B5  CE7998                  LDU #FPSPAREA
84B8  BD7DB9                  JSR INT2FP
84BB  8EC1BB                  LDX #_event_handler_Tflt91
84BE  BD7A60                  JSR FPSTO
84C1  FCC10A                  LDD _angle
84C4  CE7998                  LDU #FPSPAREA
84C7  BD7DB9                  JSR INT2FP
84CA  8EC1C1                  LDX #_event_handler_Tflt92
84CD  BD7A60                  JSR FPSTO
84D0  FC817D                  LDD PI
84D3  FDC1CD                  STD _event_handler_Tflt94
84D6  FC817F                  LDD PI+2
84D9  FDC1CF                  STD _event_handler_Tflt94+2
84DC  C687                    LDB #$87
84DE  F7C1D3                  STB _event_handler_Tflt95+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
84E1  CC0034                  LDD #$0034
84E4  B7C1D5                  STA _event_handler_Tflt95+2
84E7  B7C1D6                  STA _event_handler_Tflt95+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
84EA  B7C1D7                  STA _event_handler_Tflt95+4
84ED  F7C1D4                  STB _event_handler_Tflt95+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
84F0  CE7998                  LDU #FPSPAREA
84F3  8EC1C1                  LDX #_event_handler_Tflt92
84F6  BD7A53                  JSR FPLOD
84F9  8EC1CD                  LDX #_event_handler_Tflt94
84FC  BD7A53                  JSR FPLOD
84FF  BD7B80                  JSR FPMUL
8502  8EC1D9                  LDX #_event_handler_Tflt96
8505  BD7A60                  JSR FPSTO
8508  CE7998                  LDU #FPSPAREA
850B  8EC1D9                  LDX #_event_handler_Tflt96
850E  BD7A53                  JSR FPLOD
8511  8EC1D3                  LDX #_event_handler_Tflt95
8514  BD7A53                  JSR FPLOD
8517  BD7C9F                  JSR FPDIV
851A  8EC1D9                  LDX #_event_handler_Tflt96
851D  BD7A60                  JSR FPSTO
8520  CE7998                  LDU #FPSPAREA
8523  8EC1D9                  LDX #_event_handler_Tflt96
8526  BD7A53                  JSR FPLOD
8529  BD82D7                  JSR FPSIN
852C  8EC1C7                  LDX #_event_handler_Tflt93
852F  BD7A60                  JSR FPSTO
8532  CE7998                  LDU #FPSPAREA
8535  8EC1BB                  LDX #_event_handler_Tflt91
8538  BD7A53                  JSR FPLOD
853B  8EC1C7                  LDX #_event_handler_Tflt93
853E  BD7A53                  JSR FPLOD
8541  BD7B80                  JSR FPMUL
8544  8EC1DF                  LDX #_event_handler_Tflt97
8547  BD7A60                  JSR FPSTO
854A  CE7998                  LDU #FPSPAREA
854D  8EC1B5                  LDX #_event_handler_Tflt90
8550  BD7A53                  JSR FPLOD
8553  8EC1DF                  LDX #_event_handler_Tflt97
8556  BD7A53                  JSR FPLOD
8559  BD7A95                  JSR FPSUB
855C  8EC1E5                  LDX #_event_handler_Tflt98
855F  BD7A60                  JSR FPSTO
8562  CE7998                  LDU #FPSPAREA
8565  8EC1E5                  LDX #_event_handler_Tflt98
8568  BD7A53                  JSR FPLOD
856B  BD7E25                  JSR FP2INT
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
856E  FD89E4                  STD _dir_x
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Tflt84
                              ; Q _event_handler_Tflt85
                              ; Q _event_handler_Tflt86
                              ; Q _event_handler_Tflt87
                              ; Q _event_handler_Tflt88
                              ; Q _event_handler_Tflt89
                              ; Q _event_handler_Tflt90
                              ; Q _event_handler_Tflt91
                              ; Q _event_handler_Tflt92
                              ; Q _event_handler_Tflt93
                              ; Q _event_handler_Tflt94
                              ; Q _event_handler_Tflt95
                              ; Q _event_handler_Tflt96
                              ; Q _event_handler_Tflt97
                              ; Q _event_handler_Tflt98
                              ; Q _event_handler_Ttmp99
                              ; Q _event_handler_Ttmp100
                              ; VSP
                              ; P:1286
                              ; L:130
8571  FC841B                  LDD _dir_x0
8574  CE7998                  LDU #FPSPAREA
8577  BD7DB9                  JSR INT2FP
857A  8EC191                  LDX #_event_handler_Tflt84
857D  BD7A60                  JSR FPSTO
8580  FCC10A                  LDD _angle
8583  CE7998                  LDU #FPSPAREA
8586  BD7DB9                  JSR INT2FP
8589  8EC197                  LDX #_event_handler_Tflt85
858C  BD7A60                  JSR FPSTO
858F  FC817D                  LDD PI
8592  FDC1A3                  STD _event_handler_Tflt87
8595  FC817F                  LDD PI+2
8598  FDC1A5                  STD _event_handler_Tflt87+2
859B  C687                    LDB #$87
859D  F7C1A9                  STB _event_handler_Tflt88+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
85A0  CC0034                  LDD #$0034
85A3  B7C1AB                  STA _event_handler_Tflt88+2
85A6  B7C1AC                  STA _event_handler_Tflt88+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
85A9  B7C1AD                  STA _event_handler_Tflt88+4
85AC  F7C1AA                  STB _event_handler_Tflt88+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
85AF  CE7998                  LDU #FPSPAREA
85B2  8EC197                  LDX #_event_handler_Tflt85
85B5  BD7A53                  JSR FPLOD
85B8  8EC1A3                  LDX #_event_handler_Tflt87
85BB  BD7A53                  JSR FPLOD
85BE  BD7B80                  JSR FPMUL
85C1  8EC1AF                  LDX #_event_handler_Tflt89
85C4  BD7A60                  JSR FPSTO
85C7  CE7998                  LDU #FPSPAREA
85CA  8EC1AF                  LDX #_event_handler_Tflt89
85CD  BD7A53                  JSR FPLOD
85D0  8EC1A9                  LDX #_event_handler_Tflt88
85D3  BD7A53                  JSR FPLOD
85D6  BD7C9F                  JSR FPDIV
85D9  8EC1AF                  LDX #_event_handler_Tflt89
85DC  BD7A60                  JSR FPSTO
85DF  CE7998                  LDU #FPSPAREA
85E2  8EC1AF                  LDX #_event_handler_Tflt89
85E5  BD7A53                  JSR FPLOD
85E8  BD82D7                  JSR FPSIN
85EB  8EC19D                  LDX #_event_handler_Tflt86
85EE  BD7A60                  JSR FPSTO
85F1  CE7998                  LDU #FPSPAREA
85F4  8EC191                  LDX #_event_handler_Tflt84
85F7  BD7A53                  JSR FPLOD
85FA  8EC19D                  LDX #_event_handler_Tflt86
85FD  BD7A53                  JSR FPLOD
8600  BD7B80                  JSR FPMUL
8603  8EC1B5                  LDX #_event_handler_Tflt90
8606  BD7A60                  JSR FPSTO
8609  FC84B3                  LDD _dir_y0
860C  CE7998                  LDU #FPSPAREA
860F  BD7DB9                  JSR INT2FP
8612  8EC1BB                  LDX #_event_handler_Tflt91
8615  BD7A60                  JSR FPSTO
8618  FCC10A                  LDD _angle
861B  CE7998                  LDU #FPSPAREA
861E  BD7DB9                  JSR INT2FP
8621  8EC1C1                  LDX #_event_handler_Tflt92
8624  BD7A60                  JSR FPSTO
8627  FC817D                  LDD PI
862A  FDC1CD                  STD _event_handler_Tflt94
862D  FC817F                  LDD PI+2
8630  FDC1CF                  STD _event_handler_Tflt94+2
8633  C687                    LDB #$87
8635  F7C1D3                  STB _event_handler_Tflt95+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
8638  CC0034                  LDD #$0034
863B  B7C1D5                  STA _event_handler_Tflt95+2
863E  B7C1D6                  STA _event_handler_Tflt95+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8641  B7C1D7                  STA _event_handler_Tflt95+4
8644  F7C1D4                  STB _event_handler_Tflt95+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8647  CE7998                  LDU #FPSPAREA
864A  8EC1C1                  LDX #_event_handler_Tflt92
864D  BD7A53                  JSR FPLOD
8650  8EC1CD                  LDX #_event_handler_Tflt94
8653  BD7A53                  JSR FPLOD
8656  BD7B80                  JSR FPMUL
8659  8EC1D9                  LDX #_event_handler_Tflt96
865C  BD7A60                  JSR FPSTO
865F  CE7998                  LDU #FPSPAREA
8662  8EC1D9                  LDX #_event_handler_Tflt96
8665  BD7A53                  JSR FPLOD
8668  8EC1D3                  LDX #_event_handler_Tflt95
866B  BD7A53                  JSR FPLOD
866E  BD7C9F                  JSR FPDIV
8671  8EC1D9                  LDX #_event_handler_Tflt96
8674  BD7A60                  JSR FPSTO
8677  CE7998                  LDU #FPSPAREA
867A  8EC1D9                  LDX #_event_handler_Tflt96
867D  BD7A53                  JSR FPLOD
8680  BD831F                  JSR FPCOS
8683  8EC1C7                  LDX #_event_handler_Tflt93
8686  BD7A60                  JSR FPSTO
8689  CE7998                  LDU #FPSPAREA
868C  8EC1BB                  LDX #_event_handler_Tflt91
868F  BD7A53                  JSR FPLOD
8692  8EC1C7                  LDX #_event_handler_Tflt93
8695  BD7A53                  JSR FPLOD
8698  BD7B80                  JSR FPMUL
869B  8EC1DF                  LDX #_event_handler_Tflt97
869E  BD7A60                  JSR FPSTO
86A1  CE7998                  LDU #FPSPAREA
86A4  8EC1B5                  LDX #_event_handler_Tflt90
86A7  BD7A53                  JSR FPLOD
86AA  8EC1DF                  LDX #_event_handler_Tflt97
86AD  BD7A53                  JSR FPLOD
86B0  BD7A98                  JSR FPADD
86B3  8EC1E5                  LDX #_event_handler_Tflt98
86B6  BD7A60                  JSR FPSTO
86B9  CE7998                  LDU #FPSPAREA
86BC  8EC1E5                  LDX #_event_handler_Tflt98
86BF  BD7A53                  JSR FPLOD
86C2  BD7E25                  JSR FP2INT
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
86C5  FD89F0                  STD _dir_y
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Tflt84
                              ; Q _event_handler_Tflt85
                              ; Q _event_handler_Tflt86
                              ; Q _event_handler_Tflt87
                              ; Q _event_handler_Tflt88
                              ; Q _event_handler_Tflt89
                              ; Q _event_handler_Tflt90
                              ; Q _event_handler_Tflt91
                              ; Q _event_handler_Tflt92
                              ; Q _event_handler_Tflt93
                              ; Q _event_handler_Tflt94
                              ; Q _event_handler_Tflt95
                              ; Q _event_handler_Tflt96
                              ; Q _event_handler_Tflt97
                              ; Q _event_handler_Tflt98
                              ; Q _event_handler_Ttmp99
                              ; Q _event_handler_Ttmp100
                              ; VSP
                              ; P:123
                              ; L:131
                      ; peephole(12): inlined1
                      ;       LDD _plane_x0
86C8  CC0000                  LDD #$0000
86C9                  _plane_x0 equ *-2
86CB  CE7998                  LDU #FPSPAREA
86CE  BD7DB9                  JSR INT2FP
86D1  8EC191                  LDX #_event_handler_Tflt84
86D4  BD7A60                  JSR FPSTO
86D7  FCC10A                  LDD _angle
86DA  CE7998                  LDU #FPSPAREA
86DD  BD7DB9                  JSR INT2FP
86E0  8EC197                  LDX #_event_handler_Tflt85
86E3  BD7A60                  JSR FPSTO
86E6  FC817D                  LDD PI
86E9  FDC1A3                  STD _event_handler_Tflt87
86EC  FC817F                  LDD PI+2
86EF  FDC1A5                  STD _event_handler_Tflt87+2
86F2  C687                    LDB #$87
86F4  F7C1A9                  STB _event_handler_Tflt88+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
86F7  CC0034                  LDD #$0034
86FA  B7C1AB                  STA _event_handler_Tflt88+2
86FD  B7C1AC                  STA _event_handler_Tflt88+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8700  B7C1AD                  STA _event_handler_Tflt88+4
8703  F7C1AA                  STB _event_handler_Tflt88+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8706  CE7998                  LDU #FPSPAREA
8709  8EC197                  LDX #_event_handler_Tflt85
870C  BD7A53                  JSR FPLOD
870F  8EC1A3                  LDX #_event_handler_Tflt87
8712  BD7A53                  JSR FPLOD
8715  BD7B80                  JSR FPMUL
8718  8EC1AF                  LDX #_event_handler_Tflt89
871B  BD7A60                  JSR FPSTO
871E  CE7998                  LDU #FPSPAREA
8721  8EC1AF                  LDX #_event_handler_Tflt89
8724  BD7A53                  JSR FPLOD
8727  8EC1A9                  LDX #_event_handler_Tflt88
872A  BD7A53                  JSR FPLOD
872D  BD7C9F                  JSR FPDIV
8730  8EC1AF                  LDX #_event_handler_Tflt89
8733  BD7A60                  JSR FPSTO
8736  CE7998                  LDU #FPSPAREA
8739  8EC1AF                  LDX #_event_handler_Tflt89
873C  BD7A53                  JSR FPLOD
873F  BD831F                  JSR FPCOS
8742  8EC19D                  LDX #_event_handler_Tflt86
8745  BD7A60                  JSR FPSTO
8748  CE7998                  LDU #FPSPAREA
874B  8EC191                  LDX #_event_handler_Tflt84
874E  BD7A53                  JSR FPLOD
8751  8EC19D                  LDX #_event_handler_Tflt86
8754  BD7A53                  JSR FPLOD
8757  BD7B80                  JSR FPMUL
875A  8EC1B5                  LDX #_event_handler_Tflt90
875D  BD7A60                  JSR FPSTO
                      ; peephole(12): inlined1
                      ;       LDD _plane_y0
8760  CCFF80                  LDD #$ff80
8761                  _plane_y0 equ *-2
8763  CE7998                  LDU #FPSPAREA
8766  BD7DB9                  JSR INT2FP
8769  8EC1BB                  LDX #_event_handler_Tflt91
876C  BD7A60                  JSR FPSTO
876F  FCC10A                  LDD _angle
8772  CE7998                  LDU #FPSPAREA
8775  BD7DB9                  JSR INT2FP
8778  8EC1C1                  LDX #_event_handler_Tflt92
877B  BD7A60                  JSR FPSTO
877E  FC817D                  LDD PI
8781  FDC1CD                  STD _event_handler_Tflt94
8784  FC817F                  LDD PI+2
8787  FDC1CF                  STD _event_handler_Tflt94+2
878A  C687                    LDB #$87
878C  F7C1D3                  STB _event_handler_Tflt95+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
878F  CC0034                  LDD #$0034
8792  B7C1D5                  STA _event_handler_Tflt95+2
8795  B7C1D6                  STA _event_handler_Tflt95+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8798  B7C1D7                  STA _event_handler_Tflt95+4
879B  F7C1D4                  STB _event_handler_Tflt95+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
879E  CE7998                  LDU #FPSPAREA
87A1  8EC1C1                  LDX #_event_handler_Tflt92
87A4  BD7A53                  JSR FPLOD
87A7  8EC1CD                  LDX #_event_handler_Tflt94
87AA  BD7A53                  JSR FPLOD
87AD  BD7B80                  JSR FPMUL
87B0  8EC1D9                  LDX #_event_handler_Tflt96
87B3  BD7A60                  JSR FPSTO
87B6  CE7998                  LDU #FPSPAREA
87B9  8EC1D9                  LDX #_event_handler_Tflt96
87BC  BD7A53                  JSR FPLOD
87BF  8EC1D3                  LDX #_event_handler_Tflt95
87C2  BD7A53                  JSR FPLOD
87C5  BD7C9F                  JSR FPDIV
87C8  8EC1D9                  LDX #_event_handler_Tflt96
87CB  BD7A60                  JSR FPSTO
87CE  CE7998                  LDU #FPSPAREA
87D1  8EC1D9                  LDX #_event_handler_Tflt96
87D4  BD7A53                  JSR FPLOD
87D7  BD82D7                  JSR FPSIN
87DA  8EC1C7                  LDX #_event_handler_Tflt93
87DD  BD7A60                  JSR FPSTO
87E0  CE7998                  LDU #FPSPAREA
87E3  8EC1BB                  LDX #_event_handler_Tflt91
87E6  BD7A53                  JSR FPLOD
87E9  8EC1C7                  LDX #_event_handler_Tflt93
87EC  BD7A53                  JSR FPLOD
87EF  BD7B80                  JSR FPMUL
87F2  8EC1DF                  LDX #_event_handler_Tflt97
87F5  BD7A60                  JSR FPSTO
87F8  CE7998                  LDU #FPSPAREA
87FB  8EC1B5                  LDX #_event_handler_Tflt90
87FE  BD7A53                  JSR FPLOD
8801  8EC1DF                  LDX #_event_handler_Tflt97
8804  BD7A53                  JSR FPLOD
8807  BD7A95                  JSR FPSUB
880A  8EC1E5                  LDX #_event_handler_Tflt98
880D  BD7A60                  JSR FPSTO
8810  CE7998                  LDU #FPSPAREA
8813  8EC1E5                  LDX #_event_handler_Tflt98
8816  BD7A53                  JSR FPLOD
8819  BD7E25                  JSR FP2INT
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
881C  FDC108                  STD _plane_x
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Tflt84
                              ; Q _event_handler_Tflt85
                              ; Q _event_handler_Tflt86
                              ; Q _event_handler_Tflt87
                              ; Q _event_handler_Tflt88
                              ; Q _event_handler_Tflt89
                              ; Q _event_handler_Tflt90
                              ; Q _event_handler_Tflt91
                              ; Q _event_handler_Tflt92
                              ; Q _event_handler_Tflt93
                              ; Q _event_handler_Tflt94
                              ; Q _event_handler_Tflt95
                              ; Q _event_handler_Tflt96
                              ; Q _event_handler_Tflt97
                              ; Q _event_handler_Tflt98
                              ; Q _event_handler_Ttmp99
                              ; Q _event_handler_Ttmp100
                              ; VSP
                              ; P:123
                              ; L:132
881F  FC86C9                  LDD _plane_x0
8822  CE7998                  LDU #FPSPAREA
8825  BD7DB9                  JSR INT2FP
8828  8EC191                  LDX #_event_handler_Tflt84
882B  BD7A60                  JSR FPSTO
882E  FCC10A                  LDD _angle
8831  CE7998                  LDU #FPSPAREA
8834  BD7DB9                  JSR INT2FP
8837  8EC197                  LDX #_event_handler_Tflt85
883A  BD7A60                  JSR FPSTO
883D  FC817D                  LDD PI
8840  FDC1A3                  STD _event_handler_Tflt87
8843  FC817F                  LDD PI+2
8846  FDC1A5                  STD _event_handler_Tflt87+2
8849  C687                    LDB #$87
884B  F7C1A9                  STB _event_handler_Tflt88+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
884E  CC0034                  LDD #$0034
8851  B7C1AB                  STA _event_handler_Tflt88+2
8854  B7C1AC                  STA _event_handler_Tflt88+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8857  B7C1AD                  STA _event_handler_Tflt88+4
885A  F7C1AA                  STB _event_handler_Tflt88+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
885D  CE7998                  LDU #FPSPAREA
8860  8EC197                  LDX #_event_handler_Tflt85
8863  BD7A53                  JSR FPLOD
8866  8EC1A3                  LDX #_event_handler_Tflt87
8869  BD7A53                  JSR FPLOD
886C  BD7B80                  JSR FPMUL
886F  8EC1AF                  LDX #_event_handler_Tflt89
8872  BD7A60                  JSR FPSTO
8875  CE7998                  LDU #FPSPAREA
8878  8EC1AF                  LDX #_event_handler_Tflt89
887B  BD7A53                  JSR FPLOD
887E  8EC1A9                  LDX #_event_handler_Tflt88
8881  BD7A53                  JSR FPLOD
8884  BD7C9F                  JSR FPDIV
8887  8EC1AF                  LDX #_event_handler_Tflt89
888A  BD7A60                  JSR FPSTO
888D  CE7998                  LDU #FPSPAREA
8890  8EC1AF                  LDX #_event_handler_Tflt89
8893  BD7A53                  JSR FPLOD
8896  BD82D7                  JSR FPSIN
8899  8EC19D                  LDX #_event_handler_Tflt86
889C  BD7A60                  JSR FPSTO
889F  CE7998                  LDU #FPSPAREA
88A2  8EC191                  LDX #_event_handler_Tflt84
88A5  BD7A53                  JSR FPLOD
88A8  8EC19D                  LDX #_event_handler_Tflt86
88AB  BD7A53                  JSR FPLOD
88AE  BD7B80                  JSR FPMUL
88B1  8EC1B5                  LDX #_event_handler_Tflt90
88B4  BD7A60                  JSR FPSTO
88B7  FC8761                  LDD _plane_y0
88BA  CE7998                  LDU #FPSPAREA
88BD  BD7DB9                  JSR INT2FP
88C0  8EC1BB                  LDX #_event_handler_Tflt91
88C3  BD7A60                  JSR FPSTO
88C6  FCC10A                  LDD _angle
88C9  CE7998                  LDU #FPSPAREA
88CC  BD7DB9                  JSR INT2FP
88CF  8EC1C1                  LDX #_event_handler_Tflt92
88D2  BD7A60                  JSR FPSTO
88D5  FC817D                  LDD PI
88D8  FDC1CD                  STD _event_handler_Tflt94
88DB  FC817F                  LDD PI+2
88DE  FDC1CF                  STD _event_handler_Tflt94+2
88E1  C687                    LDB #$87
88E3  F7C1D3                  STB _event_handler_Tflt95+0
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$34
88E6  CC0034                  LDD #$0034
88E9  B7C1D5                  STA _event_handler_Tflt95+2
88EC  B7C1D6                  STA _event_handler_Tflt95+3
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
88EF  B7C1D7                  STA _event_handler_Tflt95+4
88F2  F7C1D4                  STB _event_handler_Tflt95+1
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
88F5  CE7998                  LDU #FPSPAREA
88F8  8EC1C1                  LDX #_event_handler_Tflt92
88FB  BD7A53                  JSR FPLOD
88FE  8EC1CD                  LDX #_event_handler_Tflt94
8901  BD7A53                  JSR FPLOD
8904  BD7B80                  JSR FPMUL
8907  8EC1D9                  LDX #_event_handler_Tflt96
890A  BD7A60                  JSR FPSTO
890D  CE7998                  LDU #FPSPAREA
8910  8EC1D9                  LDX #_event_handler_Tflt96
8913  BD7A53                  JSR FPLOD
8916  8EC1D3                  LDX #_event_handler_Tflt95
8919  BD7A53                  JSR FPLOD
891C  BD7C9F                  JSR FPDIV
891F  8EC1D9                  LDX #_event_handler_Tflt96
8922  BD7A60                  JSR FPSTO
8925  CE7998                  LDU #FPSPAREA
8928  8EC1D9                  LDX #_event_handler_Tflt96
892B  BD7A53                  JSR FPLOD
892E  BD831F                  JSR FPCOS
8931  8EC1C7                  LDX #_event_handler_Tflt93
8934  BD7A60                  JSR FPSTO
8937  CE7998                  LDU #FPSPAREA
893A  8EC1BB                  LDX #_event_handler_Tflt91
893D  BD7A53                  JSR FPLOD
8940  8EC1C7                  LDX #_event_handler_Tflt93
8943  BD7A53                  JSR FPLOD
8946  BD7B80                  JSR FPMUL
8949  8EC1DF                  LDX #_event_handler_Tflt97
894C  BD7A60                  JSR FPSTO
894F  CE7998                  LDU #FPSPAREA
8952  8EC1B5                  LDX #_event_handler_Tflt90
8955  BD7A53                  JSR FPLOD
8958  8EC1DF                  LDX #_event_handler_Tflt97
895B  BD7A53                  JSR FPLOD
895E  BD7A98                  JSR FPADD
8961  8EC1E5                  LDX #_event_handler_Tflt98
8964  BD7A60                  JSR FPSTO
8967  CE7998                  LDU #FPSPAREA
896A  8EC1E5                  LDX #_event_handler_Tflt98
896D  BD7A53                  JSR FPLOD
8970  BD7E25                  JSR FP2INT
                      ; peephole(6): unread1
                      ;       STD _event_handler_Ttmp65
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _event_handler_Ttmp65
8973  FD89F3                  STD _plane_y
                              ; Q _event_handler_Ttmp7
                              ; Q _event_handler_Ttmp8
                              ; Q _event_handler_Ttmp10
                              ; Q _event_handler_Ttmp12
                              ; Q _event_handler_Ttmp65
                              ; Q _event_handler_Tflt84
                              ; Q _event_handler_Tflt85
                              ; Q _event_handler_Tflt86
                              ; Q _event_handler_Tflt87
                              ; Q _event_handler_Tflt88
                              ; Q _event_handler_Tflt89
                              ; Q _event_handler_Tflt90
                              ; Q _event_handler_Tflt91
                              ; Q _event_handler_Tflt92
                              ; Q _event_handler_Tflt93
                              ; Q _event_handler_Tflt94
                              ; Q _event_handler_Tflt95
                              ; Q _event_handler_Tflt96
                              ; Q _event_handler_Tflt97
                              ; Q _event_handler_Tflt98
                              ; Q _event_handler_Ttmp99
                              ; Q _event_handler_Ttmp100
                              ; VSP
                              ; P:123
                              ; L:133
8976                  _label83f
8976                  _label83e0
                              ; Q _event_handler_Ttmp27
                              ; VSP
                              ; P:2
                              ; L:134
                              ; VSP
                              ; P:0
                              ; L:135
8976  39                      RTS
8977                  event_handlerafter
                              ; VSP
                              ; P:2
                              ; L:136
                              ; VSP
                              ; P:0
                              ; L:137
                              IF (((128+raycasterafter-(*+2))|(127-raycasterafter+(*+2)))&0x8000)
8977  7E8E72                  JMP raycasterafter
                              ELSE
                              BRA raycasterafter
                              ENDIF
897A                  PROCraycaster
                              ; VSP
                              ; P:6
                              ; L:138
                              ; VSP
                              ; P:0
                              ; L:139
                              ; VSP
                              ; P:0
                              ; L:140
                              ; VSP
                              ; P:0
                              ; L:141
                              ; VSP
                              ; P:0
                              ; L:142
                              ; VSP
                              ; P:0
                              ; L:143
                              ; VSP
                              ; P:0
                              ; L:144
                              ; VSP
                              ; P:0
                              ; L:145
                              ; VSP
                              ; P:0
                              ; L:146
                              ; VSP
                              ; P:0
                              ; L:147
                              ; VSP
                              ; P:0
                              ; L:148
                              ; VSP
                              ; P:0
                              ; L:149
                              ; VSP
                              ; P:0
                              ; L:150
                              ; VSP
                              ; P:0
                              ; L:151
                              ; VSP
                              ; P:0
                              ; L:152
                              ; VSP
                              ; P:0
                              ; L:153
                              ; VSP
                              ; P:0
                              ; L:154
                              ; VSP
                              ; P:0
                              ; L:155
897A  4F                      CLRA
897B  B7C172                  STA _raycaster_side
                              ; VSP
                              ; P:2
                              ; L:156
                              ; VSP
                              ; P:0
                              ; L:157
                              ; VSP
                              ; P:0
                              ; L:158
                              ; VSP
                              ; P:0
                              ; L:159
                              ; VSP
                              ; P:0
                              ; L:160
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
897E  B7C173                  STA _raycaster_color
                              ; VSP
                              ; P:2
                              ; L:161
                              ; VSP
                              ; P:0
                              ; L:162
                              ; VSP
                              ; P:0
                              ; L:163
                              ; VSP
                              ; P:0
                              ; L:164
                              ; VSP
                              ; P:0
                              ; L:165
                              ; VSP
                              ; P:0
                              ; L:166
                              ; VSP
                              ; P:0
                              ; L:167
8981  CC7553                  LDD #_pos_x
8984  FDC1ED                  STD _raycaster_Ttmp101
8987  E69FC1ED                LDB [_raycaster_Ttmp101]
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp102
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp102
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
898B  4F                      CLRA
898C  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
898F  FD89A9                  STD _raycaster_map_X0
                              ; Q _raycaster_Ttmp101
                              ; Q _raycaster_Ttmp102
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp105
                              ; VSP
                              ; P:9
                              ; L:168
                              ; VSP
                              ; P:0
                              ; L:169
                              ; VSP
                              ; P:0
                              ; L:170
                              ; VSP
                              ; P:0
                              ; L:171
8992  CCC106                  LDD #_pos_y
8995  FDC1ED                  STD _raycaster_Ttmp101
8998  E69FC1ED                LDB [_raycaster_Ttmp101]
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp102
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp102
899C  F789B3                  STB _raycaster_map_Y0
                              ; Q _raycaster_Ttmp101
                              ; Q _raycaster_Ttmp102
                              ; Q _raycaster_Ttmp104
                              ; VSP
                              ; P:6
                              ; L:172
                              ; VSP
                              ; P:0
                              ; L:173
899F  CCBD00                  LDD #_world_map
89A2  FDC1ED                  STD _raycaster_Ttmp101
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp101
89A5  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(12): inlined1
                      ;       LDD _raycaster_map_X0
89A8  CC0000                  LDD #$0000
89A9                  _raycaster_map_X0 equ *-2
89AB  F3C1EF                  ADDD _raycaster_Ttmp103
89AE  FDC1F1                  STD _raycaster_Ttmp106
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
89B1  4F                      CLRA
                      ; peephole(12): inlined1
                      ;       LDB _raycaster_map_Y0
89B2  C600                    LDB #1-1
89B3                  _raycaster_map_Y0 equ *-1
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
89B4  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
89B6  FDC1F3                  STD _raycaster_Ttmp108
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp108
89B9  58                      LSLB
89BA  49                      ROLA
89BB  58                      LSLB
89BC  49                      ROLA
89BD  58                      LSLB
89BE  49                      ROLA
89BF  58                      LSLB
89C0  49                      ROLA
89C1  58                      LSLB
89C2  49                      ROLA
89C3  FDC1F3                  STD _raycaster_Ttmp108
89C6  FCC1F1                  LDD _raycaster_Ttmp106
89C9  FD89D0                  STD _raycaster_Ttmp109
89CC  FCC1F3                  LDD _raycaster_Ttmp108
                      ; peephole(12): inlined1
                      ;       ADDD _raycaster_Ttmp109
89CF  C30000                  ADDD #$0000
89D0                  _raycaster_Ttmp109 equ *-2
89D2  FDC1F5                  STD _raycaster_Ttmp110
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp110
89D5  FD8D27                  STD _raycaster_map_pointer_0
                              ; Q _raycaster_Ttmp101
                              ; Q _raycaster_Ttmp102
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp105
                              ; Q _raycaster_Ttmp106
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp108
                              ; Q _raycaster_Ttmp109
                              ; Q _raycaster_Ttmp110
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:31
                              ; L:174
                              ; VSP
                              ; P:0
                              ; L:175
89D8  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _raycaster_Ttmp102
89D9  CC0000                  LDD #$0000
89DC  FDC110                  STD _raycaster_delta_dir_x
                              ; V _raycaster_Ttmp102
                              ; VSP
                              ; P:4
                              ; L:176
89DF  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _raycaster_Ttmp102
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
89E0  FDC112                  STD _raycaster_delta_dir_y
                              ; V _raycaster_Ttmp102
                              ; VSP
                              ; P:4
                              ; L:177
                      ; peephole(12): inlined1
                      ;       LDD _dir_x
89E3  CCFF00                  LDD #$ff00
89E4                  _dir_x equ *-2
89E6  B3C108                  SUBD _plane_x
89E9  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
89EC  FD8A93                  STD _raycaster_ray_dir_x0
                              ; Q _raycaster_Ttmp102
                              ; Q _raycaster_Ttmp103
                              ; VSP
                              ; P:5
                              ; L:178
                      ; peephole(12): inlined1
                      ;       LDD _dir_y
89EF  CC0000                  LDD #$0000
89F0                  _dir_y equ *-2
                      ; peephole(12): inlined1
                      ;       SUBD _plane_y
89F2  83FF80                  SUBD #$ff80
89F3                  _plane_y equ *-2
89F5  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
89F8  FD8AAB                  STD _raycaster_ray_dir_y0
                              ; Q _raycaster_Ttmp102
                              ; Q _raycaster_Ttmp103
                              ; VSP
                              ; P:5
                              ; L:179
                              ; VSP
                              ; P:0
                              ; L:180
                              ; VSP
                              ; P:0
                              ; L:181
                              IF (((128+_label112prepa-(*+2))|(127-_label112prepa+(*+2)))&0x8000)
                              JMP _label112prepa
                              ELSE
89FB  2012                    BRA _label112prepa
                              ENDIF
89FD                  _label112prepfrom
89FD  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _raycaster_Ttmp102
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _raycaster_Ttmp102
89FE  5F                      CLRB
89FF  F7C29D                  STB _TRtmp113
8A02  39                      RTS
8A03                  _label112prepto
8A03  C67F                    LDB #$7f
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp105
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp105
8A05  F7C29E                  STB _TRtmp114
8A08  39                      RTS
8A09                  _label112prepstep
8A09  C601                    LDB #$01
8A0B  F7C29F                  STB _TRtmp115
8A0E  39                      RTS
8A0F                  _label112prepa
                              IF (((128+_label112prepfrom-(*+2))|(127-_label112prepfrom+(*+2)))&0x8000)
                              JSR _label112prepfrom
                              ELSE
8A0F  8DEC                    BSR _label112prepfrom
                              ENDIF
                              IF (((128+_label112prepto-(*+2))|(127-_label112prepto+(*+2)))&0x8000)
                              JSR _label112prepto
                              ELSE
8A11  8DF0                    BSR _label112prepto
                              ENDIF
                              IF (((128+_label112prepstep-(*+2))|(127-_label112prepstep+(*+2)))&0x8000)
                              JSR _label112prepstep
                              ELSE
8A13  8DF4                    BSR _label112prepstep
                              ENDIF
8A15  F6C29D                  LDB _TRtmp113
8A18  F7C171                  STB _raycaster_camera_x
8A1B                  _label112bf
8A1B  5F                      CLRB
8A1C  B6C29F                  LDA _TRtmp115
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$0000
8A1F  2301                    BLS _label119
8A21  5A                      DECB
8A22                  _label119
8A22  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label112forw-(*+2))|(127-_label112forw+(*+2)))&0x8000)
                              LBNE _label112forw
                              ELSE
8A25  2602                    BNE _label112forw
                              ENDIF
                              IF (((128+_label112back-(*+2))|(127-_label112back+(*+2)))&0x8000)
                              JMP _label112back
                              ELSE
8A27  2022                    BRA _label112back
                              ENDIF
8A29                  _label112forw
8A29  5F                      CLRB
8A2A  B6C171                  LDA _raycaster_camera_x
8A2D  B1C29D                  CMPA _TRtmp113
8A30  2401                    BHS _label122
8A32  5A                      DECB
8A33                  _label122
8A33  F7C1FF                  STB _raycaster_Ttmp121
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp121
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
8A36  10260437                LBNE _label112bis
                              ELSE
                              BNE _label112bis
                              ENDIF
8A3A  5F                      CLRB
8A3B  B6C171                  LDA _raycaster_camera_x
8A3E  B1C29E                  CMPA _TRtmp114
8A41  2301                    BLS _label125
8A43  5A                      DECB
8A44                  _label125
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp124
8A44  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp124
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
8A45  10260428                LBNE _label112bis
                              ELSE
                              BNE _label112bis
                              ENDIF
                              IF (((128+_label112cont-(*+2))|(127-_label112cont+(*+2)))&0x8000)
                              JMP _label112cont
                              ELSE
8A49  201E                    BRA _label112cont
                              ENDIF
8A4B                  _label112back
8A4B  5F                      CLRB
8A4C  B6C171                  LDA _raycaster_camera_x
8A4F  B1C29D                  CMPA _TRtmp113
8A52  2301                    BLS _label128
8A54  5A                      DECB
8A55                  _label128
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp127
8A55  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp127
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
8A56  10260417                LBNE _label112bis
                              ELSE
                              BNE _label112bis
                              ENDIF
8A5A  5F                      CLRB
8A5B  B6C171                  LDA _raycaster_camera_x
8A5E  B1C29E                  CMPA _TRtmp114
8A61  2401                    BHS _label131
8A63  5A                      DECB
8A64                  _label131
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp130
8A64  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp130
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
8A65  10260408                LBNE _label112bis
                              ELSE
                              BNE _label112bis
                              ENDIF
8A69                  _label112cont
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; Q _raycaster_Ttmp118
                              ; Q _raycaster_Ttmp121
                              ; Q _raycaster_Ttmp124
                              ; Q _raycaster_Ttmp127
                              ; Q _raycaster_Ttmp130
                              ; VSP
                              ; P:118
                              ; L:182
8A69  FCC110                  LDD _raycaster_delta_dir_x
8A6C  FDC1EF                  STD _raycaster_Ttmp103
                              IF (((128+cpu_math_div2_const_16bit_after-(*+2))|(127-cpu_math_div2_const_16bit_after+(*+2)))&0x8000)
                              JMP cpu_math_div2_const_16bit_after
                              ELSE
8A6F  2015                    BRA cpu_math_div2_const_16bit_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
8A71                  CPUMATHDIV2CONST16BIT_SIGNED
8A71  4D                      TSTA
8A72  2B07                    BMI CPUMATHDIV2CONST16BIT_NEG
                              
                      ; fall through    
8A74                  CPUMATHDIV2CONST16BIT
8A74  44                      LSRA
8A75  56                      RORB
8A76  301F                    LEAX -1,X
8A78  26FA                    BNE CPUMATHDIV2CONST16BIT
8A7A  39                      RTS
8A7B                  CPUMATHDIV2CONST16BIT_NEG
8A7B  40                      NEGA
8A7C  50                      NEGB
8A7D  8200                    SBCA #0
8A7F  8DF3                    BSR CPUMATHDIV2CONST16BIT
8A81  40                      NEGA
8A82  50                      NEGB
8A83  8200                    SBCA #0
8A85  39                      RTS
8A86                  cpu_math_div2_const_16bit_after
8A86  FCC1EF                  LDD _raycaster_Ttmp103
8A89  8E0006                  LDX #$06
8A8C  BD8A71                  JSR CPUMATHDIV2CONST16BIT_SIGNED
8A8F  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(12): inlined1
                      ;       ADDD _raycaster_ray_dir_x0
8A92  C30000                  ADDD #$0000
8A93                  _raycaster_ray_dir_x0 equ *-2
8A95  FDC1F1                  STD _raycaster_Ttmp106
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp106
8A98  FDC10C                  STD _raycaster_ray_dir_x
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp106
                              ; VSP
                              ; P:36
                              ; L:183
8A9B  FCC112                  LDD _raycaster_delta_dir_y
8A9E  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8AA1  8E0006                  LDX #$06
8AA4  BD8A71                  JSR CPUMATHDIV2CONST16BIT_SIGNED
8AA7  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(12): inlined1
                      ;       ADDD _raycaster_ray_dir_y0
8AAA  C30000                  ADDD #$0000
8AAB                  _raycaster_ray_dir_y0 equ *-2
8AAD  FDC1F1                  STD _raycaster_Ttmp106
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp106
8AB0  FDC10E                  STD _raycaster_ray_dir_y
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp106
                              ; VSP
                              ; P:11
                              ; L:184
                              ; VSP
                              ; P:0
                              ; L:185
8AB3  4F                      CLRA
8AB4  B7C1FD                  STA _raycaster_Ttmp104
8AB7  5F                      CLRB
8AB8  BEC10C                  LDX _raycaster_ray_dir_x
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$00
8ABB  2601                    BNE _label133
8ABD  5A                      DECB
8ABE                  _label133
8ABE  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
8AC1  53                      COMB
8AC2  F7C1FF                  STB _raycaster_Ttmp121
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp121
                              IF (((128+_label134e0-(*+2))|(127-_label134e0+(*+2)))&0x8000)
8AC5  10270154                LBEQ _label134e0
                              ELSE
                              BEQ _label134e0
                              ENDIF
8AC9                  _label134t
                              ; V _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:19
                              ; L:186
                              ; VSP
                              ; P:0
                              ; L:187
                              ; VSP
                              ; P:0
                              ; L:188
                              ; VSP
                              ; P:0
                              ; L:189
8AC9  CC7553                  LDD #_pos_x
8ACC  FDC1ED                  STD _raycaster_Ttmp101
8ACF  E69FC1ED                LDB [_raycaster_Ttmp101]
8AD3  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8AD6  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8AD7  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8AD9  FDC120                  STD _raycaster_v3
                              ; Q _raycaster_Ttmp101
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:9
                              ; L:190
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8ADC  B7C1FD                  STA _raycaster_Ttmp104
8ADF  5F                      CLRB
8AE0  BEC10C                  LDX _raycaster_ray_dir_x
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
8AE3  2C01                    BGE _label136
8AE5  5A                      DECB
8AE6                  _label136
8AE6  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label137e0-(*+2))|(127-_label137e0+(*+2)))&0x8000)
                              LBEQ _label137e0
                              ELSE
8AE9  270D                    BEQ _label137e0
                              ENDIF
8AEB                  _label137t
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:16
                              ; L:191
8AEB  CCFFFF                  LDD #$ffff
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8AEE  DDF9                    STD <(_raycaster_Ttmp107)
8AF0  CCFFFF                  LDD #$ffff
8AF3  FDC122                  STD _raycaster_step_x
                              ; V _raycaster_Ttmp107
                              ; VSP
                              ; P:4
                              ; L:192
                              IF (((128+_label137f-(*+2))|(127-_label137f+(*+2)))&0x8000)
                              JMP _label137f
                              ELSE
8AF6  2021                    BRA _label137f
                              ENDIF
8AF8                  _label137e0
8AF8  F6C1FE                  LDB _raycaster_Ttmp118
                              IF (((128+_label137f-(*+2))|(127-_label137f+(*+2)))&0x8000)
                              LBNE _label137f
                              ELSE
8AFB  261C                    BNE _label137f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:193
8AFD  C601                    LDB #$01
8AFF  F7C1FD                  STB _raycaster_Ttmp104
8B02  CC0001                  LDD #$0001
8B05  FDC122                  STD _raycaster_step_x
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:194
8B08  CC0100                  LDD #$0100
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B0B  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8B0D  B3C120                  SUBD _raycaster_v3
8B10  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8B13  FDC1F3                  STD _raycaster_Ttmp108
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp108
8B16  FDC120                  STD _raycaster_v3
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; V _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp108
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:9
                              ; L:195
8B19                  _label137f
8B19                  _label137e1
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:2
                              ; L:196
8B19  FCC120                  LDD _raycaster_v3
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B1C  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8B1E  8E0004                  LDX #$04
8B21  BD8A74                  JSR CPUMATHDIV2CONST16BIT
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B24  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8B26  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8B29  FDC11E                  STD _raycaster_v1
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:10
                              ; L:197
                              ; cpu6809_less_than_and_branch_const
8B2C  5F                      CLRB
8B2D  B6C10C                  LDA _raycaster_ray_dir_x
8B30  8180                    CMPA #$0080
8B32  2403                    BHS _label139
8B34  7E8B42                  JMP _label138pos
8B37                  _label139
8B37                  _label138nev
8B37  FCC10C                  LDD _raycaster_ray_dir_x
8B3A  40                      NEGA
8B3B  50                      NEGB
8B3C  8200                    SBCA #0
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B3E  DDF9                    STD <(_raycaster_Ttmp107)
                              IF (((128+_label138end-(*+2))|(127-_label138end+(*+2)))&0x8000)
                              JMP _label138end
                              ELSE
8B40  2005                    BRA _label138end
                              ENDIF
8B42                  _label138pos
8B42  FCC10C                  LDD _raycaster_ray_dir_x
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B45  DDF9                    STD <(_raycaster_Ttmp107)
8B47                  _label138end
8B47  CC0000                  LDD #$0000
8B4A  FDC1F5                  STD _raycaster_Ttmp110
                      ; peephole(12): direct-page1
                      ;       LDD _raycaster_Ttmp107
8B4D  DCF9                    LDD <(_raycaster_Ttmp107)
8B4F  F3C1F5                  ADDD _raycaster_Ttmp110
8B52  FDC1F5                  STD _raycaster_Ttmp110
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp110
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _raycaster_Ttmp141
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp141
8B55  58                      LSLB
8B56  49                      ROLA
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _raycaster_Ttmp141
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp141
8B57  C3BA00                  ADDD #_table_div_4096
8B5A  FDC1F7                  STD _raycaster_Ttmp141
8B5D  EC9FC1F7                LDD [_raycaster_Ttmp141]
8B61  FDC1F3                  STD _raycaster_Ttmp108
                              ; move from array to = _raycaster_Ttmp108
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp108
8B64  FDC114                  STD _raycaster_delta_dist_x
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp108
                              ; Q _raycaster_Ttmp109
                              ; Q _raycaster_Ttmp110
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp118
                              ; Q _raycaster_Ttmp141
                              ; VSP
                              ; P:39
                              ; L:198
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_delta_dist_x
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B67  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8B69  8E0004                  LDX #$04
8B6C  BD8A74                  JSR CPUMATHDIV2CONST16BIT
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8B6F  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8B71  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(6): unread1
                      ;       STD _raycaster_temp_int
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:10
                              ; L:199
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_temp_int
8B74  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
                      ; peephole(6): unread1
                      ;       STB _raycaster_v2
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:4
                              ; L:200
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_v2
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8B77  4F                      CLRA
8B78  FDC1EF                  STD _raycaster_Ttmp103
                              IF (((128+cpu_math_mul_16bit_to_32bit_after-(*+2))|(127-cpu_math_mul_16bit_to_32bit_after+(*+2)))&0x8000)
8B7B  7E8C0D                  JMP cpu_math_mul_16bit_to_32bit_after
                              ELSE
                              BRA cpu_math_mul_16bit_to_32bit_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
8B7E                  CPUMATHMUL16BITTO32BIT_1
8B7E  9614                    LDA <MATHPTR0
8B80  260C                    BNE   CPUMATHMUL16BITTO32BIT_3
8B82  8E0000                  LDX   #0
8B85  DC1A                    LDD   <MATHPTR6
8B87  39                      RTS
8B88                  CPUMATHMUL16BITTO32BIT_2
8B88  9718                    STA   <MATHPTR4
8B8A  9615                    LDA <MATHPTR1
8B8C  2004                    BRA   CPUMATHMUL16BITTO32BIT_4
8B8E                  CPUMATHMUL16BITTO32BIT_3
8B8E  D718                    STB   <MATHPTR4
8B90  D617                    LDB <MATHPTR3
8B92                  CPUMATHMUL16BITTO32BIT_4
8B92  3D                      MUL
8B93  DB1A                    ADDB  <MATHPTR6
8B95  8900                    ADCA  #0
                              ; STD   <MATHPTR5
8B97  9719                    STA   <MATHPTR5
8B99  D71A                    STB   <MATHPTR6
8B9B  9E18                    LDX   <MATHPTR4
8B9D  DC1A                    LDD   <MATHPTR6
8B9F  39                      RTS
8BA0                  CPUMATHMUL16BITTO32BIT
8BA0  DD14                    STD   <MATHPTR0
8BA2  9F16                    STX   <MATHPTR2
8BA4  9617                    LDA   <MATHPTR3
8BA6  3D                      MUL
8BA7  DD1A                    STD <MATHPTR6
8BA9  D616                    LDB <MATHPTR2
8BAB  27D1                    BEQ   CPUMATHMUL16BITTO32BIT_1
8BAD  9614                    LDA   <MATHPTR0
8BAF  27D7                    BEQ   CPUMATHMUL16BITTO32BIT_2
8BB1  3D                      MUL
8BB2  DD18                    STD   <MATHPTR4
8BB4  DC15                    LDD   <MATHPTR1
8BB6  3D                      MUL
8BB7  FD8BC0                  STD   CPUMATHMUL16BITTO32BIT1-2
                              
8BBA  9614                    LDA <MATHPTR0
8BBC  D617                    LDB <MATHPTR3
8BBE  3D                      MUL
8BBF  C35555                  ADDD  #$5555
8BC2                  CPUMATHMUL16BITTO32BIT1
8BC2  2402                    BCC   CPUMATHMUL16BITTO32BIT2
8BC4  0C18                    INC   <MATHPTR4
8BC6                  CPUMATHMUL16BITTO32BIT2
8BC6  D319                    ADDD  <MATHPTR5
                              ; STD   <MATHPTR5
8BC8  9719                    STA   <MATHPTR5
8BCA  D71A                    STB   <MATHPTR6
8BCC  9E18                    LDX   <MATHPTR4
8BCE  DC1A                    LDD   <MATHPTR6
8BD0  2404                    BCC   CPUMATHMUL16BITTO32BIT3
8BD2  30898000                LEAX  $8000,X
8BD6                  CPUMATHMUL16BITTO32BIT3
8BD6  39                      RTS
8BD7                  CPUMATHMUL16BITTO32BIT_SIGNED
8BD7  9F16                    STX   <MATHPTR2
8BD9  DD14                    STD   <MATHPTR0
8BDB  9816                    EORA  <MATHPTR2     ; sign of product
8BDD  9710                    STA <TMPPTR
8BDF  DC16                    LDD   <MATHPTR2     ; Y<0 ?
8BE1  2A04                    BPL   CPUMATHMUL16BITTO32BIT_SIGNED1
8BE3  40                      NEGA                ; yes ==> negate
8BE4  50                      NEGB
8BE5  8200                    SBCA  #0
8BE7                  CPUMATHMUL16BITTO32BIT_SIGNED1
8BE7  1F01                    TFR   D,X
8BE9  DC14                    LDD   <MATHPTR0     ; X<0 ?
8BEB  2A04                    BPL   CPUMATHMUL16BITTO32BIT_SIGNED2
8BED  40                      NEGA                ; yes ==> negate
8BEE  50                      NEGB
8BEF  8200                    SBCA  #0
8BF1                  CPUMATHMUL16BITTO32BIT_SIGNED2
8BF1  8DAD                    BSR   CPUMATHMUL16BITTO32BIT
8BF3                  CPUMATHMUL16BITTO32BIT_SIGNED2a
8BF3  0D10                    TST   <TMPPTR      ; result<0 ?
8BF5  2B01                    BMI   CPUMATHMUL16BITTO32BIT_SIGNED3
8BF7  39                      RTS
8BF8                  CPUMATHMUL16BITTO32BIT_SIGNED3
8BF8  3410                    PSHS  X
8BFA  6361                    COM   1,S          ; yes ==> negate
8BFC  63E4                    COM   ,S
8BFE  43                      COMA
8BFF  50                      NEGB
8C00  2609                    BNE   CPUMATHMUL16BITTO32BIT_SIGNED4
8C02  4C                      INCA
8C03  2606                    BNE   CPUMATHMUL16BITTO32BIT_SIGNED4
8C05  6C61                    INC   1,S
8C07  2602                    BNE   CPUMATHMUL16BITTO32BIT_SIGNED4
8C09  6CE4                    INC   ,S
8C0B                  CPUMATHMUL16BITTO32BIT_SIGNED4
8C0B  3590                    PULS  X,PC
8C0D                  cpu_math_mul_16bit_to_32bit_after
8C0D  FCC1EF                  LDD _raycaster_Ttmp103
8C10  BEC11E                  LDX _raycaster_v1
8C13  BD8BD7                  JSR CPUMATHMUL16BITTO32BIT_SIGNED
                      ; peephole(6): unread1
                      ;       STX _raycaster_Ttmp143
                      ; peephole(6): unread1
                      ;       STD _raycaster_Ttmp143+2
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp143+2
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8C16  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8C18  FDC118                  STD _raycaster_side_dist_x
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; Q _raycaster_Ttmp143
                              ; VSP
                              ; P:110
                              ; L:201
                              IF (((128+_label134f-(*+2))|(127-_label134f+(*+2)))&0x8000)
                              JMP _label134f
                              ELSE
8C1B  201A                    BRA _label134f
                              ENDIF
8C1D                  _label134e0
8C1D  F6C1FF                  LDB _raycaster_Ttmp121
                              IF (((128+_label134f-(*+2))|(127-_label134f+(*+2)))&0x8000)
                              LBNE _label134f
                              ELSE
8C20  2615                    BNE _label134f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:202
8C22  4F                      CLRA
8C23  B7C1FD                  STA _raycaster_Ttmp104
8C26  CC0000                  LDD #$0000
8C29  FDC114                  STD _raycaster_delta_dist_x
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:203
8C2C  CCFFFF                  LDD #$ffff
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8C2F  DDF9                    STD <(_raycaster_Ttmp107)
8C31  CCFFFF                  LDD #$ffff
8C34  FDC118                  STD _raycaster_side_dist_x
                              ; V _raycaster_Ttmp107
                              ; VSP
                              ; P:4
                              ; L:204
8C37                  _label134f
8C37                  _label134e1
                              ; Q _raycaster_Ttmp121
                              ; VSP
                              ; P:2
                              ; L:205
                              ; VSP
                              ; P:0
                              ; L:206
8C37  4F                      CLRA
8C38  B7C1FD                  STA _raycaster_Ttmp104
8C3B  5F                      CLRB
8C3C  BEC10E                  LDX _raycaster_ray_dir_y
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$00
8C3F  2601                    BNE _label145
8C41  5A                      DECB
8C42                  _label145
8C42  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
8C45  53                      COMB
8C46  F7C1FF                  STB _raycaster_Ttmp121
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp121
                              IF (((128+_label146e0-(*+2))|(127-_label146e0+(*+2)))&0x8000)
8C49  102700BF                LBEQ _label146e0
                              ELSE
                              BEQ _label146e0
                              ENDIF
8C4D                  _label146t
                              ; V _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:19
                              ; L:207
                              ; VSP
                              ; P:0
                              ; L:208
                              ; VSP
                              ; P:0
                              ; L:209
8C4D  CCC106                  LDD #_pos_y
8C50  FDC1ED                  STD _raycaster_Ttmp101
8C53  E69FC1ED                LDB [_raycaster_Ttmp101]
8C57  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8C5A  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8C5B  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8C5D  FDC120                  STD _raycaster_v3
                              ; Q _raycaster_Ttmp101
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:9
                              ; L:210
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8C60  B7C1FD                  STA _raycaster_Ttmp104
8C63  5F                      CLRB
8C64  BEC10E                  LDX _raycaster_ray_dir_y
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
8C67  2C01                    BGE _label148
8C69  5A                      DECB
8C6A                  _label148
8C6A  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label149e0-(*+2))|(127-_label149e0+(*+2)))&0x8000)
                              LBEQ _label149e0
                              ELSE
8C6D  270D                    BEQ _label149e0
                              ENDIF
8C6F                  _label149t
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:16
                              ; L:211
8C6F  CCFFE0                  LDD #$ffe0
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8C72  DDF9                    STD <(_raycaster_Ttmp107)
8C74  CCFFE0                  LDD #$ffe0
8C77  FDC124                  STD _raycaster_step_y
                              ; V _raycaster_Ttmp107
                              ; VSP
                              ; P:4
                              ; L:212
                              IF (((128+_label149f-(*+2))|(127-_label149f+(*+2)))&0x8000)
                              JMP _label149f
                              ELSE
8C7A  2021                    BRA _label149f
                              ENDIF
8C7C                  _label149e0
8C7C  F6C1FE                  LDB _raycaster_Ttmp118
                              IF (((128+_label149f-(*+2))|(127-_label149f+(*+2)))&0x8000)
                              LBNE _label149f
                              ELSE
8C7F  261C                    BNE _label149f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:213
8C81  C620                    LDB #$20
8C83  F7C1FD                  STB _raycaster_Ttmp104
8C86  CC0020                  LDD #$0020
8C89  FDC124                  STD _raycaster_step_y
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:214
8C8C  CC0100                  LDD #$0100
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8C8F  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8C91  B3C120                  SUBD _raycaster_v3
8C94  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8C97  FDC1F3                  STD _raycaster_Ttmp108
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp108
8C9A  FDC120                  STD _raycaster_v3
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; V _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp108
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:9
                              ; L:215
8C9D                  _label149f
8C9D                  _label149e1
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:2
                              ; L:216
8C9D  FCC120                  LDD _raycaster_v3
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CA0  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8CA2  8E0004                  LDX #$04
8CA5  BD8A74                  JSR CPUMATHDIV2CONST16BIT
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CA8  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8CAA  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8CAD  FDC11E                  STD _raycaster_v1
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:10
                              ; L:217
                              ; cpu6809_less_than_and_branch_const
8CB0  5F                      CLRB
8CB1  B6C10E                  LDA _raycaster_ray_dir_y
8CB4  8180                    CMPA #$0080
8CB6  2403                    BHS _label151
8CB8  7E8CC6                  JMP _label150pos
8CBB                  _label151
8CBB                  _label150nev
8CBB  FCC10E                  LDD _raycaster_ray_dir_y
8CBE  40                      NEGA
8CBF  50                      NEGB
8CC0  8200                    SBCA #0
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CC2  DDF9                    STD <(_raycaster_Ttmp107)
                              IF (((128+_label150end-(*+2))|(127-_label150end+(*+2)))&0x8000)
                              JMP _label150end
                              ELSE
8CC4  2005                    BRA _label150end
                              ENDIF
8CC6                  _label150pos
8CC6  FCC10E                  LDD _raycaster_ray_dir_y
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CC9  DDF9                    STD <(_raycaster_Ttmp107)
8CCB                  _label150end
8CCB  CC0000                  LDD #$0000
8CCE  FDC1F5                  STD _raycaster_Ttmp110
                      ; peephole(12): direct-page1
                      ;       LDD _raycaster_Ttmp107
8CD1  DCF9                    LDD <(_raycaster_Ttmp107)
8CD3  F3C1F5                  ADDD _raycaster_Ttmp110
8CD6  FDC1F5                  STD _raycaster_Ttmp110
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp110
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _raycaster_Ttmp141
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp141
8CD9  58                      LSLB
8CDA  49                      ROLA
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _raycaster_Ttmp141
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp141
8CDB  C3BA00                  ADDD #_table_div_4096
8CDE  FDC1F7                  STD _raycaster_Ttmp141
8CE1  EC9FC1F7                LDD [_raycaster_Ttmp141]
8CE5  FDC1F3                  STD _raycaster_Ttmp108
                              ; move from array to = _raycaster_Ttmp108
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp108
8CE8  FDC116                  STD _raycaster_delta_dist_y
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp108
                              ; Q _raycaster_Ttmp109
                              ; Q _raycaster_Ttmp110
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp118
                              ; Q _raycaster_Ttmp141
                              ; VSP
                              ; P:39
                              ; L:218
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_delta_dist_y
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CEB  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8CED  8E0004                  LDX #$04
8CF0  BD8A74                  JSR CPUMATHDIV2CONST16BIT
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8CF3  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8CF5  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(6): unread1
                      ;       STD _raycaster_temp_int
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:10
                              ; L:219
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_temp_int
8CF8  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
                      ; peephole(6): unread1
                      ;       STB _raycaster_v2
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:4
                              ; L:220
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_v2
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8CFB  4F                      CLRA
8CFC  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8CFF  BEC11E                  LDX _raycaster_v1
8D02  BD8BD7                  JSR CPUMATHMUL16BITTO32BIT_SIGNED
                      ; peephole(6): unread1
                      ;       STX _raycaster_Ttmp143
                      ; peephole(6): unread1
                      ;       STD _raycaster_Ttmp143+2
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp143+2
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8D05  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8D07  FDC11A                  STD _raycaster_side_dist_y
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; Q _raycaster_Ttmp143
                              ; VSP
                              ; P:12
                              ; L:221
                              IF (((128+_label146f-(*+2))|(127-_label146f+(*+2)))&0x8000)
                              JMP _label146f
                              ELSE
8D0A  201A                    BRA _label146f
                              ENDIF
8D0C                  _label146e0
8D0C  F6C1FF                  LDB _raycaster_Ttmp121
                              IF (((128+_label146f-(*+2))|(127-_label146f+(*+2)))&0x8000)
                              LBNE _label146f
                              ELSE
8D0F  2615                    BNE _label146f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:222
8D11  4F                      CLRA
8D12  B7C1FD                  STA _raycaster_Ttmp104
8D15  CC0000                  LDD #$0000
8D18  FDC116                  STD _raycaster_delta_dist_y
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:223
8D1B  CCFFFF                  LDD #$ffff
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8D1E  DDF9                    STD <(_raycaster_Ttmp107)
8D20  CCFFFF                  LDD #$ffff
8D23  FDC11A                  STD _raycaster_side_dist_y
                              ; V _raycaster_Ttmp107
                              ; VSP
                              ; P:4
                              ; L:224
8D26                  _label146f
8D26                  _label146e1
                              ; Q _raycaster_Ttmp121
                              ; VSP
                              ; P:2
                              ; L:225
                              ; VSP
                              ; P:0
                              ; L:226
                              ; VSP
                              ; P:0
                              ; L:227
                      ; peephole(12): inlined1
                      ;       LDD _raycaster_map_pointer_0
8D26  CC0000                  LDD #$0000
8D27                  _raycaster_map_pointer_0 equ *-2
8D29  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8D2C  FDC11C                  STD _raycaster_map_pointer
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:4
                              ; L:228
8D2F  FC89A9                  LDD _raycaster_map_X0
8D32  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
                      ; peephole(6): unread1
                      ;       STB _map_x
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:4
                              ; L:229
8D35  F689B3                  LDB _raycaster_map_Y0
                      ; peephole(6): unread1
                      ;       STB _map_y
                              ; Q _raycaster_Ttmp104
                              ; VSP
                              ; P:2
                              ; L:230
8D38                  _label154
8D38  E69FC11C                LDB [_raycaster_map_pointer]
8D3C  F7C1FD                  STB _raycaster_Ttmp104
8D3F  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _raycaster_Ttmp111
8D40  5F                      CLRB
8D41  B6C1FD                  LDA _raycaster_Ttmp104
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
8D44  2601                    BNE _label156
8D46  5A                      DECB
8D47                  _label156
8D47  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label154bis-(*+2))|(127-_label154bis+(*+2)))&0x8000)
                              LBEQ _label154bis
                              ELSE
8D4A  2750                    BEQ _label154bis
                              ENDIF
                              ; Q _raycaster_Ttmp104
                              ; V _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:18
                              ; L:231
                              ; VSP
                              ; P:0
                              ; L:232
8D4C  5F                      CLRB
8D4D  BEC118                  LDX _raycaster_side_dist_x
8D50  BCC11A                  CMPX _raycaster_side_dist_y
8D53  2401                    BHS _label158
8D55  5A                      DECB
8D56                  _label158
8D56  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label159e0-(*+2))|(127-_label159e0+(*+2)))&0x8000)
                              LBEQ _label159e0
                              ELSE
8D59  271B                    BEQ _label159e0
                              ENDIF
8D5B                  _label159t
                              ; VSP
                              ; P:14
                              ; L:233
8D5B  FCC114                  LDD _raycaster_delta_dist_x
8D5E  F3C118                  ADDD _raycaster_side_dist_x
8D61  FDC118                  STD _raycaster_side_dist_x
                              ; VSP
                              ; P:3
                              ; L:234
8D64  FCC122                  LDD _raycaster_step_x
8D67  F3C11C                  ADDD _raycaster_map_pointer
8D6A  FDC11C                  STD _raycaster_map_pointer
                              ; VSP
                              ; P:3
                              ; L:235
8D6D  4F                      CLRA
8D6E  B7C1FD                  STA _raycaster_Ttmp104
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
8D71  B7C172                  STA _raycaster_side
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:236
                              IF (((128+_label159f-(*+2))|(127-_label159f+(*+2)))&0x8000)
                              JMP _label159f
                              ELSE
8D74  2024                    BRA _label159f
                              ENDIF
8D76                  _label159e0
8D76  F6C1FE                  LDB _raycaster_Ttmp118
                              IF (((128+_label159f-(*+2))|(127-_label159f+(*+2)))&0x8000)
                              LBNE _label159f
                              ELSE
8D79  261F                    BNE _label159f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:237
8D7B  FCC116                  LDD _raycaster_delta_dist_y
8D7E  F3C11A                  ADDD _raycaster_side_dist_y
8D81  FDC11A                  STD _raycaster_side_dist_y
                              ; VSP
                              ; P:3
                              ; L:238
8D84  FCC124                  LDD _raycaster_step_y
8D87  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
8D8A  F3C11C                  ADDD _raycaster_map_pointer
8D8D  FDC11C                  STD _raycaster_map_pointer
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; VSP
                              ; P:5
                              ; L:239
8D90  C608                    LDB #$08
8D92  F7C1FD                  STB _raycaster_Ttmp104
8D95  C608                    LDB #$08
8D97  F7C172                  STB _raycaster_side
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:4
                              ; L:240
8D9A                  _label159f
8D9A                  _label159e1
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:2
                              ; L:241
                              IF (((128+_label154-(*+2))|(127-_label154+(*+2)))&0x8000)
                              JMP _label154
                              ELSE
8D9A  209C                    BRA _label154
                              ENDIF
8D9C                  _label154bis
                              ; VSP
                              ; P:6
                              ; L:242
                              ; VSP
                              ; P:0
                              ; L:243
                              ; VSP
                              ; P:0
                              ; L:244
                              ; VSP
                              ; P:0
                              ; L:245
8D9C  4F                      CLRA
8D9D  B7C1FD                  STA _raycaster_Ttmp104
8DA0  5F                      CLRB
8DA1  B6C172                  LDA _raycaster_side
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
8DA4  2601                    BNE _label161
8DA6  5A                      DECB
8DA7                  _label161
8DA7  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label162e0-(*+2))|(127-_label162e0+(*+2)))&0x8000)
                              LBEQ _label162e0
                              ELSE
8DAA  2710                    BEQ _label162e0
                              ENDIF
8DAC                  _label162t
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:16
                              ; L:246
8DAC  FCC118                  LDD _raycaster_side_dist_x
8DAF  B3C114                  SUBD _raycaster_delta_dist_x
8DB2  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8DB5  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8DB7  FD8E15                  STD _raycaster_perp_wall_dist
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:7
                              ; L:247
                              IF (((128+_label162f-(*+2))|(127-_label162f+(*+2)))&0x8000)
                              JMP _label162f
                              ELSE
8DBA  2013                    BRA _label162f
                              ENDIF
8DBC                  _label162e0
8DBC  F6C1FE                  LDB _raycaster_Ttmp118
                              IF (((128+_label162f-(*+2))|(127-_label162f+(*+2)))&0x8000)
                              LBNE _label162f
                              ELSE
8DBF  260E                    BNE _label162f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:248
8DC1  FCC11A                  LDD _raycaster_side_dist_y
8DC4  B3C116                  SUBD _raycaster_delta_dist_y
8DC7  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(12): direct-page1
                      ;       STD _raycaster_Ttmp107
8DCA  DDF9                    STD <(_raycaster_Ttmp107)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp107
8DCC  FD8E15                  STD _raycaster_perp_wall_dist
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp107
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:7
                              ; L:249
8DCF                  _label162f
8DCF                  _label162e1
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:2
                              ; L:250
                              ; VSP
                              ; P:0
                              ; L:251
                              ; VSP
                              ; P:0
                              ; L:252
                              ; VSP
                              ; P:0
                              ; L:253
                              ; VSP
                              ; P:0
                              ; L:254
8DCF  E69FC11C                LDB [_raycaster_map_pointer]
8DD3  F7C1FD                  STB _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
8DD6  F78DE0                  STB _raycaster_map_item
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:4
                              ; L:255
                              ; VSP
                              ; P:0
                              ; L:256
8DD9  C605                    LDB #$05
8DDB  F7C1FD                  STB _raycaster_Ttmp104
8DDE  5F                      CLRB
                      ; peephole(12): inlined1
                      ;       LDA _raycaster_map_item
8DDF  8600                    LDA #1-1
8DE0                  _raycaster_map_item equ *-1
8DE1  8105                    CMPA #$0005
8DE3  2401                    BHS _label164
8DE5  5A                      DECB
8DE6                  _label164
8DE6  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label165e0-(*+2))|(127-_label165e0+(*+2)))&0x8000)
                              LBEQ _label165e0
                              ELSE
8DE9  2714                    BEQ _label165e0
                              ENDIF
8DEB                  _label165t
                              ; V _raycaster_Ttmp104
                              ; VSP
                              ; P:16
                              ; L:257
8DEB  8EC100                  LDX #_colors
8DEE  F68DE0                  LDB _raycaster_map_item
8DF1  3A                      ABX
8DF2  E684                    LDB ,X
8DF4  F7C1FD                  STB _raycaster_Ttmp104
                              ; move from array to = _raycaster_Ttmp104
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp104
8DF7  FBC172                  ADDB _raycaster_side
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp111
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp111
8DFA  F7C173                  STB _raycaster_color
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; VSP
                              ; P:10
                              ; L:258
                              IF (((128+_label165f-(*+2))|(127-_label165f+(*+2)))&0x8000)
                              JMP _label165f
                              ELSE
8DFD  2015                    BRA _label165f
                              ENDIF
8DFF                  _label165e0
8DFF  F6C1FE                  LDB _raycaster_Ttmp118
                              IF (((128+_label165f-(*+2))|(127-_label165f+(*+2)))&0x8000)
                              LBNE _label165f
                              ELSE
8E02  2610                    BNE _label165f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:259
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8E04  4F                      CLRA
8E05  F6C172                  LDB _raycaster_side
8E08  FDC1EF                  STD _raycaster_Ttmp103
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp103
                      ; peephole(12): inlined1
                      ;       ADDD _default_color
8E0B  C30007                  ADDD #$0007
8E0C                  _default_color equ *-2
8E0E  FDC1F1                  STD _raycaster_Ttmp106
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _raycaster_Ttmp106
                      ; peephole(6): unread1
                      ;       STB _raycaster_Ttmp111
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp111
8E11  F7C173                  STB _raycaster_color
                              ; Q _raycaster_Ttmp103
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp106
                              ; Q _raycaster_Ttmp111
                              ; Q _raycaster_Ttmp116
                              ; Q _raycaster_Ttmp168
                              ; VSP
                              ; P:10
                              ; L:260
8E14                  _label165f
8E14                  _label165e1
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:2
                              ; L:261
                              ; VSP
                              ; P:0
                              ; L:262
                      ; peephole(12): inlined1
                      ;       LDD _raycaster_perp_wall_dist
8E14  CC0000                  LDD #$0000
8E15                  _raycaster_perp_wall_dist equ *-2
8E17  8EB200                  LDX #_table_dist
8E1A  308B                    LEAX D,X
8E1C  A684                    LDA ,X
8E1E  B7C1FD                  STA _raycaster_Ttmp104
                              ; move from array to = _raycaster_Ttmp104
8E21  8EC000                  LDX #_line_height_array
8E24  F6C171                  LDB _raycaster_camera_x
8E27  3A                      ABX
8E28  B6C1FD                  LDA _raycaster_Ttmp104
8E2B  A784                    STA ,X
                              ; Q _raycaster_Ttmp104
                              ; Q _raycaster_Ttmp111
                              ; VSP
                              ; P:10
                              ; L:263
8E2D  8EC080                  LDX #_color_array
8E30  F6C171                  LDB _raycaster_camera_x
8E33  3A                      ABX
8E34  B6C173                  LDA _raycaster_color
8E37  A784                    STA ,X
                              ; Q _raycaster_Ttmp104
                              ; VSP
                              ; P:5
                              ; L:264
                              ; VSP
                              ; P:0
                              ; L:265
                              ; VSP
                              ; P:0
                              ; L:266
8E39  FCC108                  LDD _plane_x
8E3C  F3C110                  ADDD _raycaster_delta_dir_x
8E3F  FDC110                  STD _raycaster_delta_dir_x
                              ; VSP
                              ; P:3
                              ; L:267
8E42  FC89F3                  LDD _plane_y
8E45  F3C112                  ADDD _raycaster_delta_dir_y
8E48  FDC112                  STD _raycaster_delta_dir_y
                              ; VSP
                              ; P:3
                              ; L:268
                              ; VSP
                              ; P:0
                              ; L:269
                              IF (((128+_label112prepfrom-(*+2))|(127-_label112prepfrom+(*+2)))&0x8000)
8E4B  BD89FD                  JSR _label112prepfrom
                              ELSE
                              BSR _label112prepfrom
                              ENDIF
                              IF (((128+_label112prepto-(*+2))|(127-_label112prepto+(*+2)))&0x8000)
8E4E  BD8A03                  JSR _label112prepto
                              ELSE
                              BSR _label112prepto
                              ENDIF
                              IF (((128+_label112prepstep-(*+2))|(127-_label112prepstep+(*+2)))&0x8000)
8E51  BD8A09                  JSR _label112prepstep
                              ELSE
                              BSR _label112prepstep
                              ENDIF
8E54  F6C171                  LDB _raycaster_camera_x
8E57  FBC29F                  ADDB _TRtmp115
8E5A  F7C171                  STB _raycaster_camera_x
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_camera_x
                      ; peephole(2): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
                              LBEQ _label112bis
                              ELSE
8E5D  2712                    BEQ _label112bis
                              ENDIF
8E5F  5F                      CLRB
8E60  B6C171                  LDA _raycaster_camera_x
8E63  B1C29D                  CMPA _TRtmp113
8E66  2601                    BNE _label179
8E68  5A                      DECB
8E69                  _label179
8E69  F7C1FE                  STB _raycaster_Ttmp118
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _raycaster_Ttmp118
                              IF (((128+_label112bis-(*+2))|(127-_label112bis+(*+2)))&0x8000)
                              LBNE _label112bis
                              ELSE
8E6C  2603                    BNE _label112bis
                              ENDIF
                              IF (((128+_label112bf-(*+2))|(127-_label112bf+(*+2)))&0x8000)
8E6E  7E8A1B                  JMP _label112bf
                              ELSE
                              BRA _label112bf
                              ENDIF
8E71                  _label112bis
                              ; V _raycaster_Ttmp102
                              ; V _raycaster_Ttmp105
                              ; Q _raycaster_Ttmp118
                              ; VSP
                              ; P:44
                              ; L:270
                              ; VSP
                              ; P:0
                              ; L:271
8E71  39                      RTS
8E72                  raycasterafter
                              ; VSP
                              ; P:2
                              ; L:272
                              ; VSP
                              ; P:0
                              ; L:273
                              IF (((128+render_view_v1after-(*+2))|(127-render_view_v1after+(*+2)))&0x8000)
8E72  7E95B8                  JMP render_view_v1after
                              ELSE
                              BRA render_view_v1after
                              ENDIF
8E75                  PROCrender_view_v1
                              ; VSP
                              ; P:6
                              ; L:274
                              ; VSP
                              ; P:0
                              ; L:275
8E75  C6C8                    LDB #$c8
8E77  F7C214                  STB _render_view_v1_Ttmp180
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp180
8E7A  F7C215                  STB _render_view_v1_Ttmp181
                              IF (((128+cpu_math_div2_const_8bit_after-(*+2))|(127-cpu_math_div2_const_8bit_after+(*+2)))&0x8000)
                              JMP cpu_math_div2_const_8bit_after
                              ELSE
8E7D  201C                    BRA cpu_math_div2_const_8bit_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ; signed B (unsigned A)
8E7F                  CPUMATHDIV28BIT_SIGNED
8E7F  5D                      TSTB
8E80  2B14                    BMI  CPUMATHDIV28BIT_NEG
                      ; unsigned B, unsigned A
8E82                  CPUMATHDIV28BIT
8E82  8008                    SUBA  #8
8E84  2C06                    BGE   CPUMATHDIV28BITL0
8E86  8E8E8D                  LDX   #CPUMATHDIV28BITL1-1
8E89  40                      NEGA
8E8A  6E86                    JMP   A,X
8E8C                  CPUMATHDIV28BITL0
8E8C  5F                      CLRB
8E8D  39                      RTS
8E8E                  CPUMATHDIV28BITL1
8E8E  54                      LSRB
8E8F  54                      LSRB
8E90  54                      LSRB
8E91  54                      LSRB
8E92  54                      LSRB
8E93  54                      LSRB
8E94  54                      LSRB
8E95  39                      RTS
                      ; signed B (unsigned A)
                      ; this one ensure that -1/2 gives 0
8E96                  CPUMATHDIV28BIT_NEG
8E96  50                      NEGB
8E97  8DE9                    BSR CPUMATHDIV28BIT
8E99  50                      NEGB
8E9A  39                      RTS
8E9B                  cpu_math_div2_const_8bit_after
8E9B  8601                    LDA #$01
8E9D  F6C215                  LDB _render_view_v1_Ttmp181
8EA0  BD8E82                  JSR CPUMATHDIV28BIT
8EA3  F7C215                  STB _render_view_v1_Ttmp181
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp181
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8EA6  4F                      CLRA
8EA7  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
8EAA  FDC12E                  STD _render_view_v1_middle
                              ; V _render_view_v1_Ttmp180
                              ; Q _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; VSP
                              ; P:45
                              ; L:276
                              ; VSP
                              ; P:0
                              ; L:277
8EAD  C6A0                    LDB #$a0
8EAF  F7C214                  STB _render_view_v1_Ttmp180
8EB2  C680                    LDB #$80
8EB4  F7C215                  STB _render_view_v1_Ttmp181
8EB7  F6C214                  LDB _render_view_v1_Ttmp180
8EBA  CB80                    ADDB #$80
8EBC  F7C216                  STB _render_view_v1_Ttmp183
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp183
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8EBF  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
8EC2  FDC132                  STD _render_view_v1_screen_x
                              ; V _render_view_v1_Ttmp180
                              ; V _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp185
                              ; VSP
                              ; P:12
                              ; L:278
                              IF (((128+_label186prepa-(*+2))|(127-_label186prepa+(*+2)))&0x8000)
                              JMP _label186prepa
                              ELSE
8EC5  2022                    BRA _label186prepa
                              ENDIF
8EC7                  _label186prepfrom
8EC7  4F                      CLRA
8EC8  B7C214                  STA _render_view_v1_Ttmp180
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _render_view_v1_Ttmp180
8ECB  5F                      CLRB
8ECC  F7C2A0                  STB _TRtmp187
8ECF  39                      RTS
8ED0                  _label186prepto
8ED0  C680                    LDB #$80
8ED2  F7C216                  STB _render_view_v1_Ttmp183
8ED5  C601                    LDB #$01
8ED7  F7C217                  STB _render_view_v1_Ttmp184
8EDA  F6C216                  LDB _render_view_v1_Ttmp183
8EDD  CBFF                    ADDB #$ff
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp185
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp185
8EDF  F7C2A1                  STB _TRtmp188
8EE2  39                      RTS
8EE3                  _label186prepstep
8EE3  C601                    LDB #$01
8EE5  F7C2A2                  STB _TRtmp190
8EE8  39                      RTS
8EE9                  _label186prepa
                              IF (((128+_label186prepfrom-(*+2))|(127-_label186prepfrom+(*+2)))&0x8000)
                              JSR _label186prepfrom
                              ELSE
8EE9  8DDC                    BSR _label186prepfrom
                              ENDIF
                              IF (((128+_label186prepto-(*+2))|(127-_label186prepto+(*+2)))&0x8000)
                              JSR _label186prepto
                              ELSE
8EEB  8DE3                    BSR _label186prepto
                              ENDIF
                              IF (((128+_label186prepstep-(*+2))|(127-_label186prepstep+(*+2)))&0x8000)
                              JSR _label186prepstep
                              ELSE
8EED  8DF4                    BSR _label186prepstep
                              ENDIF
8EEF  F6C2A0                  LDB _TRtmp187
8EF2  F7C175                  STB _render_view_v1_x
8EF5                  _label186bf
8EF5  5F                      CLRB
8EF6  B6C2A2                  LDA _TRtmp190
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$0000
8EF9  2301                    BLS _label194
8EFB  5A                      DECB
8EFC                  _label194
8EFC  F7C218                  STB _render_view_v1_Ttmp193
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp193
                              IF (((128+_label186forw-(*+2))|(127-_label186forw+(*+2)))&0x8000)
                              LBNE _label186forw
                              ELSE
8EFF  2602                    BNE _label186forw
                              ENDIF
                              IF (((128+_label186back-(*+2))|(127-_label186back+(*+2)))&0x8000)
                              JMP _label186back
                              ELSE
8F01  2024                    BRA _label186back
                              ENDIF
8F03                  _label186forw
8F03  5F                      CLRB
8F04  B6C175                  LDA _render_view_v1_x
8F07  B1C2A0                  CMPA _TRtmp187
8F0A  2401                    BHS _label197
8F0C  5A                      DECB
8F0D                  _label197
8F0D  F78FE5                  STB _render_view_v1_Ttmp196
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp196
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
8F10  102606A3                LBNE _label186bis
                              ELSE
                              BNE _label186bis
                              ENDIF
8F14  5F                      CLRB
8F15  B6C175                  LDA _render_view_v1_x
8F18  B1C2A1                  CMPA _TRtmp188
8F1B  2301                    BLS _label200
8F1D  5A                      DECB
8F1E                  _label200
8F1E  F79015                  STB _render_view_v1_Ttmp199
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp199
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
8F21  10260692                LBNE _label186bis
                              ELSE
                              BNE _label186bis
                              ENDIF
                              IF (((128+_label186cont-(*+2))|(127-_label186cont+(*+2)))&0x8000)
                              JMP _label186cont
                              ELSE
8F25  2020                    BRA _label186cont
                              ENDIF
8F27                  _label186back
8F27  5F                      CLRB
8F28  B6C175                  LDA _render_view_v1_x
8F2B  B1C2A0                  CMPA _TRtmp187
8F2E  2301                    BLS _label203
8F30  5A                      DECB
8F31                  _label203
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp202
8F31  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp202
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
8F32  10260681                LBNE _label186bis
                              ELSE
                              BNE _label186bis
                              ENDIF
8F36  5F                      CLRB
8F37  B6C175                  LDA _render_view_v1_x
8F3A  B1C2A1                  CMPA _TRtmp188
8F3D  2401                    BHS _label206
8F3F  5A                      DECB
8F40                  _label206
8F40  F793E7                  STB _render_view_v1_Ttmp205
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp205
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
8F43  10260670                LBNE _label186bis
                              ELSE
                              BNE _label186bis
                              ENDIF
8F47                  _label186cont
                              ; Q _render_view_v1_Ttmp181
                              ; V _render_view_v1_Ttmp183
                              ; V _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp189
                              ; Q _render_view_v1_Ttmp191
                              ; Q _render_view_v1_Ttmp193
                              ; Q _render_view_v1_Ttmp196
                              ; Q _render_view_v1_Ttmp199
                              ; Q _render_view_v1_Ttmp202
                              ; Q _render_view_v1_Ttmp205
                              ; VSP
                              ; P:123
                              ; L:279
8F47  8EC000                  LDX #_line_height_array
8F4A  F6C175                  LDB _render_view_v1_x
8F4D  3A                      ABX
8F4E  E684                    LDB ,X
8F50  F7C215                  STB _render_view_v1_Ttmp181
                              ; move from array to = _render_view_v1_Ttmp181
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp181
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
8F53  4F                      CLRA
8F54  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
8F57  FDC130                  STD _render_view_v1_line_height
                              ; Q _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; VSP
                              ; P:10
                              ; L:280
8F5A  8EC080                  LDX #_color_array
8F5D  F6C175                  LDB _render_view_v1_x
8F60  3A                      ABX
8F61  E684                    LDB ,X
8F63  F7C215                  STB _render_view_v1_Ttmp181
                              ; move from array to = _render_view_v1_Ttmp181
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp181
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
8F66  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
8F69  FD8F94                  STD _render_view_v1_color
                              ; Q _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; VSP
                              ; P:10
                              ; L:281
                              ; VSP
                              ; P:0
                              ; L:282
8F6C  5F                      CLRB
8F6D  BEC130                  LDX _render_view_v1_line_height
8F70  BCC12E                  CMPX _render_view_v1_middle
8F73  2D01                    BLT _label212
8F75  5A                      DECB
8F76                  _label212
8F76  F7C218                  STB _render_view_v1_Ttmp193
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp193
                              IF (((128+_label213e0-(*+2))|(127-_label213e0+(*+2)))&0x8000)
8F79  10270519                LBEQ _label213e0
                              ELSE
                              BEQ _label213e0
                              ENDIF
8F7D                  _label213t
                              ; VSP
                              ; P:14
                              ; L:283
8F7D  4F                      CLRA
8F7E  B7C215                  STA _render_view_v1_Ttmp181
8F81  C6C8                    LDB #$c8
8F83  F7C216                  STB _render_view_v1_Ttmp183
8F86  C601                    LDB #$01
8F88  F7C217                  STB _render_view_v1_Ttmp184
8F8B  F6C216                  LDB _render_view_v1_Ttmp183
8F8E  CBFF                    ADDB #$ff
8F90  F79461                  STB _render_view_v1_Ttmp189
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v1_color
8F93  CC0000                  LDD #$0000
8F94                  _render_view_v1_color equ *-2
8F96  F7C219                  STB _render_view_v1_Ttmp214
                              IF (((128+draw_after-(*+2))|(127-draw_after+(*+2)))&0x8000)
8F99  7E945A                  JMP draw_after
                              ELSE
                              BRA draw_after
                              ENDIF
8F9C                  lib_draw
8F9C  4F                      CLRA
8F9D  B7C21A                  STA _render_view_v1_Ttmp215
8FA0  FCC126                  LDD _draw__x0
8FA3  FDC204                  STD _render_view_v1_Ttmp217
8FA6  FCC128                  LDD _draw__y0
8FA9  FDC206                  STD _render_view_v1_Ttmp218
8FAC  FCC12A                  LDD _draw__x1
8FAF  B3C126                  SUBD _draw__x0
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp227
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp227
8FB2  FDC208                  STD _render_view_v1_Ttmp219
8FB5  FCC12C                  LDD _draw__y1
8FB8  B3C128                  SUBD _draw__y0
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp229
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp229
8FBB  FDC20A                  STD _render_view_v1_Ttmp220
8FBE  5F                      CLRB
8FBF  BEC20A                  LDX _render_view_v1_Ttmp220
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
8FC2  2C01                    BGE _label232
8FC4  5A                      DECB
8FC5                  _label232
8FC5  F78FE5                  STB _render_view_v1_Ttmp196
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp196
                              IF (((128+_label233e0-(*+2))|(127-_label233e0+(*+2)))&0x8000)
                              LBEQ _label233e0
                              ELSE
8FC8  271A                    BEQ _label233e0
                              ENDIF
8FCA                  _label233t
8FCA  FCC20A                  LDD _render_view_v1_Ttmp220
8FCD  FD8FD4                  STD _render_view_v1_Ttmp234
8FD0  CC0000                  LDD #$00
                      ; peephole(12): inlined1
                      ;       SUBD _render_view_v1_Ttmp234
8FD3  830000                  SUBD #$0000
8FD4                  _render_view_v1_Ttmp234 equ *-2
8FD6  FD8FD4                  STD _render_view_v1_Ttmp234
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp234
8FD9  FDC20A                  STD _render_view_v1_Ttmp220
8FDC  CCFFFF                  LDD #$ffff
8FDF  FDC20E                  STD _render_view_v1_Ttmp224
                              IF (((128+_label233f-(*+2))|(127-_label233f+(*+2)))&0x8000)
                              JMP _label233f
                              ELSE
8FE2  200A                    BRA _label233f
                              ENDIF
8FE4                  _label233e0
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v1_Ttmp196
8FE4  C600                    LDB #1-1
8FE5                  _render_view_v1_Ttmp196 equ *-1
                              IF (((128+_label233f-(*+2))|(127-_label233f+(*+2)))&0x8000)
                              LBNE _label233f
                              ELSE
8FE6  2606                    BNE _label233f
                              ENDIF
8FE8  CC0001                  LDD #$0001
8FEB  FDC20E                  STD _render_view_v1_Ttmp224
8FEE                  _label233f
8FEE                  _label233e1
8FEE  5F                      CLRB
8FEF  BEC208                  LDX _render_view_v1_Ttmp219
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
8FF2  2C01                    BGE _label237
8FF4  5A                      DECB
8FF5                  _label237
8FF5  F79015                  STB _render_view_v1_Ttmp199
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp199
                              IF (((128+_label238e0-(*+2))|(127-_label238e0+(*+2)))&0x8000)
                              LBEQ _label238e0
                              ELSE
8FF8  271A                    BEQ _label238e0
                              ENDIF
8FFA                  _label238t
8FFA  FCC208                  LDD _render_view_v1_Ttmp219
8FFD  FD9004                  STD _render_view_v1_Ttmp239
9000  CC0000                  LDD #$00
                      ; peephole(12): inlined1
                      ;       SUBD _render_view_v1_Ttmp239
9003  830000                  SUBD #$0000
9004                  _render_view_v1_Ttmp239 equ *-2
9006  FD9004                  STD _render_view_v1_Ttmp239
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp239
9009  FDC208                  STD _render_view_v1_Ttmp219
900C  CCFFFF                  LDD #$ffff
900F  FDC20C                  STD _render_view_v1_Ttmp223
                              IF (((128+_label238f-(*+2))|(127-_label238f+(*+2)))&0x8000)
                              JMP _label238f
                              ELSE
9012  200A                    BRA _label238f
                              ENDIF
9014                  _label238e0
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v1_Ttmp199
9014  C600                    LDB #1-1
9015                  _render_view_v1_Ttmp199 equ *-1
                              IF (((128+_label238f-(*+2))|(127-_label238f+(*+2)))&0x8000)
                              LBNE _label238f
                              ELSE
9016  2606                    BNE _label238f
                              ENDIF
9018  CC0001                  LDD #$0001
901B  FDC20C                  STD _render_view_v1_Ttmp223
901E                  _label238f
901E                  _label238e1
901E  FCC20A                  LDD _render_view_v1_Ttmp220
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp222
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp222
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v1_Ttmp241
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp241
9021  58                      LSLB
9022  49                      ROLA
9023  FDC210                  STD _render_view_v1_Ttmp241
9026  FCC208                  LDD _render_view_v1_Ttmp219
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp221
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp221
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v1_Ttmp242
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp242
9029  58                      LSLB
902A  49                      ROLA
902B  FDC212                  STD _render_view_v1_Ttmp242
                              IF (((128+plot_after-(*+2))|(127-plot_after+(*+2)))&0x8000)
902E  7E933A                  JMP plot_after
                              ELSE
                              BRA plot_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                           PLOT ROUTINE FOR EF936X                           *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                     mc6809 optimization by Samuel Devulder                  *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
0041                  PLOTX   EQU $41 ; $42
0043                  PLOTY   EQU $43
0045                  PLOTM   EQU $45
0046                  PLOTOMA EQU $46
0047                  PLOTAMA EQU $47
0048                  PLOTCPE   EQU $48
                      ;--------------
9031                  PLOTP
9031  39                      RTS
                              
                      ; input X=X coord, U=Y coord, A=(0 = erase, 1 = set, 2 = get pixel, 3 = get color)
                      ; output B result if A=2 or 3
9032                  PLOT
                      ; ----------------------------------------------
                      ; optionClip active
                      ; ----------------------------------------------
                      ; peephole(12): inlined1
                      ;       CMPX CLIPX2
9032  8C013F                  CMPX #319
9033                  CLIPX2 equ *-2
9035  2EFA                    BGT PLOTP
9037  BC65BF                  CMPX CLIPX1   ; check if plotting out of clipped area
903A  2DF5                    BLT PLOTP     ; yes => return
                      ; peephole(12): inlined1
                      ;       CMPU CLIPY2
903C  118300C7                CMPU #199
903E                  CLIPY2 equ *-2
9040  2EEF                    BGT PLOTP
9042  11B365C1                CMPU CLIPY1
9046  2DE9                    BLT PLOTP
9048  9F41                    STX <PLOTX
904A  DF43                    STU <PLOTY
904C  9745                    STA <PLOTM
                      ; ----------------------------------------------
                      ; double buffer not selected
                      ; ----------------------------------------------
                              ; Check if double buffering is active -- in case,
                              ; whe should use a different version.
904E  B665CC                  LDA DOUBLEBUFFERENABLED
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
9051  102701B4                LBEQ PLOTORIG
                      ; ----------------------------------------------
                      ; Version active on double buffering ON
                      ; or if double buffering option is not selected
                      ; ----------------------------------------------
9055                  PLOTDB
9055  1A50                    ORCC #$50
9057  BE6F81                  LDX BITMAPADDRESS
905A  1CFE                    ANDCC #$FE
905C  DC43                    LDD <PLOTY
905E  58                      LSLB
905F  49                      ROLA
9060  58                      LSLB
9061  49                      ROLA
9062  58                      LSLB
9063  49                      ROLA
9064  1F02                    TFR D,Y 
9066  1CFE                    ANDCC #$FE
9068  DC43                    LDD <PLOTY
906A  58                      LSLB
906B  49                      ROLA
906C  58                      LSLB
906D  49                      ROLA
906E  58                      LSLB
906F  49                      ROLA
9070  58                      LSLB
9071  49                      ROLA
9072  58                      LSLB
9073  49                      ROLA
9074  31AB                    LEAY D,Y 
9076  1F20                    TFR Y, D
9078  308B                    LEAX D,X 
907A                  PLOTMODEDB
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; ----------------------------------------------
907A  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
907D  2603                    BNE PLOT0XDB
907F  7E90A1                  JMP PLOT0DB
9082                  PLOT0XDB
9082  8101                    CMPA #1
9084  2603                    BNE PLOT1XDB
9086  7E90A1                  JMP PLOT1DB
9089                  PLOT1XDB
9089  8102                    CMPA #2
908B  2603                    BNE PLOT2XDB
908D  7E90A1                  JMP PLOT2DB
9090                  PLOT2XDB
9090  8103                    CMPA #3
9092  2603                    BNE PLOT3XDB
9094  7E90BF                  JMP PLOT3DB
9097                  PLOT3XDB
9097  8104                    CMPA #4
9099  2603                    BNE PLOT4XDB
909B  7E90A1                  JMP PLOT4DB
909E                  PLOT4XDB
909E  1CAF                    ANDCC #$AF
90A0  39                      RTS
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 0, 1, 2 or 4
                      ; ----------------------------------------------
90A1                  PLOT0DB
90A1                  PLOT1DB
90A1                  PLOT2DB
90A1                  PLOT4DB
90A1  1CFE                    ANDCC #$FE
90A3  DC41                    LDD <PLOTX
90A5  44                      LSRA
90A6  56                      RORB
90A7  44                      LSRA
90A8  56                      RORB
90A9  44                      LSRA
90AA  56                      RORB
90AB  308B                    LEAX D,X 
90AD  108E932A                LDY #PLOTORBIT
90B1  D642                    LDB <(PLOTX+1)
90B3  C407                    ANDB #$07
90B5  31A5                    LEAY B,Y 
90B7  CE9332                  LDU #PLOTANDBIT
90BA  33C5                    LEAU B,U 
90BC  7E90EE                  JMP PLOTCOMMONDB
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 3
                      ; ----------------------------------------------
90BF                  PLOT3DB
90BF  DC43                    LDD <(PLOTY)
90C1  58                      LSLB
90C2  49                      ROLA
90C3  C365DC                  ADDD #PLOTVBASE
90C6  1F01                    TFR D,X 
90C8  EC84                    LDD ,X 
90CA  1F01                    TFR D,X 
90CC  D642                    LDB <(PLOTX+1)
90CE  54                      LSRB
90CF  54                      LSRB
90D0  3085                    LEAX B,X 
90D2  D642                    LDB <(PLOTX+1)
90D4  C403                    ANDB #$03
90D6  53                      COMB
90D7  108E0003                LDY #3
90DB  31A5                    LEAY B,Y 
90DD  1F20                    TFR Y, D
90DF  54                      LSRB
90E0  3406                    PSHS D
90E2  1F10                    TFR X, D
90E4  F36F81                  ADDD BITMAPADDRESS
90E7  1F01                    TFR D,X 
90E9  3506                    PULS D
                      ;     ANDB #$01
                      ;     CMPB #$01
                      ;     BEQ PLOT3PAGE1
                      ; PLOT3PAGE0
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ORA #$01
                      ;     STA BASE_SEGMENT+$c0
                      ;     JMP PLOT3PAGEF
                      ; PLOT3PAGE1
                      ;     LDA BASE_SEGMENT+$c0
                      ;     ANDA #$fe
                      ;     STA BASE_SEGMENT+$c0
                      ;     JMP PLOT3PAGEF
                      ; PLOT3PAGEF
90EB  7E90EE                  JMP PLOTCOMMONDB
                      ; ----------------------------------------------
                      ; Version active if double buffer ON
                      ; ----------------------------------------------
90EE                  PLOTCOMMONDB
                              ;----------------------------------------------
                              ;depending on PLOTM, routine draws or erases
                              ;----------------------------------------------
90EE  9645                    LDA <PLOTM                  ;(0 = erase, 1 = set, 2 = get pixel, 3 = get color)
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
90F0  2603                    BNE PLOTEXDB                  ;if = 0 then branch to clear the point
90F2  7E91C8                  JMP PLOTEDB
90F5                  PLOTEXDB
90F5  8101                    CMPA #1
90F7  2603                    BNE PLOTDXDB                  ;if = 1 then branch to draw the point
90F9  7E910F                  JMP PLOTDDB
90FC                  PLOTDXDB
90FC  8102                    CMPA #2
90FE  2703                    BEQ PLOTGXDB                  ;if = 2 then branch to get the point (0/1)
9100  7E91D3                  JMP PLOTGDB
9103                  PLOTGXDB
9103  8103                    CMPA #3
9105  2703                    BEQ PLOTCXDB                  ;if = 3 then branch to get the color index (0...15)
9107  7E91EA                  JMP PLOTCDB
910A                  PLOTCXDB
910A  1CAF                    ANDCC #$AF
910C  7E9031                  JMP PLOTP
910F                  PLOTDDB
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; ----------------------------------------------
910F  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
9112  2603                    BNE PLOTD0XDB
9114  7E9131                  JMP PLOTD0DB
9117                  PLOTD0XDB
9117  8101                    CMPA #1
9119  2603                    BNE PLOTD1XDB
911B  7E9131                  JMP PLOTD1DB
911E                  PLOTD1XDB
911E  8102                    CMPA #2
9120  2603                    BNE PLOTD2XDB
9122  7E9156                  JMP PLOTD2DB
9125                  PLOTD2XDB
9125  8103                    CMPA #3
9127  2603                    BNE PLOTD3XDB
9129  7E9197                  JMP PLOTD3DB
912C                  PLOTD3XDB
912C  1CAF                    ANDCC #$AF
912E  7E9031                  JMP PLOTP
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 0, 1, 4
                      ; ----------------------------------------------
9131                  PLOTD0DB
9131                  PLOTD1DB
9131                  PLOTD4DB
9131  1CFE                    ANDCC #$FE
9133  9648                    LDA <PLOTCPE
9135  840F                    ANDA #$0F
9137  48                      ASLA
9138  48                      ASLA
9139  48                      ASLA
913A  48                      ASLA
913B  9719                    STA <MATHPTR5
                              
                              ;---------
                              ;set point
                              ;---------
                              ; LDA BASE_SEGMENT+$c0
                              ; ORA #$01
                              ; STA BASE_SEGMENT+$c0
913D  A6892000                LDA $2000,X            ;get row with point in it
9141  A4C4                    ANDA ,U 
9143  AAA4                    ORA ,Y                ;isolate AND set the point
9145  A7892000                STA $2000,X            ;write back to $A000
                              ; LDA BASE_SEGMENT+$c0
                              ; ANDA #$fe
                              ; STA BASE_SEGMENT+$c0
9149  A684                    LDA ,X            ;get row with point in it
914B  840F                    ANDA #$0F
914D  9A19                    ORA <MATHPTR5
914F  A784                    STA ,X            ;write back to $A000
9151  1CAF                    ANDCC #$AF
9153  7E9031                  JMP PLOTP                  ;skip the erase-point section
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 2
                      ; ----------------------------------------------
9156                  PLOTD2DB
9156  9648                    LDA <PLOTCPE
9158  8403                    ANDA #$03
915A  9719                    STA <MATHPTR5
                              ;---------
                              ;set point
                              ;---------
                              ; LDA BASE_SEGMENT+$c0
                              ; ORA #$01
                              ; STA BASE_SEGMENT+$c0
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDA <MATHPTR5
915C  8402                    ANDA #$02
915E  8102                    CMPA #$02
9160  260B                    BNE PLOTD21DB
9162                  PLOTD20DB
9162  A684                    LDA ,X            ;get row with point in it
9164  A4C4                    ANDA ,U 
9166  AAA4                    ORA ,Y                ;isolate AND set the point
9168  A784                    STA ,X            ;write back to $A000
916A  7E9176                  JMP PLOTD22DB
916D                  PLOTD21DB
916D  A684                    LDA ,X            ;get row with point in it
916F  A4C4                    ANDA ,U 
9171  A784                    STA ,X            ;write back to $A000
9173  7E9176                  JMP PLOTD22DB
9176                  PLOTD22DB
                              ; LDA BASE_SEGMENT+$c0
                              ; ANDA #$fe
                              ; STA BASE_SEGMENT+$c0
9176  9619                    LDA <MATHPTR5
9178  8401                    ANDA #$01
917A  8101                    CMPA #$01
917C  260B                    BNE PLOTD24DB
917E                  PLOTD23DB
917E  A684                    LDA ,X            ;get row with point in it
9180  A4C4                    ANDA ,U 
9182  AAA4                    ORA ,Y                ;isolate AND set the point
9184  A784                    STA ,X            ;write back to $A000
9186  7E9192                  JMP PLOTD25DB
9189                  PLOTD24DB
9189  A684                    LDA ,X            ;get row with point in it
918B  A4C4                    ANDA ,U 
918D  A784                    STA ,X            ;write back to $A000
918F  7E9192                  JMP PLOTD25DB
9192                  PLOTD25DB
9192  1CAF                    ANDCC #$AF
9194  7E9031                  JMP PLOTP                  ;skip the erase-point section
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 3
                      ; ----------------------------------------------
9197                  PLOTD3DB
9197  9648                    LDA <PLOTCPE
9199  840F                    ANDA #$0F
919B  9719                    STA <MATHPTR5
                              ;---------
                              ;set point
                              ;---------
919D  D642                    LDB <(PLOTX+1)
919F  C401                    ANDB #$01
91A1  C101                    CMPB #$01
91A3  2711                    BEQ PLOTD3LODB
91A5                  PLOTD3HIDB
91A5  9619                    LDA <MATHPTR5
91A7  48                      ASLA
91A8  48                      ASLA
91A9  48                      ASLA
91AA  48                      ASLA
91AB  9719                    STA <MATHPTR5
91AD  A684                    LDA ,X 
91AF  9A19                    ORA <MATHPTR5
91B1  A784                    STA ,X 
                              ; LDA $2000, X
                              ; ORA <MATHPTR5
                              ; STA $2000, X
91B3  7E91C3                  JMP PLOTD3FDB
91B6                  PLOTD3LODB
                              ; LDA , X
                              ; ORA <MATHPTR5
                              ; STA , X
91B6  A6892000                LDA $2000,X 
91BA  9A19                    ORA <MATHPTR5
91BC  A7892000                STA $2000,X 
91C0  7E91C3                  JMP PLOTD3FDB
91C3                  PLOTD3FDB
91C3  1CAF                    ANDCC #$AF
91C5  7E9031                  JMP PLOTP                  ;skip the erase-point section
                      ; ----------------------------------------------
                      ; Version active on double buffer ON
                      ; ----------------------------------------------
                              ;-----------
                              ;erase point
                              ;-----------
91C8                  PLOTEDB                          ;handled same way as setting a point
                              ; LDA BASE_SEGMENT+$c0
                              ; ORA #$01
                              ; STA BASE_SEGMENT+$c0
91C8  A684                    LDA ,X            ;get row with point in it
91CA  A4C4                    ANDA ,U 
91CC  A784                    STA ,X            ;write back to $A000
91CE  1CAF                    ANDCC #$AF
91D0  7E9031                  JMP PLOTP                  ;skip the erase-point section
91D3                  PLOTGDB      
                              ; LDA BASE_SEGMENT+$c0
                              ; ORA #$01
                              ; STA BASE_SEGMENT+$c0
91D3  A684                    LDA ,X            ;get row with point in it
91D5  A4C4                    ANDA ,U 
91D7  8100                    CMPA #0
91D9  2708                    BEQ PLOTG0DB
91DB                  PLOTG1DB
91DB  86FF                    LDA #$ff
91DD  B70045                  STA PLOTM
91E0  7E9031                  JMP PLOTP
91E3                  PLOTG0DB
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$0
91E3  4F                      CLRA
91E4  B70045                  STA PLOTM
91E7  7E9031                  JMP PLOTP            
91EA                  PLOTCDB
                              ; LDA BASE_SEGMENT+$c0
                              ; ANDA #$fe
                              ; STA BASE_SEGMENT+$c0
91EA  A684                    LDA ,X            ;get row with point in it
91EC  44                      LSRA
91ED  44                      LSRA
91EE  44                      LSRA
91EF  44                      LSRA
91F0  B70045                  STA PLOTM
91F3  1CAF                    ANDCC #$AF
                              
91F5  7E9031                  JMP PLOTP
91F8  39                      RTS
91F9                  PLOTORBIT4
91F9  01                      fcb %00000001
91FA  10                      fcb %00010000
91FB  02                      fcb %00000010
91FC  20                      fcb %00100000
91FD  04                      fcb %00000100
91FE  40                      fcb %01000000
91FF  08                      fcb %00001000
9200  80                      fcb %10000000
9201                  PLOTANDBIT4
9201  FE                      fcb %11111110
9202  EF                      fcb %11101111
9203  FD                      fcb %11111101
9204  DF                      fcb %11011111
9205  FB                      fcb %11111011
9206  BF                      fcb %10111111
9207  F7                      fcb %11110111
9208  7F                      fcb %01111111
                      ; ----------------------------------------------
                      ; Version active on double buffer not selected
                      ; or double buffer is OFF
                      ; ----------------------------------------------
9209                  PLOTORIG
9209  8628                    LDA #40
920B  D644                    LDB <PLOTY+1
920D  3D                      MUL           ; no => compute video adress
920E  F36F81                  ADDD BITMAPADDRESS ; 7
9211  1F01                    TFR D,X       ; 6
                              
9213  CEE7C3                  LDU #(BASE_SEGMENT+$C3)    ; that adress is handy
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; ----------------------------------------------
9216                  PLOTMODE
9216  B66F85                  LDA CURRENTMODE
9219  8103                    CMPA #3       ; mode 3 ?
921B  2645                    BNE PLOT0     ; no => goto common adress decoding
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode 3
                      ; ----------------------------------------------
921D                  PLOT3             ; yes
921D  A6C4                    LDA ,U
921F  8A01                    ORA #1        ; prepare A for plane 1
                              
9221  D642                    LDB <PLOTX+1
9223  54                      LSRB
9224  54                      LSRB          ; carry = bit2
9225  3A                      ABX           ; adjust for X position
9226  8200                    SBCA #0       ; chose plane 0/1 according bit 2 of X coordinate
9228  A7C4                    STA ,U        ; select proper plane
922A  204D                    BRA PLOTCOMMON
922C                  PLOTD             ; plot draw (placed here to keep the jump small)
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; ----------------------------------------------
922C  B66F85                  LDA CURRENTMODE
922F  8102                    CMPA #2
9231  2754                    BEQ PLOTD2    ; plot in mode 2
9233  8103                    CMPA #3
9235  2770                    BEQ PLOTD3    ; plot in mode 3
                      ; ----------------------------------------------
                      ; Version active on screen mode unique OFF
                      ; or current mode is 0, 1, 4
                      ; ----------------------------------------------
9237                  PLOTD0
9237                  PLOTD1
9237                  PLOTD4     
9237  9648                    LDA <PLOTCPE      ; other modes - asked color
9239  A884                    EORA ,X       ; compare with bg colo
923B  840F                    ANDA #$0F
923D  271A                    BEQ PLOTE     ; equal ? yes ==> erase pixel
                              
923F  9648                    LDA <PLOTCPE      ; no ==> regular plot
9241  48                      LSLA          
9242  48                      LSLA
9243  48                      LSLA
9244  48                      LSLA
9245  B7924D                  STA PLOTD4x+1 ; prepare paper colo
                              
9248  A684                    LDA ,X        ; get color pair
924A  840F                    ANDA #$0F     ; clear paper color
924C                  PLOTD4x
924C  8A00                    ORA #0        ; add current paper color
924E  A784                    STA ,X        ; set color
                              
                              ;---------
                              ;set point
                              ;---------
9250  6CC4                    INC ,U        ; form plane
9252  A684                    LDA ,X        ; get byte
9254  AAA4                    ORA ,Y        ; set bit
9256  A784                    STA ,X        ; write back to video memory
9258  39                      RTS           ; done
                              ;-----------
                              ;erase point
                              ;-----------
9259                  PLOTE
9259                  PLOTE0
9259                  PLOTE1
9259                  PLOTE2
9259                  PLOTE3
9259  6CC4                    INC ,U        ; form plane
925B  A684                    LDA ,X        ; get bit mask
925D  A428                    ANDA 8,Y      ; clear bit
925F  A784                    STA ,X        ; write back to video memory
9261  39                      RTS           ; done
9262                  PLOT0
9262                  PLOT1
9262                  PLOT2
9262                  PLOT4
9262  DC41                    LDD <PLOTX    ; common adress calculation for modes
9264  44                      LSRA          ; 0/1/2/4
9265  56                      RORB
9266  54                      LSRB
9267  54                      LSRB          ; B = <PLOTX/8
9268  3A                      ABX           ; adjust for X position
                              
9269  108E932A                LDY #PLOTORBIT
926D  D642                    LDB <(PLOTX+1)
926F  C407                    ANDB #$07
9271  31A5                    LEAY B,Y      ; Y point to "OR" bitmask, Y+8 to "AND" bitmask
9273  E6C4                    LDB ,U        ; select color plane
9275  C4FE                    ANDB #254
9277  E7C4                    STB ,U
9279                  PLOTCOMMON
                              ;----------------------------------------------
                              ;depending on PLOTM, routine draws or erases
                              ;----------------------------------------------
9279  9645                    LDA <PLOTM    ; (0 = erase, 1 = set, 2 = get pixel, 3 = get color)
927B  27DC                    BEQ PLOTE
927D  4A                      DECA            
927E  27AC                    BEQ PLOTD
9280  4A                      DECA            
9281  2746                    BEQ PLOTG     ; if = 2 then branch to get the point (0/1)
9283  4A                      DECA            
9284  2762                    BEQ PLOTC     ; if = 3 then branch to get the color index (0...15)
9286  39                      RTS
9287                  PLOTD2            ; Draw point with mode 2 (we are in plane0)
9287  A684                    LDA ,X        ; get row with point in it
9289  F60048                  LDB PLOTCPE      
928C  54                      LSRB          ; b0 of PEN set ?
928D  2404                    BCC PLOTD21   ; no => clear bit
928F  AAA4                    ORA ,Y        ; yes => set bit
9291  2002                    BRA PLOTD22
9293                  PLOTD21
9293  A428                    ANDA 8,Y
9295                  PLOTD22
9295  A784                    STA ,X        ; write back to video memory
9297  6CC4                    INC ,U        ; plane 1
9299  A684                    LDA ,X        ; get mask with point in it
929B  54                      LSRB          ; b1 of PEN set ?
929C  2404                    BCC PLOTD24   ; no => clear BIT
929E  AAA4                    ORA ,Y        ; yes => set BIT
92A0  2002                    BRA PLOTD25
92A2                  PLOTD24
92A2  A428                    ANDA 8,Y
92A4                  PLOTD25
92A4  A784                    STA ,X        ; write back to video memory
92A6  39                      RTS           ; done
92A7                  PLOTD3
92A7  9648                    LDA <PLOTCPE      ; Draw point in mode 3
92A9  840F                    ANDA #$0F     ; isolate color
92AB  D642                    LDB <(PLOTX+1)
92AD  54                      LSRB          ; odd column ?
92AE  2510                    BCS PLOTD3LO  ; yes => set low nibble
92B0                  PLOTD3HI
92B0  48                      ASLA          ; no => set high nibble
92B1  48                      ASLA
92B2  48                      ASLA
92B3  48                      ASLA
92B4  B792BC                  STA PLOTD3nibble+1
92B7  A684                    LDA ,X
92B9  840F                    ANDA #$0F
92BB                  PLOTD3nibble
92BB  8A55                    ORA #$55
92BD  A784                    STA ,X
92BF  39                      RTS           ; done
92C0                  PLOTD3LO
92C0  B792BC                  STA PLOTD3nibble+1
92C3  A684                    LDA ,X
92C5  84F0                    ANDA #$F0
92C7  20F2                    BRA PLOTD3nibble
92C9                  PLOTG             ; get point $00=unset $ff=set
92C9  B66F85                  LDA CURRENTMODE
92CC  8102                    CMPA #2
92CE  270F                    BEQ PLOTG2
92D0  8103                    CMPA #3
92D2  270B                    BEQ PLOTG3
92D4  6CC4                    INC ,U        ; plane 1
92D6  E684                    LDB ,X        ; get row with point in it
92D8  E4A4                    ANDB ,Y       ; bit set ?
92DA                  PLOTG0
92DA  2702                    BEQ PLOTG1    ; no => return 0
92DC  C6FF                    LDB #$FF      ; yes => return true
92DE                  PLOTG1
                      ;   STB <PLOTM
92DE  39                      RTS
92DF                  PLOTG2
92DF                  PLOTG3
92DF  8D07                    BSR PLOTC     ; get current color
92E1  F8C16E                  EORB _PAPER   ; same as paper ?
92E4  C40F                    ANDB #$0F     ; yes => return 0
92E6  20F2                    BRA PLOTG0    ; no => return true
                      ; Get pixel color according to video mode
92E8                  PLOTC
92E8  B66F85                  LDA CURRENTMODE
92EB  8102                    CMPA #2
92ED  2715                    BEQ PLOT2C    ; mode 2 specific
92EF  8103                    CMPA #3
92F1  2724                    BEQ PLOT3C    ; mode 3 specific
92F3                  PLOTC0
92F3                  PLOT0C
92F3                  PLOTC1
92F3                  PLOT1C
92F3                  PLOTC4
92F3                  PLOT4C            ; modes 0/1/4
92F3  E684                    LDB ,X        ; get color byte
92F5  6CC4                    INC ,U        ; bitmask plane
92F7  A684                    LDA ,X        ; get pixels byte
92F9  A4A4                    ANDA ,Y       ; bit set ?
92FB  2704                    BEQ PLOTC01   ; no => get lowwer nibble
92FD                  PLOTC00    
92FD  54                      LSRB          ; yes => get upper nibble
92FE  54                      LSRB
92FF  54                      LSRB
9300  54                      LSRB
9301                  PLOTC01
9301  C40F                    ANDB #15      ; result in B
                      ;   STB <PLOTM
9303  39                      RTS
9304                  PLOTC2
9304                  PLOT2C
9304  5F                      CLRB          ; mode 2 - clear all bits
9305  A684                    LDA ,X        ; get bitmask at plane0
9307  A4A4                    ANDA ,Y       ; point set ?   
9309  2701                    BEQ PLOT2C0   ; no => skip
930B  5C                      INCB          ; yes => set b0
930C                  PLOT2C0
930C  6CC4                    INC ,U        ; bit plane 1
930E  A684                    LDA ,X        ; get bitmask
9310  A4A4                    ANDA ,Y       ; point set ?
9312  2702                    BEQ PLOT2C1   ; no => skip
9314  CA02                    ORB #2        ; yes => set b1
9316                  PLOT2C1    
                      ;   STB <PLOTM
9316  39                      RTS           ; result in B
9317                  PLOTC3
9317                  PLOT3C
9317  A684                    LDA ,X        ; mode 3 - get color pair
9319  D642                    LDB <(PLOTX+1)
931B  54                      LSRB          ; odd column ?
931C  2507                    BCS PLOT3CLO  ; yes => get low nibble
931E                  PLOT3CHI
931E  44                      LSRA          ; no => get high nibble
931F  44                      LSRA
9320  44                      LSRA
9321  44                      LSRA
9322  1F89                    TFR A,B
9324  39                      RTS
9325                  PLOT3CLO
9325  840F                    ANDA #$0F
9327  1F89                    TFR A,B
9329  39                      RTS           ; done
                      ;----------------------------------------------------------------
932A                  PLOTORBIT
932A  80                      fcb %10000000
932B  40                      fcb %01000000
932C  20                      fcb %00100000
932D  10                      fcb %00010000
932E  08                      fcb %00001000
932F  04                      fcb %00000100
9330  02                      fcb %00000010
9331  01                      fcb %00000001
9332                  PLOTANDBIT
9332  7F                      fcb %01111111
9333  BF                      fcb %10111111
9334  DF                      fcb %11011111
9335  EF                      fcb %11101111
9336  F7                      fcb %11110111
9337  FB                      fcb %11111011
9338  FD                      fcb %11111101
9339  FE                      fcb %11111110
933A                  plot_after
933A  8601                    LDA #1
933C  BEC204                  LDX _render_view_v1_Ttmp217
933F  FEC206                  LDU _render_view_v1_Ttmp218
9342  F6C174                  LDB _draw__c
9345  D748                    STB <PLOTCPE
9347  BD9032                  JSR PLOT
934A  F6C174                  LDB _draw__c
934D  F76A25                  STB _PEN
9350  7CC21A                  INC _render_view_v1_Ttmp215
9353  5F                      CLRB
9354  B6C21A                  LDA _render_view_v1_Ttmp215
9357  8110                    CMPA #$10
9359  2601                    BNE _label245
935B  5A                      DECB
935C                  _label245
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp202
935C  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp202
                              IF (((128+_label246e0-(*+2))|(127-_label246e0+(*+2)))&0x8000)
                              LBEQ _label246e0
                              ELSE
935D  2704                    BEQ _label246e0
                              ENDIF
935F                  _label246t
935F  4F                      CLRA
9360  B7C21A                  STA _render_view_v1_Ttmp215
9363                  _label246f
9363                  _label246e0
9363  5F                      CLRB
9364  BEC212                  LDX _render_view_v1_Ttmp242
9367  BCC210                  CMPX _render_view_v1_Ttmp241
936A  2F01                    BLE _label248
936C  5A                      DECB
936D                  _label248
936D  F793E7                  STB _render_view_v1_Ttmp205
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp205
                              IF (((128+_label249e0-(*+2))|(127-_label249e0+(*+2)))&0x8000)
                              LBEQ _label249e0
                              ELSE
9370  2774                    BEQ _label249e0
                              ENDIF
9372                  _label249t
9372  FCC210                  LDD _render_view_v1_Ttmp241
9375  B3C208                  SUBD _render_view_v1_Ttmp219
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp250
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp250
9378  FDC202                  STD _render_view_v1_Ttmp216
937B                  _label252
937B  5F                      CLRB
937C  BEC204                  LDX _render_view_v1_Ttmp217
937F  BCC12A                  CMPX _draw__x1
9382  2601                    BNE _label255
9384  5A                      DECB
9385                  _label255
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp254
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp254
9385  53                      COMB
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp256
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp256
                              IF (((128+_label252bis-(*+2))|(127-_label252bis+(*+2)))&0x8000)
                              LBEQ _label252bis
                              ELSE
9386  275C                    BEQ _label252bis
                              ENDIF
9388  FCC20C                  LDD _render_view_v1_Ttmp223
938B  F3C204                  ADDD _render_view_v1_Ttmp217
938E  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
9391  FDC204                  STD _render_view_v1_Ttmp217
9394  5F                      CLRB
9395  BEC202                  LDX _render_view_v1_Ttmp216
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9398  2D01                    BLT _label260
939A  5A                      DECB
939B                  _label260
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp259
939B  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp259
                              IF (((128+_label261e0-(*+2))|(127-_label261e0+(*+2)))&0x8000)
                              LBEQ _label261e0
                              ELSE
939C  2712                    BEQ _label261e0
                              ENDIF
939E                  _label261t
939E  FCC20E                  LDD _render_view_v1_Ttmp224
93A1  F3C206                  ADDD _render_view_v1_Ttmp218
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp262
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp262
93A4  FDC206                  STD _render_view_v1_Ttmp218
93A7  FCC202                  LDD _render_view_v1_Ttmp216
93AA  B3C212                  SUBD _render_view_v1_Ttmp242
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp264
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp264
93AD  FDC202                  STD _render_view_v1_Ttmp216
93B0                  _label261f
93B0                  _label261e0
93B0  FCC210                  LDD _render_view_v1_Ttmp241
93B3  F3C202                  ADDD _render_view_v1_Ttmp216
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp266
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp266
93B6  FDC202                  STD _render_view_v1_Ttmp216
93B9  8601                    LDA #1
93BB  BEC204                  LDX _render_view_v1_Ttmp217
93BE  FEC206                  LDU _render_view_v1_Ttmp218
93C1  F6C174                  LDB _draw__c
93C4  D748                    STB <PLOTCPE
93C6  BD9032                  JSR PLOT
93C9  F6C174                  LDB _draw__c
93CC  F76A25                  STB _PEN
93CF  7CC21A                  INC _render_view_v1_Ttmp215
93D2  5F                      CLRB
93D3  B6C21A                  LDA _render_view_v1_Ttmp215
93D6  8110                    CMPA #$10
93D8  2601                    BNE _label271
93DA  5A                      DECB
93DB                  _label271
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp270
93DB  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp270
                              IF (((128+_label272e0-(*+2))|(127-_label272e0+(*+2)))&0x8000)
                              LBEQ _label272e0
                              ELSE
93DC  2704                    BEQ _label272e0
                              ENDIF
93DE                  _label272t
93DE  4F                      CLRA
93DF  B7C21A                  STA _render_view_v1_Ttmp215
93E2                  _label272f
93E2                  _label272e0
                              IF (((128+_label252-(*+2))|(127-_label252+(*+2)))&0x8000)
                              JMP _label252
                              ELSE
93E2  2097                    BRA _label252
                              ENDIF
93E4                  _label252bis
                              IF (((128+_label249f-(*+2))|(127-_label249f+(*+2)))&0x8000)
                              JMP _label249f
                              ELSE
93E4  2073                    BRA _label249f
                              ENDIF
93E6                  _label249e0
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v1_Ttmp205
93E6  C600                    LDB #1-1
93E7                  _render_view_v1_Ttmp205 equ *-1
                              IF (((128+_label249f-(*+2))|(127-_label249f+(*+2)))&0x8000)
                              LBNE _label249f
                              ELSE
93E8  266F                    BNE _label249f
                              ENDIF
93EA  FCC212                  LDD _render_view_v1_Ttmp242
93ED  B3C20A                  SUBD _render_view_v1_Ttmp220
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp273
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp273
93F0  FDC202                  STD _render_view_v1_Ttmp216
93F3                  _label275
93F3  5F                      CLRB
93F4  BEC206                  LDX _render_view_v1_Ttmp218
93F7  BCC12C                  CMPX _draw__y1
93FA  2601                    BNE _label278
93FC  5A                      DECB
93FD                  _label278
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp277
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp277
93FD  53                      COMB
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp279
                      ; peephole(7): r556 (FLAG-SET,TST)->(FLAG-SET)
                      ;       TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp279
                              IF (((128+_label275bis-(*+2))|(127-_label275bis+(*+2)))&0x8000)
                              LBEQ _label275bis
                              ELSE
93FE  2759                    BEQ _label275bis
                              ENDIF
9400  5F                      CLRB
9401  BEC202                  LDX _render_view_v1_Ttmp216
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9404  2D01                    BLT _label282
9406  5A                      DECB
9407                  _label282
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp281
9407  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp281
                              IF (((128+_label283e0-(*+2))|(127-_label283e0+(*+2)))&0x8000)
                              LBEQ _label283e0
                              ELSE
9408  2712                    BEQ _label283e0
                              ENDIF
940A                  _label283t
940A  FCC20C                  LDD _render_view_v1_Ttmp223
940D  F3C204                  ADDD _render_view_v1_Ttmp217
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp284
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp284
9410  FDC204                  STD _render_view_v1_Ttmp217
9413  FCC202                  LDD _render_view_v1_Ttmp216
9416  B3C210                  SUBD _render_view_v1_Ttmp241
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp286
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp286
9419  FDC202                  STD _render_view_v1_Ttmp216
941C                  _label283f
941C                  _label283e0
941C  FCC20E                  LDD _render_view_v1_Ttmp224
941F  F3C206                  ADDD _render_view_v1_Ttmp218
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp288
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp288
9422  FDC206                  STD _render_view_v1_Ttmp218
9425  FCC212                  LDD _render_view_v1_Ttmp242
9428  F3C202                  ADDD _render_view_v1_Ttmp216
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp290
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp290
942B  FDC202                  STD _render_view_v1_Ttmp216
942E  8601                    LDA #1
9430  BEC204                  LDX _render_view_v1_Ttmp217
9433  FEC206                  LDU _render_view_v1_Ttmp218
9436  F6C174                  LDB _draw__c
9439  D748                    STB <PLOTCPE
943B  BD9032                  JSR PLOT
943E  F6C174                  LDB _draw__c
9441  F76A25                  STB _PEN
9444  7CC21A                  INC _render_view_v1_Ttmp215
9447  5F                      CLRB
9448  B6C21A                  LDA _render_view_v1_Ttmp215
944B  8110                    CMPA #$10
944D  2601                    BNE _label295
944F  5A                      DECB
9450                  _label295
                      ; peephole(6): unread1
                      ;       STB _render_view_v1_Ttmp294
9450  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp294
                              IF (((128+_label296e0-(*+2))|(127-_label296e0+(*+2)))&0x8000)
                              LBEQ _label296e0
                              ELSE
9451  2704                    BEQ _label296e0
                              ENDIF
9453                  _label296t
9453  4F                      CLRA
9454  B7C21A                  STA _render_view_v1_Ttmp215
9457                  _label296f
9457                  _label296e0
                              IF (((128+_label275-(*+2))|(127-_label275+(*+2)))&0x8000)
                              JMP _label275
                              ELSE
9457  209A                    BRA _label275
                              ENDIF
9459                  _label275bis
9459                  _label249f
9459                  _label249e1
9459  39                      RTS
945A                  draw_after
945A  CC0000                  LDD #$0000
945D  FD946C                  STD _render_view_v1_Ttmp297
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v1_Ttmp189
9460  C600                    LDB #1-1
9461                  _render_view_v1_Ttmp189 equ *-1
9462  FD9478                  STD _render_view_v1_Ttmp298
9465  FCC132                  LDD _render_view_v1_screen_x
9468  FDC126                  STD _draw__x0
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v1_Ttmp297
946B  CC0000                  LDD #$0000
946C                  _render_view_v1_Ttmp297 equ *-2
946E  FDC128                  STD _draw__y0
9471  FCC132                  LDD _render_view_v1_screen_x
9474  FDC12A                  STD _draw__x1
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v1_Ttmp298
9477  CC0000                  LDD #$0000
9478                  _render_view_v1_Ttmp298 equ *-2
947A  FDC12C                  STD _draw__y1
947D  F6C219                  LDB _render_view_v1_Ttmp214
9480  F7C174                  STB _draw__c
                              IF (((128+lib_draw-(*+2))|(127-lib_draw+(*+2)))&0x8000)
9483  BD8F9C                  JSR lib_draw
                              ELSE
                              BSR lib_draw
                              ENDIF
9486  FCC132                  LDD _render_view_v1_screen_x
9489  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
948C  4F                      CLRA
948D  F69461                  LDB _render_view_v1_Ttmp189
9490  FD65BB                  STD YGR
                              ; V _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; V _render_view_v1_Ttmp183
                              ; V _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp189
                              ; Q _render_view_v1_Ttmp191
                              ; Q _render_view_v1_Ttmp196
                              ; Q _render_view_v1_Ttmp199
                              ; Q _render_view_v1_Ttmp202
                              ; Q _render_view_v1_Ttmp205
                              ; Q _render_view_v1_Ttmp214
                              ; Q _render_view_v1_Ttmp215
                              ; Q _render_view_v1_Ttmp216
                              ; Q _render_view_v1_Ttmp217
                              ; Q _render_view_v1_Ttmp218
                              ; Q _render_view_v1_Ttmp219
                              ; Q _render_view_v1_Ttmp220
                              ; Q _render_view_v1_Ttmp221
                              ; Q _render_view_v1_Ttmp222
                              ; Q _render_view_v1_Ttmp223
                              ; Q _render_view_v1_Ttmp224
                              ; Q _render_view_v1_Ttmp225
                              ; Q _render_view_v1_Ttmp226
                              ; Q _render_view_v1_Ttmp227
                              ; Q _render_view_v1_Ttmp228
                              ; Q _render_view_v1_Ttmp229
                              ; Q _render_view_v1_Ttmp230
                              ; Q _render_view_v1_Ttmp234
                              ; Q _render_view_v1_Ttmp235
                              ; Q _render_view_v1_Ttmp239
                              ; Q _render_view_v1_Ttmp240
                              ; Q _render_view_v1_Ttmp241
                              ; Q _render_view_v1_Ttmp242
                              ; Q _render_view_v1_Ttmp243
                              ; Q _render_view_v1_Ttmp250
                              ; Q _render_view_v1_Ttmp251
                              ; Q _render_view_v1_Ttmp254
                              ; Q _render_view_v1_Ttmp256
                              ; Q _render_view_v1_Ttmp257
                              ; Q _render_view_v1_Ttmp259
                              ; Q _render_view_v1_Ttmp262
                              ; Q _render_view_v1_Ttmp263
                              ; Q _render_view_v1_Ttmp264
                              ; Q _render_view_v1_Ttmp265
                              ; Q _render_view_v1_Ttmp266
                              ; Q _render_view_v1_Ttmp267
                              ; Q _render_view_v1_Ttmp268
                              ; Q _render_view_v1_Ttmp270
                              ; Q _render_view_v1_Ttmp273
                              ; Q _render_view_v1_Ttmp274
                              ; Q _render_view_v1_Ttmp277
                              ; Q _render_view_v1_Ttmp279
                              ; Q _render_view_v1_Ttmp281
                              ; Q _render_view_v1_Ttmp284
                              ; Q _render_view_v1_Ttmp285
                              ; Q _render_view_v1_Ttmp286
                              ; Q _render_view_v1_Ttmp287
                              ; Q _render_view_v1_Ttmp288
                              ; Q _render_view_v1_Ttmp289
                              ; Q _render_view_v1_Ttmp290
                              ; Q _render_view_v1_Ttmp291
                              ; Q _render_view_v1_Ttmp292
                              ; Q _render_view_v1_Ttmp294
                              ; V _render_view_v1_Ttmp297
                              ; Q _render_view_v1_Ttmp298
                              ; Q _render_view_v1_Ttmp299
                              ; Q _render_view_v1_Ttmp300
                              ; Q _render_view_v1_Ttmp301
                              ; Q _render_view_v1_Ttmp302
                              ; Q _render_view_v1_Ttmp303
                              ; Q _render_view_v1_Ttmp304
                              ; Q _render_view_v1_Ttmp305
                              ; Q _render_view_v1_Ttmp306
                              ; VSP
                              ; P:925
                              ; L:284
                              IF (((128+_label213f-(*+2))|(127-_label213f+(*+2)))&0x8000)
9493  7E9589                  JMP _label213f
                              ELSE
                              BRA _label213f
                              ENDIF
9496                  _label213e0
9496  F6C218                  LDB _render_view_v1_Ttmp193
                              IF (((128+_label213f-(*+2))|(127-_label213f+(*+2)))&0x8000)
9499  102600EC                LBNE _label213f
                              ELSE
                              BNE _label213f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:285
949D  FCC12E                  LDD _render_view_v1_middle
94A0  B3C130                  SUBD _render_view_v1_line_height
94A3  FDC200                  STD _render_view_v1_Ttmp182
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp182
94A6  FD94CD                  STD _render_view_v1_draw_start
                              ; Q _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; VSP
                              ; P:5
                              ; L:286
94A9  FCC130                  LDD _render_view_v1_line_height
94AC  F3C12E                  ADDD _render_view_v1_middle
94AF  FDC200                  STD _render_view_v1_Ttmp182
94B2  C601                    LDB #$01
94B4  F7C215                  STB _render_view_v1_Ttmp181
94B7  CCFFFF                  LDD #$ffff
94BA  F3C200                  ADDD _render_view_v1_Ttmp182
                      ; peephole(6): unread1
                      ;       STD _render_view_v1_Ttmp262
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v1_Ttmp262
94BD  FD9523                  STD _render_view_v1_draw_end
                              ; V _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp262
                              ; VSP
                              ; P:10
                              ; L:287
94C0  4F                      CLRA
94C1  B7C215                  STA _render_view_v1_Ttmp181
94C4  C601                    LDB #$01
94C6  F7C216                  STB _render_view_v1_Ttmp183
94C9  CCFFFF                  LDD #$ffff
                      ; peephole(12): inlined1
                      ;       ADDD _render_view_v1_draw_start
94CC  C30000                  ADDD #$0000
94CD                  _render_view_v1_draw_start equ *-2
94CF  FDC200                  STD _render_view_v1_Ttmp182
94D2  C606                    LDB #$06
94D4  F7C219                  STB _render_view_v1_Ttmp214
94D7  CC0000                  LDD #$0000
94DA  FDC202                  STD _render_view_v1_Ttmp216
94DD  FCC132                  LDD _render_view_v1_screen_x
94E0  FDC126                  STD _draw__x0
94E3  FCC202                  LDD _render_view_v1_Ttmp216
94E6  FDC128                  STD _draw__y0
94E9  FCC132                  LDD _render_view_v1_screen_x
94EC  FDC12A                  STD _draw__x1
94EF  FCC200                  LDD _render_view_v1_Ttmp182
94F2  FDC12C                  STD _draw__y1
94F5  F6C219                  LDB _render_view_v1_Ttmp214
94F8  F7C174                  STB _draw__c
                              IF (((128+lib_draw-(*+2))|(127-lib_draw+(*+2)))&0x8000)
94FB  BD8F9C                  JSR lib_draw
                              ELSE
                              BSR lib_draw
                              ENDIF
94FE  FCC132                  LDD _render_view_v1_screen_x
9501  FD65B9                  STD XGR
9504  FCC200                  LDD _render_view_v1_Ttmp182
9507  FD65BB                  STD YGR
                              ; V _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp182
                              ; V _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp189
                              ; Q _render_view_v1_Ttmp191
                              ; Q _render_view_v1_Ttmp214
                              ; Q _render_view_v1_Ttmp215
                              ; V _render_view_v1_Ttmp216
                              ; Q _render_view_v1_Ttmp225
                              ; Q _render_view_v1_Ttmp226
                              ; Q _render_view_v1_Ttmp228
                              ; VSP
                              ; P:30
                              ; L:288
950A  FC8F94                  LDD _render_view_v1_color
950D  F7C219                  STB _render_view_v1_Ttmp214
9510  FC65B9                  LDD XGR
9513  FDC126                  STD _draw__x0
9516  FC65BB                  LDD YGR
9519  FDC128                  STD _draw__y0
951C  FCC132                  LDD _render_view_v1_screen_x
951F  FDC12A                  STD _draw__x1
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v1_draw_end
9522  CC0000                  LDD #$0000
9523                  _render_view_v1_draw_end equ *-2
9525  FDC12C                  STD _draw__y1
9528  F6C219                  LDB _render_view_v1_Ttmp214
952B  F7C174                  STB _draw__c
                              IF (((128+lib_draw-(*+2))|(127-lib_draw+(*+2)))&0x8000)
952E  BD8F9C                  JSR lib_draw
                              ELSE
                              BSR lib_draw
                              ENDIF
9531  FCC132                  LDD _render_view_v1_screen_x
9534  FD65B9                  STD XGR
9537  FC9523                  LDD _render_view_v1_draw_end
953A  FD65BB                  STD YGR
                              ; Q _render_view_v1_Ttmp181
                              ; Q _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp189
                              ; Q _render_view_v1_Ttmp191
                              ; Q _render_view_v1_Ttmp214
                              ; Q _render_view_v1_Ttmp215
                              ; Q _render_view_v1_Ttmp225
                              ; Q _render_view_v1_Ttmp226
                              ; VSP
                              ; P:21
                              ; L:289
953D  C6C8                    LDB #$c8
953F  F7C215                  STB _render_view_v1_Ttmp181
9542  C601                    LDB #$01
9544  F7C216                  STB _render_view_v1_Ttmp183
9547  F6C215                  LDB _render_view_v1_Ttmp181
954A  CBFF                    ADDB #$ff
954C  F7C217                  STB _render_view_v1_Ttmp184
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$09
954F  CC0009                  LDD #$0009
9552  F7C219                  STB _render_view_v1_Ttmp214
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9555  F6C217                  LDB _render_view_v1_Ttmp184
9558  FDC202                  STD _render_view_v1_Ttmp216
955B  FC65B9                  LDD XGR
955E  FDC126                  STD _draw__x0
9561  FC65BB                  LDD YGR
9564  FDC128                  STD _draw__y0
9567  FCC132                  LDD _render_view_v1_screen_x
956A  FDC12A                  STD _draw__x1
956D  FCC202                  LDD _render_view_v1_Ttmp216
9570  FDC12C                  STD _draw__y1
9573  F6C219                  LDB _render_view_v1_Ttmp214
9576  F7C174                  STB _draw__c
                              IF (((128+lib_draw-(*+2))|(127-lib_draw+(*+2)))&0x8000)
9579  BD8F9C                  JSR lib_draw
                              ELSE
                              BSR lib_draw
                              ENDIF
957C  FCC132                  LDD _render_view_v1_screen_x
957F  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9582  4F                      CLRA
9583  F6C217                  LDB _render_view_v1_Ttmp184
9586  FD65BB                  STD YGR
                              ; V _render_view_v1_Ttmp181
                              ; V _render_view_v1_Ttmp183
                              ; Q _render_view_v1_Ttmp184
                              ; Q _render_view_v1_Ttmp189
                              ; Q _render_view_v1_Ttmp191
                              ; Q _render_view_v1_Ttmp214
                              ; Q _render_view_v1_Ttmp215
                              ; Q _render_view_v1_Ttmp216
                              ; Q _render_view_v1_Ttmp225
                              ; Q _render_view_v1_Ttmp226
                              ; Q _render_view_v1_Ttmp228
                              ; Q _render_view_v1_Ttmp230
                              ; Q _render_view_v1_Ttmp235
                              ; VSP
                              ; P:32
                              ; L:290
9589                  _label213f
9589                  _label213e1
                              ; Q _render_view_v1_Ttmp193
                              ; VSP
                              ; P:2
                              ; L:291
9589  7CC133                  INC _render_view_v1_screen_x+1
958C  2603                    BNE _label307
958E  7CC132                  INC _render_view_v1_screen_x
9591                  _label307
                              ; VSP
                              ; P:4
                              ; L:292
                              IF (((128+_label186prepfrom-(*+2))|(127-_label186prepfrom+(*+2)))&0x8000)
9591  BD8EC7                  JSR _label186prepfrom
                              ELSE
                              BSR _label186prepfrom
                              ENDIF
                              IF (((128+_label186prepto-(*+2))|(127-_label186prepto+(*+2)))&0x8000)
9594  BD8ED0                  JSR _label186prepto
                              ELSE
                              BSR _label186prepto
                              ENDIF
                              IF (((128+_label186prepstep-(*+2))|(127-_label186prepstep+(*+2)))&0x8000)
9597  BD8EE3                  JSR _label186prepstep
                              ELSE
                              BSR _label186prepstep
                              ENDIF
959A  F6C175                  LDB _render_view_v1_x
959D  FBC2A2                  ADDB _TRtmp190
95A0  F7C175                  STB _render_view_v1_x
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_x
                      ; peephole(2): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
                              LBEQ _label186bis
                              ELSE
95A3  2712                    BEQ _label186bis
                              ENDIF
95A5  5F                      CLRB
95A6  B6C175                  LDA _render_view_v1_x
95A9  B1C2A0                  CMPA _TRtmp187
95AC  2601                    BNE _label310
95AE  5A                      DECB
95AF                  _label310
95AF  F7C218                  STB _render_view_v1_Ttmp193
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v1_Ttmp193
                              IF (((128+_label186bis-(*+2))|(127-_label186bis+(*+2)))&0x8000)
                              LBNE _label186bis
                              ELSE
95B2  2603                    BNE _label186bis
                              ENDIF
                              IF (((128+_label186bf-(*+2))|(127-_label186bf+(*+2)))&0x8000)
95B4  7E8EF5                  JMP _label186bf
                              ELSE
                              BRA _label186bf
                              ENDIF
95B7                  _label186bis
                              ; V _render_view_v1_Ttmp180
                              ; Q _render_view_v1_Ttmp185
                              ; Q _render_view_v1_Ttmp193
                              ; VSP
                              ; P:44
                              ; L:293
95B7  39                      RTS
95B8                  render_view_v1after
                              ; VSP
                              ; P:2
                              ; L:294
                              ; VSP
                              ; P:0
                              ; L:295
                              IF (((128+render_view_v2after-(*+2))|(127-render_view_v2after+(*+2)))&0x8000)
95B8  7E9B23                  JMP render_view_v2after
                              ELSE
                              BRA render_view_v2after
                              ENDIF
95BB                  PROCrender_view_v2
                              ; VSP
                              ; P:6
                              ; L:296
                              ; VSP
                              ; P:0
                              ; L:297
                              ; VSP
                              ; P:0
                              ; L:298
                              ; VSP
                              ; P:0
                              ; L:299
                              ; VSP
                              ; P:0
                              ; L:300
                              ; VSP
                              ; P:0
                              ; L:301
                              ; VSP
                              ; P:0
                              ; L:302
                              ; VSP
                              ; P:0
                              ; L:303
                              ; VSP
                              ; P:0
                              ; L:304
                      ; peephole(4): r320 (LDA,LDB)->(LDD)
                      ;       LDA #$01
                      ;       LDB #$c8
95BB  CC01C8                  LDD #(($01)&255)*256+(($c8)&255)
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp311
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp311
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
95BE  BD8E82                  JSR CPUMATHDIV28BIT
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
95C1  4F                      CLRA
95C2  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
95C5  FD9779                  STD _render_view_v2_middle
                              ; V _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:13
                              ; L:305
95C8  C606                    LDB #$06
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp316
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp317
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp317
95CA  58                      LSLB
95CB  58                      LSLB
95CC  58                      LSLB
95CD  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp317
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp317
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
95CE  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
95D1  FD95E3                  STD _render_view_v2_sky_hi
                              ; Q _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp317
                              ; VSP
                              ; P:15
                              ; L:306
95D4  C609                    LDB #$09
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp316
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp317
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp317
95D6  58                      LSLB
95D7  58                      LSLB
95D8  58                      LSLB
95D9  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp317
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp317
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp311
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp311
95DA  F795EE                  STB _render_view_v2_floor_hi
                              ; Q _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp317
                              ; VSP
                              ; P:14
                              ; L:307
95DD  C606                    LDB #$06
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp316
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
95DF  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
                      ; peephole(12): inlined1
                      ;       ADDD _render_view_v2_sky_hi
95E2  C30000                  ADDD #$0000
95E3                  _render_view_v2_sky_hi equ *-2
95E5  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
95E8  FD9876                  STD _render_view_v2_segment_sky
                              ; Q _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp318
                              ; VSP
                              ; P:10
                              ; L:308
95EB  C609                    LDB #$09
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(7): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB _render_view_v2_floor_hi
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp317
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp317
                      ;       ADDB _render_view_v2_Ttmp316
                      ; peephole(12): inlined1
                      ;       ADDB _render_view_v2_floor_hi
95ED  CB00                    ADDB #1-1
95EE                  _render_view_v2_floor_hi equ *-1
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
95EF  4F                      CLRA
95F0  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
95F3  FD9ACC                  STD _render_view_v2_segment_floor
                              ; Q _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp317
                              ; VSP
                              ; P:12
                              ; L:309
                              ; VSP
                              ; P:0
                              ; L:310
95F6  CCE7C3                  LDD #$e7c3
95F9  FDC21F                  STD _render_view_v2_Ttmp319
95FC  E69FC21F                LDB [_render_view_v2_Ttmp319]
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp311
                      ; peephole(7): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB #$01
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ;       ORB _render_view_v2_Ttmp311
9600  CA01                    ORB #$01
9602  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9605  4F                      CLRA
9606  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9609  FD96D5                  STD _render_view_v2_ram_a
                              ; Q _render_view_v2_Ttmp311
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp319
                              ; Q _render_view_v2_Ttmp321
                              ; VSP
                              ; P:14
                              ; L:311
960C  CCE7C3                  LDD #$e7c3
960F  FDC21F                  STD _render_view_v2_Ttmp319
9612  E69FC21F                LDB [_render_view_v2_Ttmp319]
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp311
                      ; peephole(7): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB #$fe
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ;       ANDB _render_view_v2_Ttmp311
9616  C4FE                    ANDB #$fe
9618  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
961B  F796EE                  STB _render_view_v2_ram_b
                              ; Q _render_view_v2_Ttmp311
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp319
                              ; VSP
                              ; P:11
                              ; L:312
961E  4F                      CLRA
                      ; peephole(9): unread1
                      ;       STA _render_view_v2_Ttmp311
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
961F  B7C176                  STA _render_view_v2_ram_s
                              ; V _render_view_v2_Ttmp311
                              ; VSP
                              ; P:4
                              ; L:313
                              ; VSP
                              ; P:0
                              ; L:314
                              IF (((128+_label323prepa-(*+2))|(127-_label323prepa+(*+2)))&0x8000)
                              JMP _label323prepa
                              ELSE
9622  2021                    BRA _label323prepa
                              ENDIF
9624                  _label323prepfrom
9624  4F                      CLRA
                      ; peephole(9): unread1
                      ;       STA _render_view_v2_Ttmp311
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _render_view_v2_Ttmp311
9625  5F                      CLRB
9626  FDC25B                  STD _TRtmp324
9629  39                      RTS
962A                  _label323prepto
962A  C680                    LDB #$80
962C  F7C221                  STB _render_view_v2_Ttmp314
962F  C601                    LDB #$01
9631  F7C222                  STB _render_view_v2_Ttmp315
9634  F6C221                  LDB _render_view_v2_Ttmp314
9637  CBFF                    ADDB #$ff
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp321
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp321
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9639  4F                      CLRA
963A  FDC25D                  STD _TRtmp325
963D  39                      RTS
963E                  _label323prepstep
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$02
963E  CC0002                  LDD #$0002
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp327
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp327
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9641  FDC25F                  STD _TRtmp328
9644  39                      RTS
9645                  _label323prepa
                              IF (((128+_label323prepfrom-(*+2))|(127-_label323prepfrom+(*+2)))&0x8000)
                              JSR _label323prepfrom
                              ELSE
9645  8DDD                    BSR _label323prepfrom
                              ENDIF
                              IF (((128+_label323prepto-(*+2))|(127-_label323prepto+(*+2)))&0x8000)
                              JSR _label323prepto
                              ELSE
9647  8DE1                    BSR _label323prepto
                              ENDIF
                              IF (((128+_label323prepstep-(*+2))|(127-_label323prepstep+(*+2)))&0x8000)
                              JSR _label323prepstep
                              ELSE
9649  8DF3                    BSR _label323prepstep
                              ENDIF
964B  FCC25B                  LDD _TRtmp324
964E  FDC13C                  STD _render_view_v2_x
9651                  _label323bf
9651  5F                      CLRB
9652  BEC25F                  LDX _TRtmp328
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9655  2F01                    BLE _label333
9657  5A                      DECB
9658                  _label333
9658  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label323forw-(*+2))|(127-_label323forw+(*+2)))&0x8000)
                              LBNE _label323forw
                              ELSE
965B  2602                    BNE _label323forw
                              ENDIF
                              IF (((128+_label323back-(*+2))|(127-_label323back+(*+2)))&0x8000)
                              JMP _label323back
                              ELSE
965D  2020                    BRA _label323back
                              ENDIF
965F                  _label323forw
965F  5F                      CLRB
9660  BEC13C                  LDX _render_view_v2_x
9663  BCC25B                  CMPX _TRtmp324
9666  2C01                    BGE _label336
9668  5A                      DECB
9669                  _label336
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
9669  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label323bis-(*+2))|(127-_label323bis+(*+2)))&0x8000)
966A  102604B4                LBNE _label323bis
                              ELSE
                              BNE _label323bis
                              ENDIF
966E  5F                      CLRB
966F  BEC13C                  LDX _render_view_v2_x
9672  BCC25D                  CMPX _TRtmp325
9675  2F01                    BLE _label339
9677  5A                      DECB
9678                  _label339
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
9678  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label323bis-(*+2))|(127-_label323bis+(*+2)))&0x8000)
9679  102604A5                LBNE _label323bis
                              ELSE
                              BNE _label323bis
                              ENDIF
                              IF (((128+_label323cont-(*+2))|(127-_label323cont+(*+2)))&0x8000)
                              JMP _label323cont
                              ELSE
967D  201E                    BRA _label323cont
                              ENDIF
967F                  _label323back
967F  5F                      CLRB
9680  BEC13C                  LDX _render_view_v2_x
9683  BCC25B                  CMPX _TRtmp324
9686  2F01                    BLE _label342
9688  5A                      DECB
9689                  _label342
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
9689  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label323bis-(*+2))|(127-_label323bis+(*+2)))&0x8000)
968A  10260494                LBNE _label323bis
                              ELSE
                              BNE _label323bis
                              ENDIF
968E  5F                      CLRB
968F  BEC13C                  LDX _render_view_v2_x
9692  BCC25D                  CMPX _TRtmp325
9695  2C01                    BGE _label345
9697  5A                      DECB
9698                  _label345
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
9698  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label323bis-(*+2))|(127-_label323bis+(*+2)))&0x8000)
9699  10260485                LBNE _label323bis
                              ELSE
                              BNE _label323bis
                              ENDIF
969D                  _label323cont
                              ; Q _render_view_v2_Ttmp312
                              ; V _render_view_v2_Ttmp314
                              ; V _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp329
                              ; Q _render_view_v2_Ttmp330
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:128
                              ; L:315
969D  CC4008                  LDD #$4008
96A0  FDC21F                  STD _render_view_v2_Ttmp319
96A3  FCC13C                  LDD _render_view_v2_x
96A6  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
96A9  8E0002                  LDX #$02
96AC  BD8A71                  JSR CPUMATHDIV2CONST16BIT_SIGNED
96AF  FDC21B                  STD _render_view_v2_Ttmp313
96B2  FCC21F                  LDD _render_view_v2_Ttmp319
96B5  FDC21D                  STD _render_view_v2_Ttmp318
96B8  FCC21B                  LDD _render_view_v2_Ttmp313
96BB  F3C21D                  ADDD _render_view_v2_Ttmp318
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp346
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp346
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
96BE  FDC142                  STD _render_view_v2_bitmap_address
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp318
                              ; V _render_view_v2_Ttmp319
                              ; Q _render_view_v2_Ttmp346
                              ; Q _render_view_v2_Ttmp347
                              ; VSP
                              ; P:17
                              ; L:316
                              ; VSP
                              ; P:0
                              ; L:317
96C1  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _render_view_v2_Ttmp312
96C2  5F                      CLRB
96C3  B6C176                  LDA _render_view_v2_ram_s
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
96C6  2601                    BNE _label349
96C8  5A                      DECB
96C9                  _label349
96C9  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label350e0-(*+2))|(127-_label350e0+(*+2)))&0x8000)
                              LBEQ _label350e0
                              ELSE
96CC  2714                    BEQ _label350e0
                              ENDIF
96CE                  _label350t
                              ; V _render_view_v2_Ttmp312
                              ; VSP
                              ; P:16
                              ; L:318
96CE  CCE7C3                  LDD #$e7c3
96D1  FDC21F                  STD _render_view_v2_Ttmp319
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_ram_a
96D4  CC0000                  LDD #$0000
96D5                  _render_view_v2_ram_a equ *-2
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
96D7  E79FC21F                STB [_render_view_v2_Ttmp319]
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp314
                              ; V _render_view_v2_Ttmp319
                              ; VSP
                              ; P:6
                              ; L:319
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$01
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
96DB  C601                    LDB #$01
96DD  F7C176                  STB _render_view_v2_ram_s
                              ; V _render_view_v2_Ttmp312
                              ; VSP
                              ; P:4
                              ; L:320
                              IF (((128+_label350f-(*+2))|(127-_label350f+(*+2)))&0x8000)
                              JMP _label350f
                              ELSE
96E0  2015                    BRA _label350f
                              ENDIF
96E2                  _label350e0
96E2  F6C223                  LDB _render_view_v2_Ttmp332
                              IF (((128+_label350f-(*+2))|(127-_label350f+(*+2)))&0x8000)
                              LBNE _label350f
                              ELSE
96E5  2610                    BNE _label350f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:321
96E7  CCE7C3                  LDD #$e7c3
96EA  FDC21F                  STD _render_view_v2_Ttmp319
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v2_ram_b
96ED  C600                    LDB #1-1
96EE                  _render_view_v2_ram_b equ *-1
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
96EF  E79FC21F                STB [_render_view_v2_Ttmp319]
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp314
                              ; V _render_view_v2_Ttmp319
                              ; VSP
                              ; P:6
                              ; L:322
96F3  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _render_view_v2_Ttmp312
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
96F4  B7C176                  STA _render_view_v2_ram_s
                              ; V _render_view_v2_Ttmp312
                              ; VSP
                              ; P:4
                              ; L:323
96F7                  _label350f
96F7                  _label350e1
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:2
                              ; L:324
                              ; VSP
                              ; P:0
                              ; L:325
96F7  FCC13C                  LDD _render_view_v2_x
96FA  F7C221                  STB _render_view_v2_Ttmp314
96FD  8EC000                  LDX #_line_height_array
9700  F6C221                  LDB _render_view_v2_Ttmp314
9703  3A                      ABX
9704  E684                    LDB ,X
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                              ; move from array to = _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9706  4F                      CLRA
9707  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
970A  FDC134                  STD _render_view_v2_line_height1
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp329
                              ; VSP
                              ; P:12
                              ; L:326
970D  FCC13C                  LDD _render_view_v2_x
9710  F7C221                  STB _render_view_v2_Ttmp314
9713  8EC080                  LDX #_color_array
9716  F6C221                  LDB _render_view_v2_Ttmp314
9719  3A                      ABX
971A  E684                    LDB ,X
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                              ; move from array to = _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp326
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp326
971C  58                      LSLB
971D  58                      LSLB
971E  58                      LSLB
971F  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp326
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp326
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9720  4F                      CLRA
9721  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9724  FDC138                  STD _render_view_v2_color1
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp329
                              ; Q _render_view_v2_Ttmp330
                              ; VSP
                              ; P:20
                              ; L:327
9727  C601                    LDB #$01
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
9729  CC0001                  LDD #$0001
972C  F3C13C                  ADDD _render_view_v2_x
972F  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9732  F7C222                  STB _render_view_v2_Ttmp315
9735  8EC000                  LDX #_line_height_array
9738  F6C222                  LDB _render_view_v2_Ttmp315
973B  3A                      ABX
973C  E684                    LDB ,X
973E  F7C221                  STB _render_view_v2_Ttmp314
                              ; move from array to = _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9741  4F                      CLRA
9742  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
9745  FDC136                  STD _render_view_v2_line_height2
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp318
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp329
                              ; Q _render_view_v2_Ttmp330
                              ; VSP
                              ; P:17
                              ; L:328
9748  C601                    LDB #$01
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
974A  CC0001                  LDD #$0001
974D  F3C13C                  ADDD _render_view_v2_x
9750  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9753  F7C222                  STB _render_view_v2_Ttmp315
9756  8EC080                  LDX #_color_array
9759  F6C222                  LDB _render_view_v2_Ttmp315
975C  3A                      ABX
975D  E684                    LDB ,X
975F  F7C221                  STB _render_view_v2_Ttmp314
                              ; move from array to = _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9762  4F                      CLRA
9763  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
9766  FDC13A                  STD _render_view_v2_color2
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp318
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp329
                              ; Q _render_view_v2_Ttmp330
                              ; VSP
                              ; P:17
                              ; L:329
                              ; VSP
                              ; P:0
                              ; L:330
9769  5F                      CLRB
976A  BEC134                  LDX _render_view_v2_line_height1
976D  BCC136                  CMPX _render_view_v2_line_height2
9770  2F01                    BLE _label360
9772  5A                      DECB
9773                  _label360
9773  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label361e0-(*+2))|(127-_label361e0+(*+2)))&0x8000)
                              LBEQ _label361e0
                              ELSE
9776  2743                    BEQ _label361e0
                              ENDIF
9778                  _label361t
                              ; VSP
                              ; P:14
                              ; L:331
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_middle
9778  CC0000                  LDD #$0000
9779                  _render_view_v2_middle equ *-2
977B  B3C134                  SUBD _render_view_v2_line_height1
977E  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9781  FDC13E                  STD _render_view_v2_sky_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; VSP
                              ; P:5
                              ; L:332
9784  FCC134                  LDD _render_view_v2_line_height1
9787  B3C136                  SUBD _render_view_v2_line_height2
978A  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
978D  FDC140                  STD _render_view_v2_one_pix_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; VSP
                              ; P:5
                              ; L:333
9790  FCC136                  LDD _render_view_v2_line_height2
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
9793  58                      LSLB
9794  49                      ROLA
9795  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
9798  F7994B                  STB _render_view_v2_two_pix_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:10
                              ; L:334
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$06
979B  CC0006                  LDD #$0006
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp316
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
979E  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97A1  F3C138                  ADDD _render_view_v2_color1
97A4  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
97A7  FD990E                  STD _render_view_v2_segment_one_pix_sky
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp318
                              ; VSP
                              ; P:10
                              ; L:335
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$09
97AA  CC0009                  LDD #$0009
                      ; peephole(9): unread1
                      ;       STB _render_view_v2_Ttmp316
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp316
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
97AD  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97B0  F3C138                  ADDD _render_view_v2_color1
97B3  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
97B6  FD9A37                  STD _render_view_v2_segment_one_pix_floor
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp316
                              ; Q _render_view_v2_Ttmp318
                              ; VSP
                              ; P:10
                              ; L:336
                              IF (((128+_label361f-(*+2))|(127-_label361f+(*+2)))&0x8000)
                              JMP _label361f
                              ELSE
97B9  2047                    BRA _label361f
                              ENDIF
97BB                  _label361e0
97BB  F6C223                  LDB _render_view_v2_Ttmp332
                              IF (((128+_label361f-(*+2))|(127-_label361f+(*+2)))&0x8000)
                              LBNE _label361f
                              ELSE
97BE  2642                    BNE _label361f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:337
97C0  FC9779                  LDD _render_view_v2_middle
97C3  B3C136                  SUBD _render_view_v2_line_height2
97C6  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97C9  FDC13E                  STD _render_view_v2_sky_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; VSP
                              ; P:5
                              ; L:338
97CC  FCC136                  LDD _render_view_v2_line_height2
97CF  B3C134                  SUBD _render_view_v2_line_height1
97D2  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97D5  FDC140                  STD _render_view_v2_one_pix_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; VSP
                              ; P:5
                              ; L:339
97D8  FCC134                  LDD _render_view_v2_line_height1
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97DB  58                      LSLB
97DC  49                      ROLA
97DD  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
97E0  F7994B                  STB _render_view_v2_two_pix_height
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:10
                              ; L:340
97E3  FCC13A                  LDD _render_view_v2_color2
97E6  F395E3                  ADDD _render_view_v2_sky_hi
97E9  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
97EC  FD990E                  STD _render_view_v2_segment_one_pix_sky
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; VSP
                              ; P:5
                              ; L:341
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
97EF  4F                      CLRA
97F0  F695EE                  LDB _render_view_v2_floor_hi
97F3  FDC21B                  STD _render_view_v2_Ttmp313
97F6  FCC13A                  LDD _render_view_v2_color2
97F9  F3C21B                  ADDD _render_view_v2_Ttmp313
97FC  FDC21D                  STD _render_view_v2_Ttmp318
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp318
97FF  FD9A37                  STD _render_view_v2_segment_one_pix_floor
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp318
                              ; VSP
                              ; P:8
                              ; L:342
9802                  _label361f
9802                  _label361e1
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:2
                              ; L:343
9802  FCC13A                  LDD _render_view_v2_color2
9805  F3C138                  ADDD _render_view_v2_color1
9808  FDC21B                  STD _render_view_v2_Ttmp313
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp313
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
980B  F799A3                  STB _render_view_v2_segment_two_pix
                              ; Q _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp313
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:7
                              ; L:344
                              ; VSP
                              ; P:0
                              ; L:345
                              IF (((128+_label362prepa-(*+2))|(127-_label362prepa+(*+2)))&0x8000)
                              JMP _label362prepa
                              ELSE
980E  2015                    BRA _label362prepa
                              ENDIF
9810                  _label362prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
9810  CC0001                  LDD #$0001
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9813  FDC261                  STD _TRtmp363
9816  39                      RTS
9817                  _label362prepto
9817  FCC13E                  LDD _render_view_v2_sky_height
981A  FDC263                  STD _TRtmp364
981D  39                      RTS
981E                  _label362prepstep
981E  CC0001                  LDD #$0001
9821  FDC265                  STD _TRtmp365
9824  39                      RTS
9825                  _label362prepa
                              IF (((128+_label362prepfrom-(*+2))|(127-_label362prepfrom+(*+2)))&0x8000)
                              JSR _label362prepfrom
                              ELSE
9825  8DE9                    BSR _label362prepfrom
                              ENDIF
                              IF (((128+_label362prepto-(*+2))|(127-_label362prepto+(*+2)))&0x8000)
                              JSR _label362prepto
                              ELSE
9827  8DEE                    BSR _label362prepto
                              ENDIF
                              IF (((128+_label362prepstep-(*+2))|(127-_label362prepstep+(*+2)))&0x8000)
                              JSR _label362prepstep
                              ELSE
9829  8DF3                    BSR _label362prepstep
                              ENDIF
982B  FCC261                  LDD _TRtmp363
982E  FDC144                  STD _render_view_v2_address
9831                  _label362bf
9831  5F                      CLRB
9832  BEC265                  LDX _TRtmp365
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9835  2F01                    BLE _label367
9837  5A                      DECB
9838                  _label367
9838  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label362forw-(*+2))|(127-_label362forw+(*+2)))&0x8000)
                              LBNE _label362forw
                              ELSE
983B  2602                    BNE _label362forw
                              ENDIF
                              IF (((128+_label362back-(*+2))|(127-_label362back+(*+2)))&0x8000)
                              JMP _label362back
                              ELSE
983D  201C                    BRA _label362back
                              ENDIF
983F                  _label362forw
983F  5F                      CLRB
9840  BEC144                  LDX _render_view_v2_address
9843  BCC261                  CMPX _TRtmp363
9846  2C01                    BGE _label369
9848  5A                      DECB
9849                  _label369
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
9849  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label362bis-(*+2))|(127-_label362bis+(*+2)))&0x8000)
                              LBNE _label362bis
                              ELSE
984A  265F                    BNE _label362bis
                              ENDIF
984C  5F                      CLRB
984D  BEC144                  LDX _render_view_v2_address
9850  BCC263                  CMPX _TRtmp364
9853  2F01                    BLE _label371
9855  5A                      DECB
9856                  _label371
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
9856  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label362bis-(*+2))|(127-_label362bis+(*+2)))&0x8000)
                              LBNE _label362bis
                              ELSE
9857  2652                    BNE _label362bis
                              ENDIF
                              IF (((128+_label362cont-(*+2))|(127-_label362cont+(*+2)))&0x8000)
                              JMP _label362cont
                              ELSE
9859  201A                    BRA _label362cont
                              ENDIF
985B                  _label362back
985B  5F                      CLRB
985C  BEC144                  LDX _render_view_v2_address
985F  BCC261                  CMPX _TRtmp363
9862  2F01                    BLE _label373
9864  5A                      DECB
9865                  _label373
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
9865  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label362bis-(*+2))|(127-_label362bis+(*+2)))&0x8000)
                              LBNE _label362bis
                              ELSE
9866  2643                    BNE _label362bis
                              ENDIF
9868  5F                      CLRB
9869  BEC144                  LDX _render_view_v2_address
986C  BCC263                  CMPX _TRtmp364
986F  2C01                    BGE _label375
9871  5A                      DECB
9872                  _label375
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
9872  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label362bis-(*+2))|(127-_label362bis+(*+2)))&0x8000)
                              LBNE _label362bis
                              ELSE
9873  2636                    BNE _label362bis
                              ENDIF
9875                  _label362cont
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:117
                              ; L:346
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_segment_sky
9875  CC0000                  LDD #$0000
9876                  _render_view_v2_segment_sky equ *-2
9878  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
987B  E79FC142                STB [_render_view_v2_bitmap_address]
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:4
                              ; L:347
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$28
987F  CC0028                  LDD #$0028
9882  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
9885  F3C142                  ADDD _render_view_v2_bitmap_address
9888  FDC142                  STD _render_view_v2_bitmap_address
                              ; V _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp347
                              ; VSP
                              ; P:8
                              ; L:348
                              IF (((128+_label362prepfrom-(*+2))|(127-_label362prepfrom+(*+2)))&0x8000)
                              JSR _label362prepfrom
                              ELSE
988B  8D83                    BSR _label362prepfrom
                              ENDIF
                              IF (((128+_label362prepto-(*+2))|(127-_label362prepto+(*+2)))&0x8000)
                              JSR _label362prepto
                              ELSE
988D  8D88                    BSR _label362prepto
                              ENDIF
                              IF (((128+_label362prepstep-(*+2))|(127-_label362prepstep+(*+2)))&0x8000)
                              JSR _label362prepstep
                              ELSE
988F  8D8D                    BSR _label362prepstep
                              ENDIF
9891  FCC265                  LDD _TRtmp365
9894  F3C144                  ADDD _render_view_v2_address
9897  FDC144                  STD _render_view_v2_address
989A  5F                      CLRB
989B  BEC144                  LDX _render_view_v2_address
989E  BCC261                  CMPX _TRtmp363
98A1  2601                    BNE _label377
98A3  5A                      DECB
98A4                  _label377
98A4  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label362bis-(*+2))|(127-_label362bis+(*+2)))&0x8000)
                              LBNE _label362bis
                              ELSE
98A7  2602                    BNE _label362bis
                              ENDIF
                              IF (((128+_label362bf-(*+2))|(127-_label362bf+(*+2)))&0x8000)
                              JMP _label362bf
                              ELSE
98A9  2086                    BRA _label362bf
                              ENDIF
98AB                  _label362bis
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:349
                              IF (((128+_label378prepa-(*+2))|(127-_label378prepa+(*+2)))&0x8000)
                              JMP _label378prepa
                              ELSE
98AB  2015                    BRA _label378prepa
                              ENDIF
98AD                  _label378prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
98AD  CC0001                  LDD #$0001
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
98B0  FDC267                  STD _TRtmp379
98B3  39                      RTS
98B4                  _label378prepto
98B4  FCC140                  LDD _render_view_v2_one_pix_height
98B7  FDC269                  STD _TRtmp380
98BA  39                      RTS
98BB                  _label378prepstep
98BB  CC0001                  LDD #$0001
98BE  FDC26B                  STD _TRtmp381
98C1  39                      RTS
98C2                  _label378prepa
                              IF (((128+_label378prepfrom-(*+2))|(127-_label378prepfrom+(*+2)))&0x8000)
                              JSR _label378prepfrom
                              ELSE
98C2  8DE9                    BSR _label378prepfrom
                              ENDIF
                              IF (((128+_label378prepto-(*+2))|(127-_label378prepto+(*+2)))&0x8000)
                              JSR _label378prepto
                              ELSE
98C4  8DEE                    BSR _label378prepto
                              ENDIF
                              IF (((128+_label378prepstep-(*+2))|(127-_label378prepstep+(*+2)))&0x8000)
                              JSR _label378prepstep
                              ELSE
98C6  8DF3                    BSR _label378prepstep
                              ENDIF
98C8  FCC267                  LDD _TRtmp379
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
98CB  DDF7                    STD <(_render_view_v2_y)
98CD                  _label378bf
98CD  5F                      CLRB
98CE  BEC26B                  LDX _TRtmp381
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
98D1  2F01                    BLE _label383
98D3  5A                      DECB
98D4                  _label383
98D4  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label378forw-(*+2))|(127-_label378forw+(*+2)))&0x8000)
                              LBNE _label378forw
                              ELSE
98D7  2602                    BNE _label378forw
                              ENDIF
                              IF (((128+_label378back-(*+2))|(127-_label378back+(*+2)))&0x8000)
                              JMP _label378back
                              ELSE
98D9  201A                    BRA _label378back
                              ENDIF
98DB                  _label378forw
98DB  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
98DC  9EF7                    LDX <(_render_view_v2_y)
98DE  BCC267                  CMPX _TRtmp379
98E1  2C01                    BGE _label385
98E3  5A                      DECB
98E4                  _label385
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
98E4  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label378bis-(*+2))|(127-_label378bis+(*+2)))&0x8000)
                              LBNE _label378bis
                              ELSE
98E5  2659                    BNE _label378bis
                              ENDIF
98E7  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
98E8  9EF7                    LDX <(_render_view_v2_y)
98EA  BCC269                  CMPX _TRtmp380
98ED  2F01                    BLE _label387
98EF  5A                      DECB
98F0                  _label387
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
98F0  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label378bis-(*+2))|(127-_label378bis+(*+2)))&0x8000)
                              LBNE _label378bis
                              ELSE
98F1  264D                    BNE _label378bis
                              ENDIF
                              IF (((128+_label378cont-(*+2))|(127-_label378cont+(*+2)))&0x8000)
                              JMP _label378cont
                              ELSE
98F3  2018                    BRA _label378cont
                              ENDIF
98F5                  _label378back
98F5  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
98F6  9EF7                    LDX <(_render_view_v2_y)
98F8  BCC267                  CMPX _TRtmp379
98FB  2F01                    BLE _label389
98FD  5A                      DECB
98FE                  _label389
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
98FE  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label378bis-(*+2))|(127-_label378bis+(*+2)))&0x8000)
                              LBNE _label378bis
                              ELSE
98FF  263F                    BNE _label378bis
                              ENDIF
9901  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9902  9EF7                    LDX <(_render_view_v2_y)
9904  BCC269                  CMPX _TRtmp380
9907  2C01                    BGE _label391
9909  5A                      DECB
990A                  _label391
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
990A  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label378bis-(*+2))|(127-_label378bis+(*+2)))&0x8000)
                              LBNE _label378bis
                              ELSE
990B  2633                    BNE _label378bis
                              ENDIF
990D                  _label378cont
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:117
                              ; L:350
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_segment_one_pix_sky
990D  CC0000                  LDD #$0000
990E                  _render_view_v2_segment_one_pix_sky equ *-2
9910  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
9913  E79FC142                STB [_render_view_v2_bitmap_address]
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:4
                              ; L:351
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$28
9917  CC0028                  LDD #$0028
991A  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
991D  F3C142                  ADDD _render_view_v2_bitmap_address
9920  FDC142                  STD _render_view_v2_bitmap_address
                              ; V _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp347
                              ; VSP
                              ; P:8
                              ; L:352
                              IF (((128+_label378prepfrom-(*+2))|(127-_label378prepfrom+(*+2)))&0x8000)
                              JSR _label378prepfrom
                              ELSE
9923  8D88                    BSR _label378prepfrom
                              ENDIF
                              IF (((128+_label378prepto-(*+2))|(127-_label378prepto+(*+2)))&0x8000)
                              JSR _label378prepto
                              ELSE
9925  8D8D                    BSR _label378prepto
                              ENDIF
                              IF (((128+_label378prepstep-(*+2))|(127-_label378prepstep+(*+2)))&0x8000)
                              JSR _label378prepstep
                              ELSE
9927  8D92                    BSR _label378prepstep
                              ENDIF
9929  FCC26B                  LDD _TRtmp381
                      ; peephole(12): direct-page1
                      ;       ADDD _render_view_v2_y
992C  D3F7                    ADDD <(_render_view_v2_y)
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
992E  DDF7                    STD <(_render_view_v2_y)
9930  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9931  9EF7                    LDX <(_render_view_v2_y)
9933  BCC267                  CMPX _TRtmp379
9936  2601                    BNE _label393
9938  5A                      DECB
9939                  _label393
9939  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label378bis-(*+2))|(127-_label378bis+(*+2)))&0x8000)
                              LBNE _label378bis
                              ELSE
993C  2602                    BNE _label378bis
                              ENDIF
                              IF (((128+_label378bf-(*+2))|(127-_label378bf+(*+2)))&0x8000)
                              JMP _label378bf
                              ELSE
993E  208D                    BRA _label378bf
                              ENDIF
9940                  _label378bis
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:353
                              IF (((128+_label394prepa-(*+2))|(127-_label394prepa+(*+2)))&0x8000)
                              JMP _label394prepa
                              ELSE
9940  2015                    BRA _label394prepa
                              ENDIF
9942                  _label394prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
9942  CC0001                  LDD #$0001
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9945  FDC26D                  STD _TRtmp395
9948  39                      RTS
9949                  _label394prepto
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9949  4F                      CLRA
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v2_two_pix_height
994A  C600                    LDB #1-1
994B                  _render_view_v2_two_pix_height equ *-1
994C  FDC26F                  STD _TRtmp396
994F  39                      RTS
9950                  _label394prepstep
9950  CC0001                  LDD #$0001
9953  FDC271                  STD _TRtmp397
9956  39                      RTS
9957                  _label394prepa
                              IF (((128+_label394prepfrom-(*+2))|(127-_label394prepfrom+(*+2)))&0x8000)
                              JSR _label394prepfrom
                              ELSE
9957  8DE9                    BSR _label394prepfrom
                              ENDIF
                              IF (((128+_label394prepto-(*+2))|(127-_label394prepto+(*+2)))&0x8000)
                              JSR _label394prepto
                              ELSE
9959  8DEE                    BSR _label394prepto
                              ENDIF
                              IF (((128+_label394prepstep-(*+2))|(127-_label394prepstep+(*+2)))&0x8000)
                              JSR _label394prepstep
                              ELSE
995B  8DF3                    BSR _label394prepstep
                              ENDIF
995D  FCC26D                  LDD _TRtmp395
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
9960  DDF7                    STD <(_render_view_v2_y)
9962                  _label394bf
9962  5F                      CLRB
9963  BEC271                  LDX _TRtmp397
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9966  2F01                    BLE _label399
9968  5A                      DECB
9969                  _label399
9969  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label394forw-(*+2))|(127-_label394forw+(*+2)))&0x8000)
                              LBNE _label394forw
                              ELSE
996C  2602                    BNE _label394forw
                              ENDIF
                              IF (((128+_label394back-(*+2))|(127-_label394back+(*+2)))&0x8000)
                              JMP _label394back
                              ELSE
996E  201A                    BRA _label394back
                              ENDIF
9970                  _label394forw
9970  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9971  9EF7                    LDX <(_render_view_v2_y)
9973  BCC26D                  CMPX _TRtmp395
9976  2C01                    BGE _label401
9978  5A                      DECB
9979                  _label401
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
9979  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label394bis-(*+2))|(127-_label394bis+(*+2)))&0x8000)
                              LBNE _label394bis
                              ELSE
997A  2658                    BNE _label394bis
                              ENDIF
997C  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
997D  9EF7                    LDX <(_render_view_v2_y)
997F  BCC26F                  CMPX _TRtmp396
9982  2F01                    BLE _label403
9984  5A                      DECB
9985                  _label403
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
9985  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label394bis-(*+2))|(127-_label394bis+(*+2)))&0x8000)
                              LBNE _label394bis
                              ELSE
9986  264C                    BNE _label394bis
                              ENDIF
                              IF (((128+_label394cont-(*+2))|(127-_label394cont+(*+2)))&0x8000)
                              JMP _label394cont
                              ELSE
9988  2018                    BRA _label394cont
                              ENDIF
998A                  _label394back
998A  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
998B  9EF7                    LDX <(_render_view_v2_y)
998D  BCC26D                  CMPX _TRtmp395
9990  2F01                    BLE _label405
9992  5A                      DECB
9993                  _label405
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
9993  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label394bis-(*+2))|(127-_label394bis+(*+2)))&0x8000)
                              LBNE _label394bis
                              ELSE
9994  263E                    BNE _label394bis
                              ENDIF
9996  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9997  9EF7                    LDX <(_render_view_v2_y)
9999  BCC26F                  CMPX _TRtmp396
999C  2C01                    BGE _label407
999E  5A                      DECB
999F                  _label407
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
999F  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label394bis-(*+2))|(127-_label394bis+(*+2)))&0x8000)
                              LBNE _label394bis
                              ELSE
99A0  2632                    BNE _label394bis
                              ENDIF
99A2                  _label394cont
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:118
                              ; L:354
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v2_segment_two_pix
99A2  C600                    LDB #1-1
99A3                  _render_view_v2_segment_two_pix equ *-1
99A4  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
99A7  E79FC142                STB [_render_view_v2_bitmap_address]
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:4
                              ; L:355
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$28
99AB  CC0028                  LDD #$0028
99AE  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
99B1  F3C142                  ADDD _render_view_v2_bitmap_address
99B4  FDC142                  STD _render_view_v2_bitmap_address
                              ; V _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp347
                              ; VSP
                              ; P:8
                              ; L:356
                              IF (((128+_label394prepfrom-(*+2))|(127-_label394prepfrom+(*+2)))&0x8000)
                              JSR _label394prepfrom
                              ELSE
99B7  8D89                    BSR _label394prepfrom
                              ENDIF
                              IF (((128+_label394prepto-(*+2))|(127-_label394prepto+(*+2)))&0x8000)
                              JSR _label394prepto
                              ELSE
99B9  8D8E                    BSR _label394prepto
                              ENDIF
                              IF (((128+_label394prepstep-(*+2))|(127-_label394prepstep+(*+2)))&0x8000)
                              JSR _label394prepstep
                              ELSE
99BB  8D93                    BSR _label394prepstep
                              ENDIF
99BD  FCC271                  LDD _TRtmp397
                      ; peephole(12): direct-page1
                      ;       ADDD _render_view_v2_y
99C0  D3F7                    ADDD <(_render_view_v2_y)
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
99C2  DDF7                    STD <(_render_view_v2_y)
99C4  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
99C5  9EF7                    LDX <(_render_view_v2_y)
99C7  BCC26D                  CMPX _TRtmp395
99CA  2601                    BNE _label409
99CC  5A                      DECB
99CD                  _label409
99CD  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label394bis-(*+2))|(127-_label394bis+(*+2)))&0x8000)
                              LBNE _label394bis
                              ELSE
99D0  2602                    BNE _label394bis
                              ENDIF
                              IF (((128+_label394bf-(*+2))|(127-_label394bf+(*+2)))&0x8000)
                              JMP _label394bf
                              ELSE
99D2  208E                    BRA _label394bf
                              ENDIF
99D4                  _label394bis
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:357
                              IF (((128+_label410prepa-(*+2))|(127-_label410prepa+(*+2)))&0x8000)
                              JMP _label410prepa
                              ELSE
99D4  2015                    BRA _label410prepa
                              ENDIF
99D6                  _label410prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
99D6  CC0001                  LDD #$0001
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
99D9  FDC273                  STD _TRtmp411
99DC  39                      RTS
99DD                  _label410prepto
99DD  FCC140                  LDD _render_view_v2_one_pix_height
99E0  FDC275                  STD _TRtmp412
99E3  39                      RTS
99E4                  _label410prepstep
99E4  CC0001                  LDD #$0001
99E7  FDC277                  STD _TRtmp413
99EA  39                      RTS
99EB                  _label410prepa
                              IF (((128+_label410prepfrom-(*+2))|(127-_label410prepfrom+(*+2)))&0x8000)
                              JSR _label410prepfrom
                              ELSE
99EB  8DE9                    BSR _label410prepfrom
                              ENDIF
                              IF (((128+_label410prepto-(*+2))|(127-_label410prepto+(*+2)))&0x8000)
                              JSR _label410prepto
                              ELSE
99ED  8DEE                    BSR _label410prepto
                              ENDIF
                              IF (((128+_label410prepstep-(*+2))|(127-_label410prepstep+(*+2)))&0x8000)
                              JSR _label410prepstep
                              ELSE
99EF  8DF3                    BSR _label410prepstep
                              ENDIF
99F1  FCC273                  LDD _TRtmp411
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
99F4  DDF7                    STD <(_render_view_v2_y)
99F6                  _label410bf
99F6  5F                      CLRB
99F7  BEC277                  LDX _TRtmp413
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
99FA  2F01                    BLE _label415
99FC  5A                      DECB
99FD                  _label415
99FD  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label410forw-(*+2))|(127-_label410forw+(*+2)))&0x8000)
                              LBNE _label410forw
                              ELSE
9A00  2602                    BNE _label410forw
                              ENDIF
                              IF (((128+_label410back-(*+2))|(127-_label410back+(*+2)))&0x8000)
                              JMP _label410back
                              ELSE
9A02  201A                    BRA _label410back
                              ENDIF
9A04                  _label410forw
9A04  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A05  9EF7                    LDX <(_render_view_v2_y)
9A07  BCC273                  CMPX _TRtmp411
9A0A  2C01                    BGE _label417
9A0C  5A                      DECB
9A0D                  _label417
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
9A0D  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label410bis-(*+2))|(127-_label410bis+(*+2)))&0x8000)
                              LBNE _label410bis
                              ELSE
9A0E  2659                    BNE _label410bis
                              ENDIF
9A10  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A11  9EF7                    LDX <(_render_view_v2_y)
9A13  BCC275                  CMPX _TRtmp412
9A16  2F01                    BLE _label419
9A18  5A                      DECB
9A19                  _label419
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
9A19  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label410bis-(*+2))|(127-_label410bis+(*+2)))&0x8000)
                              LBNE _label410bis
                              ELSE
9A1A  264D                    BNE _label410bis
                              ENDIF
                              IF (((128+_label410cont-(*+2))|(127-_label410cont+(*+2)))&0x8000)
                              JMP _label410cont
                              ELSE
9A1C  2018                    BRA _label410cont
                              ENDIF
9A1E                  _label410back
9A1E  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A1F  9EF7                    LDX <(_render_view_v2_y)
9A21  BCC273                  CMPX _TRtmp411
9A24  2F01                    BLE _label421
9A26  5A                      DECB
9A27                  _label421
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
9A27  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label410bis-(*+2))|(127-_label410bis+(*+2)))&0x8000)
                              LBNE _label410bis
                              ELSE
9A28  263F                    BNE _label410bis
                              ENDIF
9A2A  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A2B  9EF7                    LDX <(_render_view_v2_y)
9A2D  BCC275                  CMPX _TRtmp412
9A30  2C01                    BGE _label423
9A32  5A                      DECB
9A33                  _label423
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
9A33  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label410bis-(*+2))|(127-_label410bis+(*+2)))&0x8000)
                              LBNE _label410bis
                              ELSE
9A34  2633                    BNE _label410bis
                              ENDIF
9A36                  _label410cont
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:117
                              ; L:358
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_segment_one_pix_floor
9A36  CC0000                  LDD #$0000
9A37                  _render_view_v2_segment_one_pix_floor equ *-2
9A39  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
9A3C  E79FC142                STB [_render_view_v2_bitmap_address]
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:4
                              ; L:359
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$28
9A40  CC0028                  LDD #$0028
9A43  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
9A46  F3C142                  ADDD _render_view_v2_bitmap_address
9A49  FDC142                  STD _render_view_v2_bitmap_address
                              ; V _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp347
                              ; VSP
                              ; P:8
                              ; L:360
                              IF (((128+_label410prepfrom-(*+2))|(127-_label410prepfrom+(*+2)))&0x8000)
                              JSR _label410prepfrom
                              ELSE
9A4C  8D88                    BSR _label410prepfrom
                              ENDIF
                              IF (((128+_label410prepto-(*+2))|(127-_label410prepto+(*+2)))&0x8000)
                              JSR _label410prepto
                              ELSE
9A4E  8D8D                    BSR _label410prepto
                              ENDIF
                              IF (((128+_label410prepstep-(*+2))|(127-_label410prepstep+(*+2)))&0x8000)
                              JSR _label410prepstep
                              ELSE
9A50  8D92                    BSR _label410prepstep
                              ENDIF
9A52  FCC277                  LDD _TRtmp413
                      ; peephole(12): direct-page1
                      ;       ADDD _render_view_v2_y
9A55  D3F7                    ADDD <(_render_view_v2_y)
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
9A57  DDF7                    STD <(_render_view_v2_y)
9A59  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A5A  9EF7                    LDX <(_render_view_v2_y)
9A5C  BCC273                  CMPX _TRtmp411
9A5F  2601                    BNE _label425
9A61  5A                      DECB
9A62                  _label425
9A62  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label410bis-(*+2))|(127-_label410bis+(*+2)))&0x8000)
                              LBNE _label410bis
                              ELSE
9A65  2602                    BNE _label410bis
                              ENDIF
                              IF (((128+_label410bf-(*+2))|(127-_label410bf+(*+2)))&0x8000)
                              JMP _label410bf
                              ELSE
9A67  208D                    BRA _label410bf
                              ENDIF
9A69                  _label410bis
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:361
                              IF (((128+_label426prepa-(*+2))|(127-_label426prepa+(*+2)))&0x8000)
                              JMP _label426prepa
                              ELSE
9A69  2015                    BRA _label426prepa
                              ENDIF
9A6B                  _label426prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
9A6B  CC0001                  LDD #$0001
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp312
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp312
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9A6E  FDC279                  STD _TRtmp427
9A71  39                      RTS
9A72                  _label426prepto
9A72  FCC13E                  LDD _render_view_v2_sky_height
9A75  FDC27B                  STD _TRtmp428
9A78  39                      RTS
9A79                  _label426prepstep
9A79  CC0001                  LDD #$0001
9A7C  FDC27D                  STD _TRtmp429
9A7F  39                      RTS
9A80                  _label426prepa
                              IF (((128+_label426prepfrom-(*+2))|(127-_label426prepfrom+(*+2)))&0x8000)
                              JSR _label426prepfrom
                              ELSE
9A80  8DE9                    BSR _label426prepfrom
                              ENDIF
                              IF (((128+_label426prepto-(*+2))|(127-_label426prepto+(*+2)))&0x8000)
                              JSR _label426prepto
                              ELSE
9A82  8DEE                    BSR _label426prepto
                              ENDIF
                              IF (((128+_label426prepstep-(*+2))|(127-_label426prepstep+(*+2)))&0x8000)
                              JSR _label426prepstep
                              ELSE
9A84  8DF3                    BSR _label426prepstep
                              ENDIF
9A86  FCC279                  LDD _TRtmp427
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
9A89  DDF7                    STD <(_render_view_v2_y)
9A8B                  _label426bf
9A8B  5F                      CLRB
9A8C  BEC27D                  LDX _TRtmp429
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9A8F  2F01                    BLE _label431
9A91  5A                      DECB
9A92                  _label431
9A92  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label426forw-(*+2))|(127-_label426forw+(*+2)))&0x8000)
                              LBNE _label426forw
                              ELSE
9A95  2602                    BNE _label426forw
                              ENDIF
                              IF (((128+_label426back-(*+2))|(127-_label426back+(*+2)))&0x8000)
                              JMP _label426back
                              ELSE
9A97  201A                    BRA _label426back
                              ENDIF
9A99                  _label426forw
9A99  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9A9A  9EF7                    LDX <(_render_view_v2_y)
9A9C  BCC279                  CMPX _TRtmp427
9A9F  2C01                    BGE _label433
9AA1  5A                      DECB
9AA2                  _label433
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp335
9AA2  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp335
                              IF (((128+_label426bis-(*+2))|(127-_label426bis+(*+2)))&0x8000)
                              LBNE _label426bis
                              ELSE
9AA3  2659                    BNE _label426bis
                              ENDIF
9AA5  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9AA6  9EF7                    LDX <(_render_view_v2_y)
9AA8  BCC27B                  CMPX _TRtmp428
9AAB  2F01                    BLE _label435
9AAD  5A                      DECB
9AAE                  _label435
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp338
9AAE  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp338
                              IF (((128+_label426bis-(*+2))|(127-_label426bis+(*+2)))&0x8000)
                              LBNE _label426bis
                              ELSE
9AAF  264D                    BNE _label426bis
                              ENDIF
                              IF (((128+_label426cont-(*+2))|(127-_label426cont+(*+2)))&0x8000)
                              JMP _label426cont
                              ELSE
9AB1  2018                    BRA _label426cont
                              ENDIF
9AB3                  _label426back
9AB3  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9AB4  9EF7                    LDX <(_render_view_v2_y)
9AB6  BCC279                  CMPX _TRtmp427
9AB9  2F01                    BLE _label437
9ABB  5A                      DECB
9ABC                  _label437
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp341
9ABC  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp341
                              IF (((128+_label426bis-(*+2))|(127-_label426bis+(*+2)))&0x8000)
                              LBNE _label426bis
                              ELSE
9ABD  263F                    BNE _label426bis
                              ENDIF
9ABF  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9AC0  9EF7                    LDX <(_render_view_v2_y)
9AC2  BCC27B                  CMPX _TRtmp428
9AC5  2C01                    BGE _label439
9AC7  5A                      DECB
9AC8                  _label439
                      ; peephole(6): unread1
                      ;       STB _render_view_v2_Ttmp344
9AC8  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp344
                              IF (((128+_label426bis-(*+2))|(127-_label426bis+(*+2)))&0x8000)
                              LBNE _label426bis
                              ELSE
9AC9  2633                    BNE _label426bis
                              ENDIF
9ACB                  _label426cont
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; Q _render_view_v2_Ttmp326
                              ; Q _render_view_v2_Ttmp332
                              ; Q _render_view_v2_Ttmp335
                              ; Q _render_view_v2_Ttmp338
                              ; Q _render_view_v2_Ttmp341
                              ; Q _render_view_v2_Ttmp344
                              ; VSP
                              ; P:117
                              ; L:362
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v2_segment_floor
9ACB  CC0000                  LDD #$0000
9ACC                  _render_view_v2_segment_floor equ *-2
9ACE  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
9AD1  E79FC142                STB [_render_view_v2_bitmap_address]
                              ; Q _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; VSP
                              ; P:4
                              ; L:363
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$28
9AD5  CC0028                  LDD #$0028
9AD8  F7C221                  STB _render_view_v2_Ttmp314
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp314
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
                      ; peephole(6): unread1
                      ;       STD _render_view_v2_Ttmp347
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v2_Ttmp347
9ADB  F3C142                  ADDD _render_view_v2_bitmap_address
9ADE  FDC142                  STD _render_view_v2_bitmap_address
                              ; V _render_view_v2_Ttmp314
                              ; Q _render_view_v2_Ttmp315
                              ; V _render_view_v2_Ttmp347
                              ; VSP
                              ; P:8
                              ; L:364
                              IF (((128+_label426prepfrom-(*+2))|(127-_label426prepfrom+(*+2)))&0x8000)
                              JSR _label426prepfrom
                              ELSE
9AE1  8D88                    BSR _label426prepfrom
                              ENDIF
                              IF (((128+_label426prepto-(*+2))|(127-_label426prepto+(*+2)))&0x8000)
                              JSR _label426prepto
                              ELSE
9AE3  8D8D                    BSR _label426prepto
                              ENDIF
                              IF (((128+_label426prepstep-(*+2))|(127-_label426prepstep+(*+2)))&0x8000)
                              JSR _label426prepstep
                              ELSE
9AE5  8D92                    BSR _label426prepstep
                              ENDIF
9AE7  FCC27D                  LDD _TRtmp429
                      ; peephole(12): direct-page1
                      ;       ADDD _render_view_v2_y
9AEA  D3F7                    ADDD <(_render_view_v2_y)
                      ; peephole(12): direct-page1
                      ;       STD _render_view_v2_y
9AEC  DDF7                    STD <(_render_view_v2_y)
9AEE  5F                      CLRB
                      ; peephole(12): direct-page1
                      ;       LDX _render_view_v2_y
9AEF  9EF7                    LDX <(_render_view_v2_y)
9AF1  BCC279                  CMPX _TRtmp427
9AF4  2601                    BNE _label441
9AF6  5A                      DECB
9AF7                  _label441
9AF7  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label426bis-(*+2))|(127-_label426bis+(*+2)))&0x8000)
                              LBNE _label426bis
                              ELSE
9AFA  2602                    BNE _label426bis
                              ENDIF
                              IF (((128+_label426bf-(*+2))|(127-_label426bf+(*+2)))&0x8000)
                              JMP _label426bf
                              ELSE
9AFC  208D                    BRA _label426bf
                              ENDIF
9AFE                  _label426bis
                              ; V _render_view_v2_Ttmp312
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:365
                              IF (((128+_label323prepfrom-(*+2))|(127-_label323prepfrom+(*+2)))&0x8000)
9AFE  BD9624                  JSR _label323prepfrom
                              ELSE
                              BSR _label323prepfrom
                              ENDIF
                              IF (((128+_label323prepto-(*+2))|(127-_label323prepto+(*+2)))&0x8000)
9B01  BD962A                  JSR _label323prepto
                              ELSE
                              BSR _label323prepto
                              ENDIF
                              IF (((128+_label323prepstep-(*+2))|(127-_label323prepstep+(*+2)))&0x8000)
9B04  BD963E                  JSR _label323prepstep
                              ELSE
                              BSR _label323prepstep
                              ENDIF
9B07  FCC25F                  LDD _TRtmp328
9B0A  F3C13C                  ADDD _render_view_v2_x
9B0D  FDC13C                  STD _render_view_v2_x
9B10  5F                      CLRB
9B11  BEC13C                  LDX _render_view_v2_x
9B14  BCC25B                  CMPX _TRtmp324
9B17  2601                    BNE _label443
9B19  5A                      DECB
9B1A                  _label443
9B1A  F7C223                  STB _render_view_v2_Ttmp332
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v2_Ttmp332
                              IF (((128+_label323bis-(*+2))|(127-_label323bis+(*+2)))&0x8000)
                              LBNE _label323bis
                              ELSE
9B1D  2603                    BNE _label323bis
                              ENDIF
                              IF (((128+_label323bf-(*+2))|(127-_label323bf+(*+2)))&0x8000)
9B1F  7E9651                  JMP _label323bf
                              ELSE
                              BRA _label323bf
                              ENDIF
9B22                  _label323bis
                              ; V _render_view_v2_Ttmp311
                              ; Q _render_view_v2_Ttmp321
                              ; V _render_view_v2_Ttmp327
                              ; Q _render_view_v2_Ttmp332
                              ; VSP
                              ; P:37
                              ; L:366
                              ; VSP
                              ; P:0
                              ; L:367
9B22  39                      RTS
9B23                  render_view_v2after
                              ; VSP
                              ; P:2
                              ; L:368
                              ; VSP
                              ; P:0
                              ; L:369
                              IF (((128+render_view_v3after-(*+2))|(127-render_view_v3after+(*+2)))&0x8000)
9B23  7EA017                  JMP render_view_v3after
                              ELSE
                              BRA render_view_v3after
                              ENDIF
9B26                  PROCrender_view_v3
                              ; VSP
                              ; P:6
                              ; L:370
                              ; VSP
                              ; P:0
                              ; L:371
                              ; VSP
                              ; P:0
                              ; L:372
                              ; VSP
                              ; P:0
                              ; L:373
                              ; VSP
                              ; P:0
                              ; L:374
                              ; VSP
                              ; P:0
                              ; L:375
                              ; VSP
                              ; P:0
                              ; L:376
                              ; VSP
                              ; P:0
                              ; L:377
                              ; VSP
                              ; P:0
                              ; L:378
                      ; peephole(4): r320 (LDA,LDB)->(LDD)
                      ;       LDA #$01
                      ;       LDB #$c8
9B26  CC01C8                  LDD #(($01)&255)*256+(($c8)&255)
9B29  F7C230                  STB _render_view_v3_Ttmp444
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp444
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9B2C  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9B2E  BD8E82                  JSR CPUMATHDIV28BIT
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9B31  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9B33  4F                      CLRA
9B34  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9B37  FD9D2C                  STD _render_view_v3_middle
                              ; V _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; VSP
                              ; P:13
                              ; L:379
9B3A  C606                    LDB #$06
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp449
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp450
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp450
9B3C  58                      LSLB
9B3D  58                      LSLB
9B3E  58                      LSLB
9B3F  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp450
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp450
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
9B40  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9B43  FD9B5F                  STD _render_view_v3_sky_hi
                              ; Q _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp450
                              ; VSP
                              ; P:15
                              ; L:380
9B46  C609                    LDB #$09
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp449
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp450
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp450
9B48  58                      LSLB
9B49  58                      LSLB
9B4A  58                      LSLB
9B4B  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp450
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp450
9B4C  F7C230                  STB _render_view_v3_Ttmp444
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp444
9B4F  F79B73                  STB _render_view_v3_floor_hi
                              ; Q _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp450
                              ; VSP
                              ; P:14
                              ; L:381
9B52  CCC156                  LDD #_render_view_v3_segment_sky
9B55  FDC226                  STD _render_view_v3_Ttmp451
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$06
9B58  CC0006                  LDD #$0006
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp449
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9B5B  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): inlined1
                      ;       ADDD _render_view_v3_sky_hi
9B5E  C30000                  ADDD #$0000
9B5F                  _render_view_v3_sky_hi equ *-2
9B61  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9B64  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9B66  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp452
                              ; VSP
                              ; P:14
                              ; L:382
9B6A  CCC158                  LDD #_render_view_v3_segment_floor
9B6D  FDC226                  STD _render_view_v3_Ttmp451
9B70  C609                    LDB #$09
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(7): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB _render_view_v3_floor_hi
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp450
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp450
                      ;       ADDB _render_view_v3_Ttmp449
                      ; peephole(12): inlined1
                      ;       ADDB _render_view_v3_floor_hi
9B72  CB00                    ADDB #1-1
9B73                  _render_view_v3_floor_hi equ *-1
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9B74  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9B76  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
9B78  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp450
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:13
                              ; L:383
                              ; VSP
                              ; P:0
                              ; L:384
9B7C  CCE7C3                  LDD #$e7c3
9B7F  FDC22A                  STD _render_view_v3_Ttmp453
9B82  E69FC22A                LDB [_render_view_v3_Ttmp453]
9B86  F7C230                  STB _render_view_v3_Ttmp444
9B89  C601                    LDB #$01
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9B8B  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9B8D  FAC230                  ORB _render_view_v3_Ttmp444
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9B90  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9B92  4F                      CLRA
9B93  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9B96  FD9C76                  STD _render_view_v3_ram_a
                              ; Q _render_view_v3_Ttmp444
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; V _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp455
                              ; VSP
                              ; P:14
                              ; L:385
9B99  CCE7C3                  LDD #$e7c3
9B9C  FDC22A                  STD _render_view_v3_Ttmp453
9B9F  E69FC22A                LDB [_render_view_v3_Ttmp453]
9BA3  F7C230                  STB _render_view_v3_Ttmp444
9BA6  C6FE                    LDB #$fe
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9BA8  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9BAA  F4C230                  ANDB _render_view_v3_Ttmp444
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9BAD  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
9BAF  F79C95                  STB _render_view_v3_ram_b
                              ; Q _render_view_v3_Ttmp444
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; V _render_view_v3_Ttmp453
                              ; VSP
                              ; P:11
                              ; L:386
9BB2  4F                      CLRA
9BB3  B7C230                  STA _render_view_v3_Ttmp444
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
9BB6  B7C179                  STA _render_view_v3_ram_s
                              ; V _render_view_v3_Ttmp444
                              ; VSP
                              ; P:4
                              ; L:387
                              ; VSP
                              ; P:0
                              ; L:388
                              IF (((128+_label457prepa-(*+2))|(127-_label457prepa+(*+2)))&0x8000)
                              JMP _label457prepa
                              ELSE
9BB9  2022                    BRA _label457prepa
                              ENDIF
9BBB                  _label457prepfrom
9BBB  4F                      CLRA
9BBC  B7C230                  STA _render_view_v3_Ttmp444
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _render_view_v3_Ttmp444
9BBF  5F                      CLRB
9BC0  FDC27F                  STD _TRtmp458
9BC3  39                      RTS
9BC4                  _label457prepto
9BC4  C680                    LDB #$80
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9BC6  D7F5                    STB <(_render_view_v3_Ttmp447)
9BC8  C601                    LDB #$01
9BCA  F7C231                  STB _render_view_v3_Ttmp448
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp447
9BCD  D6F5                    LDB <(_render_view_v3_Ttmp447)
9BCF  CBFF                    ADDB #$ff
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp455
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp455
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9BD1  4F                      CLRA
9BD2  FDC281                  STD _TRtmp459
9BD5  39                      RTS
9BD6                  _label457prepstep
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$02
9BD6  CC0002                  LDD #$0002
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp461
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp461
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9BD9  FDC283                  STD _TRtmp462
9BDC  39                      RTS
9BDD                  _label457prepa
                              IF (((128+_label457prepfrom-(*+2))|(127-_label457prepfrom+(*+2)))&0x8000)
                              JSR _label457prepfrom
                              ELSE
9BDD  8DDC                    BSR _label457prepfrom
                              ENDIF
                              IF (((128+_label457prepto-(*+2))|(127-_label457prepto+(*+2)))&0x8000)
                              JSR _label457prepto
                              ELSE
9BDF  8DE3                    BSR _label457prepto
                              ENDIF
                              IF (((128+_label457prepstep-(*+2))|(127-_label457prepstep+(*+2)))&0x8000)
                              JSR _label457prepstep
                              ELSE
9BE1  8DF3                    BSR _label457prepstep
                              ENDIF
9BE3  FCC27F                  LDD _TRtmp458
9BE6  FDC150                  STD _render_view_v3_x
9BE9                  _label457bf
9BE9  5F                      CLRB
9BEA  BEC283                  LDX _TRtmp462
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
9BED  2F01                    BLE _label467
9BEF  5A                      DECB
9BF0                  _label467
9BF0  F7C232                  STB _render_view_v3_Ttmp466
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp466
                              IF (((128+_label457forw-(*+2))|(127-_label457forw+(*+2)))&0x8000)
                              LBNE _label457forw
                              ELSE
9BF3  2602                    BNE _label457forw
                              ENDIF
                              IF (((128+_label457back-(*+2))|(127-_label457back+(*+2)))&0x8000)
                              JMP _label457back
                              ELSE
9BF5  2020                    BRA _label457back
                              ENDIF
9BF7                  _label457forw
9BF7  5F                      CLRB
9BF8  BEC150                  LDX _render_view_v3_x
9BFB  BCC27F                  CMPX _TRtmp458
9BFE  2C01                    BGE _label470
9C00  5A                      DECB
9C01                  _label470
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp469
9C01  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp469
                              IF (((128+_label457bis-(*+2))|(127-_label457bis+(*+2)))&0x8000)
9C02  10260410                LBNE _label457bis
                              ELSE
                              BNE _label457bis
                              ENDIF
9C06  5F                      CLRB
9C07  BEC150                  LDX _render_view_v3_x
9C0A  BCC281                  CMPX _TRtmp459
9C0D  2F01                    BLE _label473
9C0F  5A                      DECB
9C10                  _label473
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp472
9C10  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp472
                              IF (((128+_label457bis-(*+2))|(127-_label457bis+(*+2)))&0x8000)
9C11  10260401                LBNE _label457bis
                              ELSE
                              BNE _label457bis
                              ENDIF
                              IF (((128+_label457cont-(*+2))|(127-_label457cont+(*+2)))&0x8000)
                              JMP _label457cont
                              ELSE
9C15  201E                    BRA _label457cont
                              ENDIF
9C17                  _label457back
9C17  5F                      CLRB
9C18  BEC150                  LDX _render_view_v3_x
9C1B  BCC27F                  CMPX _TRtmp458
9C1E  2F01                    BLE _label476
9C20  5A                      DECB
9C21                  _label476
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp475
9C21  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp475
                              IF (((128+_label457bis-(*+2))|(127-_label457bis+(*+2)))&0x8000)
9C22  102603F0                LBNE _label457bis
                              ELSE
                              BNE _label457bis
                              ENDIF
9C26  5F                      CLRB
9C27  BEC150                  LDX _render_view_v3_x
9C2A  BCC281                  CMPX _TRtmp459
9C2D  2C01                    BGE _label479
9C2F  5A                      DECB
9C30                  _label479
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp478
9C30  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp478
                              IF (((128+_label457bis-(*+2))|(127-_label457bis+(*+2)))&0x8000)
9C31  102603E1                LBNE _label457bis
                              ELSE
                              BNE _label457bis
                              ENDIF
9C35                  _label457cont
                              ; Q _render_view_v3_Ttmp445
                              ; V _render_view_v3_Ttmp447
                              ; V _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp460
                              ; Q _render_view_v3_Ttmp463
                              ; Q _render_view_v3_Ttmp464
                              ; Q _render_view_v3_Ttmp466
                              ; Q _render_view_v3_Ttmp469
                              ; Q _render_view_v3_Ttmp472
                              ; Q _render_view_v3_Ttmp475
                              ; Q _render_view_v3_Ttmp478
                              ; VSP
                              ; P:128
                              ; L:389
9C35  CCC146                  LDD #_render_view_v3_vblast_target
9C38  FDC226                  STD _render_view_v3_Ttmp451
9C3B  CC4008                  LDD #$4008
9C3E  FDC22A                  STD _render_view_v3_Ttmp453
9C41  FCC150                  LDD _render_view_v3_x
9C44  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9C47  8E0002                  LDX #$02
9C4A  BD8A71                  JSR CPUMATHDIV2CONST16BIT_SIGNED
9C4D  FDC224                  STD _render_view_v3_Ttmp446
9C50  FCC22A                  LDD _render_view_v3_Ttmp453
9C53  FDC228                  STD _render_view_v3_Ttmp452
9C56  FCC224                  LDD _render_view_v3_Ttmp446
9C59  F3C228                  ADDD _render_view_v3_Ttmp452
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp480
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp480
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp481
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp481
9C5C  ED9FC226                STD [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; V _render_view_v3_Ttmp452
                              ; V _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp480
                              ; Q _render_view_v3_Ttmp481
                              ; VSP
                              ; P:19
                              ; L:390
                              ; VSP
                              ; P:0
                              ; L:391
9C60  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _render_view_v3_Ttmp445
9C61  97F3                    STA <(_render_view_v3_Ttmp445)
9C63  5F                      CLRB
9C64  B6C179                  LDA _render_view_v3_ram_s
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$00
9C67  2601                    BNE _label483
9C69  5A                      DECB
9C6A                  _label483
9C6A  F7C232                  STB _render_view_v3_Ttmp466
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp466
                              IF (((128+_label484e0-(*+2))|(127-_label484e0+(*+2)))&0x8000)
                              LBEQ _label484e0
                              ELSE
9C6D  271A                    BEQ _label484e0
                              ENDIF
9C6F                  _label484t
                              ; V _render_view_v3_Ttmp445
                              ; VSP
                              ; P:16
                              ; L:392
9C6F  CCE7C3                  LDD #$e7c3
9C72  FDC22A                  STD _render_view_v3_Ttmp453
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v3_ram_a
9C75  CC0000                  LDD #$0000
9C76                  _render_view_v3_ram_a equ *-2
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9C78  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9C7A  E79FC22A                STB [_render_view_v3_Ttmp453]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; V _render_view_v3_Ttmp453
                              ; VSP
                              ; P:6
                              ; L:393
9C7E  C601                    LDB #$01
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9C80  D7F3                    STB <(_render_view_v3_Ttmp445)
9C82  C601                    LDB #$01
9C84  F7C179                  STB _render_view_v3_ram_s
                              ; V _render_view_v3_Ttmp445
                              ; VSP
                              ; P:4
                              ; L:394
                              IF (((128+_label484f-(*+2))|(127-_label484f+(*+2)))&0x8000)
                              JMP _label484f
                              ELSE
9C87  2019                    BRA _label484f
                              ENDIF
9C89                  _label484e0
9C89  F6C232                  LDB _render_view_v3_Ttmp466
                              IF (((128+_label484f-(*+2))|(127-_label484f+(*+2)))&0x8000)
                              LBNE _label484f
                              ELSE
9C8C  2614                    BNE _label484f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:395
9C8E  CCE7C3                  LDD #$e7c3
9C91  FDC22A                  STD _render_view_v3_Ttmp453
                      ; peephole(12): inlined1
                      ;       LDB _render_view_v3_ram_b
9C94  C600                    LDB #1-1
9C95                  _render_view_v3_ram_b equ *-1
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9C96  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9C98  E79FC22A                STB [_render_view_v3_Ttmp453]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; V _render_view_v3_Ttmp453
                              ; VSP
                              ; P:6
                              ; L:396
9C9C  4F                      CLRA
                      ; peephole(12): direct-page1
                      ;       STA _render_view_v3_Ttmp445
9C9D  97F3                    STA <(_render_view_v3_Ttmp445)
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
9C9F  B7C179                  STA _render_view_v3_ram_s
                              ; V _render_view_v3_Ttmp445
                              ; VSP
                              ; P:4
                              ; L:397
9CA2                  _label484f
9CA2                  _label484e1
                              ; Q _render_view_v3_Ttmp466
                              ; VSP
                              ; P:2
                              ; L:398
                              ; VSP
                              ; P:0
                              ; L:399
9CA2  FCC150                  LDD _render_view_v3_x
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9CA5  D7F5                    STB <(_render_view_v3_Ttmp447)
9CA7  8EC000                  LDX #_line_height_array
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp447
9CAA  D6F5                    LDB <(_render_view_v3_Ttmp447)
9CAC  3A                      ABX
9CAD  E684                    LDB ,X
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9CAF  D7F3                    STB <(_render_view_v3_Ttmp445)
                              ; move from array to = _render_view_v3_Ttmp445
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9CB1  4F                      CLRA
9CB2  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9CB5  FDC148                  STD _render_view_v3_line_height1
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp460
                              ; Q _render_view_v3_Ttmp463
                              ; VSP
                              ; P:12
                              ; L:400
9CB8  FCC150                  LDD _render_view_v3_x
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9CBB  D7F5                    STB <(_render_view_v3_Ttmp447)
9CBD  8EC080                  LDX #_color_array
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp447
9CC0  D6F5                    LDB <(_render_view_v3_Ttmp447)
9CC2  3A                      ABX
9CC3  E684                    LDB ,X
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9CC5  D7F3                    STB <(_render_view_v3_Ttmp445)
                              ; move from array to = _render_view_v3_Ttmp445
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp460
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp460
9CC7  58                      LSLB
9CC8  58                      LSLB
9CC9  58                      LSLB
9CCA  58                      LSLB
                      ; peephole(6): unread1
                      ;       STB _render_view_v3_Ttmp460
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp460
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9CCB  4F                      CLRA
9CCC  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9CCF  FDC14C                  STD _render_view_v3_color1
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp460
                              ; Q _render_view_v3_Ttmp463
                              ; Q _render_view_v3_Ttmp464
                              ; VSP
                              ; P:20
                              ; L:401
9CD2  C601                    LDB #$01
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9CD4  D7F3                    STB <(_render_view_v3_Ttmp445)
9CD6  CC0001                  LDD #$0001
9CD9  F3C150                  ADDD _render_view_v3_x
9CDC  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9CDF  F7C231                  STB _render_view_v3_Ttmp448
9CE2  8EC000                  LDX #_line_height_array
9CE5  F6C231                  LDB _render_view_v3_Ttmp448
9CE8  3A                      ABX
9CE9  E684                    LDB ,X
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9CEB  D7F5                    STB <(_render_view_v3_Ttmp447)
                              ; move from array to = _render_view_v3_Ttmp447
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9CED  4F                      CLRA
9CEE  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
9CF1  FDC14A                  STD _render_view_v3_line_height2
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp452
                              ; Q _render_view_v3_Ttmp460
                              ; Q _render_view_v3_Ttmp463
                              ; Q _render_view_v3_Ttmp464
                              ; VSP
                              ; P:17
                              ; L:402
9CF4  C601                    LDB #$01
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9CF6  D7F3                    STB <(_render_view_v3_Ttmp445)
9CF8  CC0001                  LDD #$0001
9CFB  F3C150                  ADDD _render_view_v3_x
9CFE  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9D01  F7C231                  STB _render_view_v3_Ttmp448
9D04  8EC080                  LDX #_color_array
9D07  F6C231                  LDB _render_view_v3_Ttmp448
9D0A  3A                      ABX
9D0B  E684                    LDB ,X
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9D0D  D7F5                    STB <(_render_view_v3_Ttmp447)
                              ; move from array to = _render_view_v3_Ttmp447
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9D0F  4F                      CLRA
9D10  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
9D13  FDC14E                  STD _render_view_v3_color2
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp452
                              ; Q _render_view_v3_Ttmp460
                              ; Q _render_view_v3_Ttmp463
                              ; Q _render_view_v3_Ttmp464
                              ; VSP
                              ; P:17
                              ; L:403
                              ; VSP
                              ; P:0
                              ; L:404
9D16  5F                      CLRB
9D17  BEC148                  LDX _render_view_v3_line_height1
9D1A  BCC14A                  CMPX _render_view_v3_line_height2
9D1D  2F01                    BLE _label494
9D1F  5A                      DECB
9D20                  _label494
9D20  F7C232                  STB _render_view_v3_Ttmp466
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp466
                              IF (((128+_label495e0-(*+2))|(127-_label495e0+(*+2)))&0x8000)
                              LBEQ _label495e0
                              ELSE
9D23  2770                    BEQ _label495e0
                              ENDIF
9D25                  _label495t
                              ; VSP
                              ; P:14
                              ; L:405
9D25  CCC152                  LDD #_render_view_v3_sky_height
9D28  FDC226                  STD _render_view_v3_Ttmp451
                      ; peephole(12): inlined1
                      ;       LDD _render_view_v3_middle
9D2B  CC0000                  LDD #$0000
9D2C                  _render_view_v3_middle equ *-2
9D2E  B3C148                  SUBD _render_view_v3_line_height1
9D31  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9D34  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9D36  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:9
                              ; L:406
9D3A  CCC154                  LDD #_render_view_v3_one_pix_height
9D3D  FDC226                  STD _render_view_v3_Ttmp451
9D40  FCC148                  LDD _render_view_v3_line_height1
9D43  B3C14A                  SUBD _render_view_v3_line_height2
9D46  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9D49  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9D4B  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:9
                              ; L:407
9D4F  CCC177                  LDD #_render_view_v3_two_pix_height
9D52  FDC226                  STD _render_view_v3_Ttmp451
9D55  FCC14A                  LDD _render_view_v3_line_height2
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9D58  58                      LSLB
9D59  49                      ROLA
9D5A  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9D5D  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9D5F  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:12
                              ; L:408
9D63  CCC15A                  LDD #_render_view_v3_segment_one_pix_sky
9D66  FDC226                  STD _render_view_v3_Ttmp451
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$06
9D69  CC0006                  LDD #$0006
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp449
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9D6C  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9D6F  F3C14C                  ADDD _render_view_v3_color1
9D72  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9D75  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
9D77  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp452
                              ; VSP
                              ; P:14
                              ; L:409
9D7B  CCC15C                  LDD #_render_view_v3_segment_one_pix_floor
9D7E  FDC226                  STD _render_view_v3_Ttmp451
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$09
9D81  CC0009                  LDD #$0009
                      ; peephole(9): unread1
                      ;       STB _render_view_v3_Ttmp449
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp449
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
9D84  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9D87  F3C14C                  ADDD _render_view_v3_color1
9D8A  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9D8D  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
9D8F  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp449
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp452
                              ; VSP
                              ; P:14
                              ; L:410
                              IF (((128+_label495f-(*+2))|(127-_label495f+(*+2)))&0x8000)
                              JMP _label495f
                              ELSE
9D93  2074                    BRA _label495f
                              ENDIF
9D95                  _label495e0
9D95  F6C232                  LDB _render_view_v3_Ttmp466
                              IF (((128+_label495f-(*+2))|(127-_label495f+(*+2)))&0x8000)
                              LBNE _label495f
                              ELSE
9D98  266F                    BNE _label495f
                              ENDIF
                              ; VSP
                              ; P:12
                              ; L:411
9D9A  CCC152                  LDD #_render_view_v3_sky_height
9D9D  FDC226                  STD _render_view_v3_Ttmp451
9DA0  FC9D2C                  LDD _render_view_v3_middle
9DA3  B3C14A                  SUBD _render_view_v3_line_height2
9DA6  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9DA9  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9DAB  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:9
                              ; L:412
9DAF  CCC154                  LDD #_render_view_v3_one_pix_height
9DB2  FDC226                  STD _render_view_v3_Ttmp451
9DB5  FCC14A                  LDD _render_view_v3_line_height2
9DB8  B3C148                  SUBD _render_view_v3_line_height1
9DBB  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9DBE  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9DC0  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:9
                              ; L:413
9DC4  CCC177                  LDD #_render_view_v3_two_pix_height
9DC7  FDC226                  STD _render_view_v3_Ttmp451
9DCA  FCC148                  LDD _render_view_v3_line_height1
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
9DCD  58                      LSLB
9DCE  49                      ROLA
9DCF  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9DD2  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9DD4  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:12
                              ; L:414
9DD8  CCC15A                  LDD #_render_view_v3_segment_one_pix_sky
9DDB  FDC226                  STD _render_view_v3_Ttmp451
9DDE  FCC14E                  LDD _render_view_v3_color2
9DE1  F39B5F                  ADDD _render_view_v3_sky_hi
9DE4  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9DE7  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9DE9  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; VSP
                              ; P:9
                              ; L:415
9DED  CCC15C                  LDD #_render_view_v3_segment_one_pix_floor
9DF0  FDC226                  STD _render_view_v3_Ttmp451
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
9DF3  4F                      CLRA
9DF4  F69B73                  LDB _render_view_v3_floor_hi
9DF7  FDC224                  STD _render_view_v3_Ttmp446
9DFA  FCC14E                  LDD _render_view_v3_color2
9DFD  F3C224                  ADDD _render_view_v3_Ttmp446
9E00  FDC228                  STD _render_view_v3_Ttmp452
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp452
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9E03  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp447
9E05  E79FC226                STB [_render_view_v3_Ttmp451]
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp452
                              ; VSP
                              ; P:12
                              ; L:416
9E09                  _label495f
9E09                  _label495e1
                              ; Q _render_view_v3_Ttmp466
                              ; VSP
                              ; P:2
                              ; L:417
                              ; VSP
                              ; P:0
                              ; L:418
9E09  FCC14E                  LDD _render_view_v3_color2
9E0C  F3C14C                  ADDD _render_view_v3_color1
9E0F  FDC224                  STD _render_view_v3_Ttmp446
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp446
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9E12  D7F3                    STB <(_render_view_v3_Ttmp445)
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp445
9E14  F7C178                  STB _render_view_v3_segment_two_pix
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp446
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; VSP
                              ; P:7
                              ; L:419
                              ; VSP
                              ; P:0
                              ; L:420
9E17  CCC146                  LDD #_render_view_v3_vblast_target
9E1A  FDC226                  STD _render_view_v3_Ttmp451
9E1D  EC9FC226                LDD [_render_view_v3_Ttmp451]
9E21  FDC22A                  STD _render_view_v3_Ttmp453
9E24  CCC152                  LDD #_render_view_v3_sky_height
9E27  FDC22C                  STD _render_view_v3_Ttmp496
9E2A  E69FC22C                LDB [_render_view_v3_Ttmp496]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9E2E  D7F3                    STB <(_render_view_v3_Ttmp445)
9E30  CCC156                  LDD #_render_view_v3_segment_sky
9E33  FDC22E                  STD _render_view_v3_Ttmp497
9E36  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9E3A  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9E3C  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9E3E  D6F3                    LDB <(_render_view_v3_Ttmp445)
9E40  BEC22A                  LDX _render_view_v3_Ttmp453
                              IF (((128+_label498-(*+2))|(127-_label498+(*+2)))&0x8000)
                              JMP _label498
                              ELSE
9E43  2004                    BRA _label498
                              ENDIF
9E45                  _label498indirect
9E45  6E9FAD3E                JMP [_vblast_address]
9E49                  _label498
                              IF (((128+_label498indirect-(*+2))|(127-_label498indirect+(*+2)))&0x8000)
                              JSR _label498indirect
                              ELSE
9E49  8DFA                    BSR _label498indirect
                              ENDIF
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; VSP
                              ; P:28
                              ; L:421
9E4B  CCC146                  LDD #_render_view_v3_vblast_target
9E4E  FDC226                  STD _render_view_v3_Ttmp451
9E51  CCC146                  LDD #_render_view_v3_vblast_target
9E54  FDC22C                  STD _render_view_v3_Ttmp496
9E57  EC9FC22C                LDD [_render_view_v3_Ttmp496]
9E5B  FDC22A                  STD _render_view_v3_Ttmp453
9E5E  C628                    LDB #$28
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9E60  D7F3                    STB <(_render_view_v3_Ttmp445)
9E62  CCC152                  LDD #_render_view_v3_sky_height
9E65  FDC22E                  STD _render_view_v3_Ttmp497
9E68  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9E6C  D7F5                    STB <(_render_view_v3_Ttmp447)
                              IF (((128+cpu_math_mul_8bit_to_16bit_after-(*+2))|(127-cpu_math_mul_8bit_to_16bit_after+(*+2)))&0x8000)
                              JMP cpu_math_mul_8bit_to_16bit_after
                              ELSE
9E6E  2019                    BRA cpu_math_mul_8bit_to_16bit_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
9E70                  CPUMATHMUL8BITTO16BIT_SIGNED
9E70  3406                    PSHS  D
9E72  A861                    EORA  1,S
9E74  A761                    STA   1,S
9E76  A6E0                    LDA   ,S+
9E78  2A01                    BPL   CPUMATHMUL8BITTO16BIT_SIGNED1
9E7A  40                      NEGA
9E7B                  CPUMATHMUL8BITTO16BIT_SIGNED1
9E7B  5D                      TSTB
9E7C  2A01                    BPL   CPUMATHMUL8BITTO16BIT_SIGNED2
9E7E  50                      NEGB
9E7F                  CPUMATHMUL8BITTO16BIT_SIGNED2
9E7F  3D                      MUL
9E80  6DE0                    TST   ,S+
9E82  2A04                    BPL   CPUMATHMUL8BITTO16BIT_SIGNED3
9E84  40                      NEGA
9E85  50                      NEGB
9E86  8200                    SBCA  #0
9E88                  CPUMATHMUL8BITTO16BIT_SIGNED3
9E88  39                      RTS
9E89                  cpu_math_mul_8bit_to_16bit_after
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9E89  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9E8B  D6F3                    LDB <(_render_view_v3_Ttmp445)
9E8D  3D                      MUL
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp481
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp481
9E8E  F3C22A                  ADDD _render_view_v3_Ttmp453
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp499
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp499
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp500
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp500
9E91  ED9FC226                STD [_render_view_v3_Ttmp451]
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp481
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; Q _render_view_v3_Ttmp499
                              ; Q _render_view_v3_Ttmp500
                              ; VSP
                              ; P:49
                              ; L:422
                              ; VSP
                              ; P:0
                              ; L:423
9E95  CCC146                  LDD #_render_view_v3_vblast_target
9E98  FDC226                  STD _render_view_v3_Ttmp451
9E9B  EC9FC226                LDD [_render_view_v3_Ttmp451]
9E9F  FDC22A                  STD _render_view_v3_Ttmp453
9EA2  CCC154                  LDD #_render_view_v3_one_pix_height
9EA5  FDC22C                  STD _render_view_v3_Ttmp496
9EA8  E69FC22C                LDB [_render_view_v3_Ttmp496]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9EAC  D7F3                    STB <(_render_view_v3_Ttmp445)
9EAE  CCC15A                  LDD #_render_view_v3_segment_one_pix_sky
9EB1  FDC22E                  STD _render_view_v3_Ttmp497
9EB4  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9EB8  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9EBA  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9EBC  D6F3                    LDB <(_render_view_v3_Ttmp445)
9EBE  BEC22A                  LDX _render_view_v3_Ttmp453
                              IF (((128+_label501-(*+2))|(127-_label501+(*+2)))&0x8000)
                              JMP _label501
                              ELSE
9EC1  2004                    BRA _label501
                              ENDIF
9EC3                  _label501indirect
9EC3  6E9FAD3E                JMP [_vblast_address]
9EC7                  _label501
                              IF (((128+_label501indirect-(*+2))|(127-_label501indirect+(*+2)))&0x8000)
                              JSR _label501indirect
                              ELSE
9EC7  8DFA                    BSR _label501indirect
                              ENDIF
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; VSP
                              ; P:28
                              ; L:424
9EC9  CCC146                  LDD #_render_view_v3_vblast_target
9ECC  FDC226                  STD _render_view_v3_Ttmp451
9ECF  CCC146                  LDD #_render_view_v3_vblast_target
9ED2  FDC22C                  STD _render_view_v3_Ttmp496
9ED5  EC9FC22C                LDD [_render_view_v3_Ttmp496]
9ED9  FDC22A                  STD _render_view_v3_Ttmp453
9EDC  C628                    LDB #$28
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9EDE  D7F3                    STB <(_render_view_v3_Ttmp445)
9EE0  CCC154                  LDD #_render_view_v3_one_pix_height
9EE3  FDC22E                  STD _render_view_v3_Ttmp497
9EE6  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9EEA  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9EEC  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9EEE  D6F3                    LDB <(_render_view_v3_Ttmp445)
9EF0  3D                      MUL
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp481
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp481
9EF1  F3C22A                  ADDD _render_view_v3_Ttmp453
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp499
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp499
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp500
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp500
9EF4  ED9FC226                STD [_render_view_v3_Ttmp451]
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp481
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; Q _render_view_v3_Ttmp499
                              ; Q _render_view_v3_Ttmp500
                              ; VSP
                              ; P:23
                              ; L:425
                              ; VSP
                              ; P:0
                              ; L:426
9EF8  CCC146                  LDD #_render_view_v3_vblast_target
9EFB  FDC226                  STD _render_view_v3_Ttmp451
9EFE  EC9FC226                LDD [_render_view_v3_Ttmp451]
9F02  FDC22A                  STD _render_view_v3_Ttmp453
9F05  CCC177                  LDD #_render_view_v3_two_pix_height
9F08  FDC22C                  STD _render_view_v3_Ttmp496
9F0B  E69FC22C                LDB [_render_view_v3_Ttmp496]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9F0F  D7F3                    STB <(_render_view_v3_Ttmp445)
9F11  CCC178                  LDD #_render_view_v3_segment_two_pix
9F14  FDC22E                  STD _render_view_v3_Ttmp497
9F17  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9F1B  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9F1D  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9F1F  D6F3                    LDB <(_render_view_v3_Ttmp445)
9F21  BEC22A                  LDX _render_view_v3_Ttmp453
                              IF (((128+_label502-(*+2))|(127-_label502+(*+2)))&0x8000)
                              JMP _label502
                              ELSE
9F24  2004                    BRA _label502
                              ENDIF
9F26                  _label502indirect
9F26  6E9FAD3E                JMP [_vblast_address]
9F2A                  _label502
                              IF (((128+_label502indirect-(*+2))|(127-_label502indirect+(*+2)))&0x8000)
                              JSR _label502indirect
                              ELSE
9F2A  8DFA                    BSR _label502indirect
                              ENDIF
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; VSP
                              ; P:28
                              ; L:427
9F2C  CCC146                  LDD #_render_view_v3_vblast_target
9F2F  FDC226                  STD _render_view_v3_Ttmp451
9F32  CCC146                  LDD #_render_view_v3_vblast_target
9F35  FDC22C                  STD _render_view_v3_Ttmp496
9F38  EC9FC22C                LDD [_render_view_v3_Ttmp496]
9F3C  FDC22A                  STD _render_view_v3_Ttmp453
9F3F  C628                    LDB #$28
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9F41  D7F3                    STB <(_render_view_v3_Ttmp445)
9F43  CCC177                  LDD #_render_view_v3_two_pix_height
9F46  FDC22E                  STD _render_view_v3_Ttmp497
9F49  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9F4D  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9F4F  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9F51  D6F3                    LDB <(_render_view_v3_Ttmp445)
9F53  3D                      MUL
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp481
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp481
9F54  F3C22A                  ADDD _render_view_v3_Ttmp453
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp499
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp499
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp500
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp500
9F57  ED9FC226                STD [_render_view_v3_Ttmp451]
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp481
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; Q _render_view_v3_Ttmp499
                              ; Q _render_view_v3_Ttmp500
                              ; VSP
                              ; P:23
                              ; L:428
                              ; VSP
                              ; P:0
                              ; L:429
9F5B  CCC146                  LDD #_render_view_v3_vblast_target
9F5E  FDC226                  STD _render_view_v3_Ttmp451
9F61  EC9FC226                LDD [_render_view_v3_Ttmp451]
9F65  FDC22A                  STD _render_view_v3_Ttmp453
9F68  CCC154                  LDD #_render_view_v3_one_pix_height
9F6B  FDC22C                  STD _render_view_v3_Ttmp496
9F6E  E69FC22C                LDB [_render_view_v3_Ttmp496]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9F72  D7F3                    STB <(_render_view_v3_Ttmp445)
9F74  CCC15C                  LDD #_render_view_v3_segment_one_pix_floor
9F77  FDC22E                  STD _render_view_v3_Ttmp497
9F7A  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9F7E  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9F80  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9F82  D6F3                    LDB <(_render_view_v3_Ttmp445)
9F84  BEC22A                  LDX _render_view_v3_Ttmp453
                              IF (((128+_label503-(*+2))|(127-_label503+(*+2)))&0x8000)
                              JMP _label503
                              ELSE
9F87  2004                    BRA _label503
                              ENDIF
9F89                  _label503indirect
9F89  6E9FAD3E                JMP [_vblast_address]
9F8D                  _label503
                              IF (((128+_label503indirect-(*+2))|(127-_label503indirect+(*+2)))&0x8000)
                              JSR _label503indirect
                              ELSE
9F8D  8DFA                    BSR _label503indirect
                              ENDIF
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; VSP
                              ; P:28
                              ; L:430
9F8F  CCC146                  LDD #_render_view_v3_vblast_target
9F92  FDC226                  STD _render_view_v3_Ttmp451
9F95  CCC146                  LDD #_render_view_v3_vblast_target
9F98  FDC22C                  STD _render_view_v3_Ttmp496
9F9B  EC9FC22C                LDD [_render_view_v3_Ttmp496]
9F9F  FDC22A                  STD _render_view_v3_Ttmp453
9FA2  C628                    LDB #$28
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9FA4  D7F3                    STB <(_render_view_v3_Ttmp445)
9FA6  CCC154                  LDD #_render_view_v3_one_pix_height
9FA9  FDC22E                  STD _render_view_v3_Ttmp497
9FAC  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9FB0  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9FB2  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9FB4  D6F3                    LDB <(_render_view_v3_Ttmp445)
9FB6  3D                      MUL
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp481
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp481
9FB7  F3C22A                  ADDD _render_view_v3_Ttmp453
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp499
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp499
                      ; peephole(6): unread1
                      ;       STD _render_view_v3_Ttmp500
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v3_Ttmp500
9FBA  ED9FC226                STD [_render_view_v3_Ttmp451]
                              ; V _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp448
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp481
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; Q _render_view_v3_Ttmp499
                              ; Q _render_view_v3_Ttmp500
                              ; VSP
                              ; P:23
                              ; L:431
                              ; VSP
                              ; P:0
                              ; L:432
9FBE  CCC146                  LDD #_render_view_v3_vblast_target
9FC1  FDC226                  STD _render_view_v3_Ttmp451
9FC4  EC9FC226                LDD [_render_view_v3_Ttmp451]
9FC8  FDC22A                  STD _render_view_v3_Ttmp453
9FCB  CCC152                  LDD #_render_view_v3_sky_height
9FCE  FDC22C                  STD _render_view_v3_Ttmp496
9FD1  E69FC22C                LDB [_render_view_v3_Ttmp496]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp445
9FD5  D7F3                    STB <(_render_view_v3_Ttmp445)
9FD7  CCC158                  LDD #_render_view_v3_segment_floor
9FDA  FDC22E                  STD _render_view_v3_Ttmp497
9FDD  E69FC22E                LDB [_render_view_v3_Ttmp497]
                      ; peephole(12): direct-page1
                      ;       STB _render_view_v3_Ttmp447
9FE1  D7F5                    STB <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDA _render_view_v3_Ttmp447
9FE3  96F5                    LDA <(_render_view_v3_Ttmp447)
                      ; peephole(12): direct-page1
                      ;       LDB _render_view_v3_Ttmp445
9FE5  D6F3                    LDB <(_render_view_v3_Ttmp445)
9FE7  BEC22A                  LDX _render_view_v3_Ttmp453
                              IF (((128+_label504-(*+2))|(127-_label504+(*+2)))&0x8000)
                              JMP _label504
                              ELSE
9FEA  2004                    BRA _label504
                              ENDIF
9FEC                  _label504indirect
9FEC  6E9FAD3E                JMP [_vblast_address]
9FF0                  _label504
                              IF (((128+_label504indirect-(*+2))|(127-_label504indirect+(*+2)))&0x8000)
                              JSR _label504indirect
                              ELSE
9FF0  8DFA                    BSR _label504indirect
                              ENDIF
                              ; Q _render_view_v3_Ttmp445
                              ; Q _render_view_v3_Ttmp447
                              ; Q _render_view_v3_Ttmp451
                              ; Q _render_view_v3_Ttmp453
                              ; Q _render_view_v3_Ttmp496
                              ; Q _render_view_v3_Ttmp497
                              ; VSP
                              ; P:28
                              ; L:433
                              ; VSP
                              ; P:0
                              ; L:434
                              IF (((128+_label457prepfrom-(*+2))|(127-_label457prepfrom+(*+2)))&0x8000)
9FF2  BD9BBB                  JSR _label457prepfrom
                              ELSE
                              BSR _label457prepfrom
                              ENDIF
                              IF (((128+_label457prepto-(*+2))|(127-_label457prepto+(*+2)))&0x8000)
9FF5  BD9BC4                  JSR _label457prepto
                              ELSE
                              BSR _label457prepto
                              ENDIF
                              IF (((128+_label457prepstep-(*+2))|(127-_label457prepstep+(*+2)))&0x8000)
9FF8  BD9BD6                  JSR _label457prepstep
                              ELSE
                              BSR _label457prepstep
                              ENDIF
9FFB  FCC283                  LDD _TRtmp462
9FFE  F3C150                  ADDD _render_view_v3_x
A001  FDC150                  STD _render_view_v3_x
A004  5F                      CLRB
A005  BEC150                  LDX _render_view_v3_x
A008  BCC27F                  CMPX _TRtmp458
A00B  2601                    BNE _label506
A00D  5A                      DECB
A00E                  _label506
A00E  F7C232                  STB _render_view_v3_Ttmp466
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_view_v3_Ttmp466
                              IF (((128+_label457bis-(*+2))|(127-_label457bis+(*+2)))&0x8000)
                              LBNE _label457bis
                              ELSE
A011  2603                    BNE _label457bis
                              ENDIF
                              IF (((128+_label457bf-(*+2))|(127-_label457bf+(*+2)))&0x8000)
A013  7E9BE9                  JMP _label457bf
                              ELSE
                              BRA _label457bf
                              ENDIF
A016                  _label457bis
                              ; V _render_view_v3_Ttmp444
                              ; Q _render_view_v3_Ttmp455
                              ; V _render_view_v3_Ttmp461
                              ; Q _render_view_v3_Ttmp466
                              ; VSP
                              ; P:37
                              ; L:435
                              ; VSP
                              ; P:0
                              ; L:436
A016  39                      RTS
A017                  render_view_v3after
                              ; VSP
                              ; P:2
                              ; L:437
                              ; VSP
                              ; P:0
                              ; L:438
                              IF (((128+render_view_v4after-(*+2))|(127-render_view_v4after+(*+2)))&0x8000)
                              JMP render_view_v4after
                              ELSE
A017  203C                    BRA render_view_v4after
                              ENDIF
A019                  PROCrender_view_v4
                              ; VSP
                              ; P:6
                              ; L:439
                              ; VSP
                              ; P:0
                              ; L:440
                              ; VSP
                              ; P:0
                              ; L:441
A019  CCC15E                  LDD #_render_view_v4_vblast_target
A01C  FDC233                  STD _render_view_v4_Ttmp507
A01F  CC4008                  LDD #$4008
A022  FDA043                  STD _render_view_v4_Ttmp508
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v4_Ttmp508
                      ; peephole(6): unread1
                      ;       STD _render_view_v4_Ttmp509
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_view_v4_Ttmp509
A025  ED9FC233                STD [_render_view_v4_Ttmp507]
                              ; Q _render_view_v4_Ttmp507
                              ; V _render_view_v4_Ttmp508
                              ; Q _render_view_v4_Ttmp509
                              ; Q _render_view_v4_Ttmp510
                              ; VSP
                              ; P:8
                              ; L:442
A029  CCC000                  LDD #_line_height_array
A02C  FDC233                  STD _render_view_v4_Ttmp507
A02F  CCC080                  LDD #_color_array
A032  FDA047                  STD _render_view_v4_Ttmp511
A035  CCC15E                  LDD #_render_view_v4_vblast_target
A038  FDC235                  STD _render_view_v4_Ttmp512
A03B  EC9FC235                LDD [_render_view_v4_Ttmp512]
A03F  FDA043                  STD _render_view_v4_Ttmp508
                      ; peephole(12): inlined1
                      ;       LDU _render_view_v4_Ttmp508
A042  CE0000                  LDU #$0000
A043                  _render_view_v4_Ttmp508 equ *-2
                      ; peephole(12): inlined1
                      ;       LDY _render_view_v4_Ttmp511
A045  108E0000                LDY #$0000
A047                  _render_view_v4_Ttmp511 equ *-2
A049  BEC233                  LDX _render_view_v4_Ttmp507
                              IF (((128+_label513-(*+2))|(127-_label513+(*+2)))&0x8000)
                              JMP _label513
                              ELSE
A04C  2004                    BRA _label513
                              ENDIF
A04E                  _label513indirect
A04E  6E9FAD3E                JMP [_vblast_address]
A052                  _label513
                              IF (((128+_label513indirect-(*+2))|(127-_label513indirect+(*+2)))&0x8000)
                              JSR _label513indirect
                              ELSE
A052  8DFA                    BSR _label513indirect
                              ENDIF
                              ; Q _render_view_v4_Ttmp507
                              ; Q _render_view_v4_Ttmp508
                              ; Q _render_view_v4_Ttmp511
                              ; Q _render_view_v4_Ttmp512
                              ; VSP
                              ; P:24
                              ; L:445
A054  39                      RTS
A055                  render_view_v4after
                              ; VSP
                              ; P:2
                              ; L:446
                              ; VSP
                              ; P:0
                              ; L:447
                              ; VSP
                              ; P:0
                              ; L:448
                              ; VSP
                              ; P:0
                              ; L:449
                              ; VSP
                              ; P:0
                              ; L:450
                              IF (((128+render_mapafter-(*+2))|(127-render_mapafter+(*+2)))&0x8000)
A055  7EA2DA                  JMP render_mapafter
                              ELSE
                              BRA render_mapafter
                              ENDIF
A058                  PROCrender_map
                              ; VSP
                              ; P:6
                              ; L:451
                              ; VSP
                              ; P:0
                              ; L:452
                              ; VSP
                              ; P:0
                              ; L:453
                              ; VSP
                              ; P:0
                              ; L:454
A058  CCBD00                  LDD #_world_map
A05B  FDC237                  STD _render_map_Ttmp514
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_map_Ttmp514
                      ; peephole(6): unread1
                      ;       STD _render_map_Ttmp515
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _render_map_Ttmp515
A05E  FDC162                  STD _render_map_ptr
                              ; Q _render_map_Ttmp514
                              ; Q _render_map_Ttmp515
                              ; Q _render_map_Ttmp516
                              ; Q _render_map_Ttmp517
                              ; VSP
                              ; P:6
                              ; L:455
                              IF (((128+_label518prepa-(*+2))|(127-_label518prepa+(*+2)))&0x8000)
                              JMP _label518prepa
                              ELSE
A061  2025                    BRA _label518prepa
                              ENDIF
A063                  _label518prepfrom
A063  4F                      CLRA
A064  B7C23F                  STA _render_map_Ttmp516
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _render_map_Ttmp516
A067  5F                      CLRB
A068  F7C2A3                  STB _TRtmp519
A06B  39                      RTS
A06C                  _label518prepto
A06C  C618                    LDB #$18
A06E  F7C240                  STB _render_map_Ttmp520
A071  C601                    LDB #$01
A073  F7C241                  STB _render_map_Ttmp521
A076  F6C240                  LDB _render_map_Ttmp520
A079  CBFF                    ADDB #$ff
A07B  F7C242                  STB _render_map_Ttmp522
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp522
A07E  F7C2A4                  STB _TRtmp523
A081  39                      RTS
A082                  _label518prepstep
A082  C601                    LDB #$01
A084  F7C2A5                  STB _TRtmp525
A087  39                      RTS
A088                  _label518prepa
                              IF (((128+_label518prepfrom-(*+2))|(127-_label518prepfrom+(*+2)))&0x8000)
                              JSR _label518prepfrom
                              ELSE
A088  8DD9                    BSR _label518prepfrom
                              ENDIF
                              IF (((128+_label518prepto-(*+2))|(127-_label518prepto+(*+2)))&0x8000)
                              JSR _label518prepto
                              ELSE
A08A  8DE0                    BSR _label518prepto
                              ENDIF
                              IF (((128+_label518prepstep-(*+2))|(127-_label518prepstep+(*+2)))&0x8000)
                              JSR _label518prepstep
                              ELSE
A08C  8DF4                    BSR _label518prepstep
                              ENDIF
A08E  F6C2A3                  LDB _TRtmp519
A091  F7C17A                  STB _render_map_y
A094                  _label518bf
A094  5F                      CLRB
A095  B6C2A5                  LDA _TRtmp525
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #$0000
A098  2301                    BLS _label529
A09A  5A                      DECB
A09B                  _label529
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp528
A09B  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp528
                              IF (((128+_label518forw-(*+2))|(127-_label518forw+(*+2)))&0x8000)
                              LBNE _label518forw
                              ELSE
A09C  2602                    BNE _label518forw
                              ENDIF
                              IF (((128+_label518back-(*+2))|(127-_label518back+(*+2)))&0x8000)
                              JMP _label518back
                              ELSE
A09E  2020                    BRA _label518back
                              ENDIF
A0A0                  _label518forw
A0A0  5F                      CLRB
A0A1  B6C17A                  LDA _render_map_y
A0A4  B1C2A3                  CMPA _TRtmp519
A0A7  2401                    BHS _label532
A0A9  5A                      DECB
A0AA                  _label532
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp531
A0AA  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp531
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
A0AB  10260177                LBNE _label518bis
                              ELSE
                              BNE _label518bis
                              ENDIF
A0AF  5F                      CLRB
A0B0  B6C17A                  LDA _render_map_y
A0B3  B1C2A4                  CMPA _TRtmp523
A0B6  2301                    BLS _label535
A0B8  5A                      DECB
A0B9                  _label535
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp534
A0B9  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp534
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
A0BA  10260168                LBNE _label518bis
                              ELSE
                              BNE _label518bis
                              ENDIF
                              IF (((128+_label518cont-(*+2))|(127-_label518cont+(*+2)))&0x8000)
                              JMP _label518cont
                              ELSE
A0BE  201E                    BRA _label518cont
                              ENDIF
A0C0                  _label518back
A0C0  5F                      CLRB
A0C1  B6C17A                  LDA _render_map_y
A0C4  B1C2A3                  CMPA _TRtmp519
A0C7  2301                    BLS _label538
A0C9  5A                      DECB
A0CA                  _label538
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp537
A0CA  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp537
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
A0CB  10260157                LBNE _label518bis
                              ELSE
                              BNE _label518bis
                              ENDIF
A0CF  5F                      CLRB
A0D0  B6C17A                  LDA _render_map_y
A0D3  B1C2A4                  CMPA _TRtmp523
A0D6  2401                    BHS _label541
A0D8  5A                      DECB
A0D9                  _label541
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp540
A0D9  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp540
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
A0DA  10260148                LBNE _label518bis
                              ELSE
                              BNE _label518bis
                              ENDIF
A0DE                  _label518cont
                              ; Q _render_map_Ttmp517
                              ; V _render_map_Ttmp520
                              ; V _render_map_Ttmp521
                              ; Q _render_map_Ttmp524
                              ; Q _render_map_Ttmp526
                              ; Q _render_map_Ttmp528
                              ; Q _render_map_Ttmp531
                              ; Q _render_map_Ttmp534
                              ; Q _render_map_Ttmp537
                              ; Q _render_map_Ttmp540
                              ; VSP
                              ; P:123
                              ; L:456
                              IF (((128+_label542prepa-(*+2))|(127-_label542prepa+(*+2)))&0x8000)
                              JMP _label542prepa
                              ELSE
A0DE  2021                    BRA _label542prepa
                              ENDIF
A0E0                  _label542prepfrom
A0E0  4F                      CLRA
                      ; peephole(6): unread1
                      ;       STA _render_map_Ttmp517
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
                      ; peephole(3): r828 [A=0](STA*,LDB*)->(CLRB)
                      ;       LDB _render_map_Ttmp517
A0E1  5F                      CLRB
A0E2  FDC285                  STD _TRtmp543
A0E5  39                      RTS
A0E6                  _label542prepto
A0E6  C620                    LDB #$20
A0E8  F7C241                  STB _render_map_Ttmp521
A0EB  C601                    LDB #$01
A0ED  F7C243                  STB _render_map_Ttmp524
A0F0  F6C241                  LDB _render_map_Ttmp521
A0F3  CBFF                    ADDB #$ff
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp526
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp526
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A0F5  4F                      CLRA
A0F6  FDC287                  STD _TRtmp544
A0F9  39                      RTS
A0FA                  _label542prepstep
A0FA  CC0001                  LDD #$0001
A0FD  FDC289                  STD _TRtmp546
A100  39                      RTS
A101                  _label542prepa
                              IF (((128+_label542prepfrom-(*+2))|(127-_label542prepfrom+(*+2)))&0x8000)
                              JSR _label542prepfrom
                              ELSE
A101  8DDD                    BSR _label542prepfrom
                              ENDIF
                              IF (((128+_label542prepto-(*+2))|(127-_label542prepto+(*+2)))&0x8000)
                              JSR _label542prepto
                              ELSE
A103  8DE1                    BSR _label542prepto
                              ENDIF
                              IF (((128+_label542prepstep-(*+2))|(127-_label542prepstep+(*+2)))&0x8000)
                              JSR _label542prepstep
                              ELSE
A105  8DF3                    BSR _label542prepstep
                              ENDIF
A107  FCC285                  LDD _TRtmp543
A10A  FDC160                  STD _render_map_x
A10D                  _label542bf
A10D  5F                      CLRB
A10E  BEC289                  LDX _TRtmp546
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
A111  2F01                    BLE _label549
A113  5A                      DECB
A114                  _label549
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp528
A114  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp528
                              IF (((128+_label542forw-(*+2))|(127-_label542forw+(*+2)))&0x8000)
                              LBNE _label542forw
                              ELSE
A115  2602                    BNE _label542forw
                              ENDIF
                              IF (((128+_label542back-(*+2))|(127-_label542back+(*+2)))&0x8000)
                              JMP _label542back
                              ELSE
A117  2020                    BRA _label542back
                              ENDIF
A119                  _label542forw
A119  5F                      CLRB
A11A  BEC160                  LDX _render_map_x
A11D  BCC285                  CMPX _TRtmp543
A120  2C01                    BGE _label551
A122  5A                      DECB
A123                  _label551
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp531
A123  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp531
                              IF (((128+_label542bis-(*+2))|(127-_label542bis+(*+2)))&0x8000)
A124  102600DA                LBNE _label542bis
                              ELSE
                              BNE _label542bis
                              ENDIF
A128  5F                      CLRB
A129  BEC160                  LDX _render_map_x
A12C  BCC287                  CMPX _TRtmp544
A12F  2F01                    BLE _label553
A131  5A                      DECB
A132                  _label553
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp534
A132  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp534
                              IF (((128+_label542bis-(*+2))|(127-_label542bis+(*+2)))&0x8000)
A133  102600CB                LBNE _label542bis
                              ELSE
                              BNE _label542bis
                              ENDIF
                              IF (((128+_label542cont-(*+2))|(127-_label542cont+(*+2)))&0x8000)
                              JMP _label542cont
                              ELSE
A137  201E                    BRA _label542cont
                              ENDIF
A139                  _label542back
A139  5F                      CLRB
A13A  BEC160                  LDX _render_map_x
A13D  BCC285                  CMPX _TRtmp543
A140  2F01                    BLE _label555
A142  5A                      DECB
A143                  _label555
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp537
A143  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp537
                              IF (((128+_label542bis-(*+2))|(127-_label542bis+(*+2)))&0x8000)
A144  102600BA                LBNE _label542bis
                              ELSE
                              BNE _label542bis
                              ENDIF
A148  5F                      CLRB
A149  BEC160                  LDX _render_map_x
A14C  BCC287                  CMPX _TRtmp544
A14F  2C01                    BGE _label557
A151  5A                      DECB
A152                  _label557
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp540
A152  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp540
                              IF (((128+_label542bis-(*+2))|(127-_label542bis+(*+2)))&0x8000)
A153  102600AB                LBNE _label542bis
                              ELSE
                              BNE _label542bis
                              ENDIF
A157                  _label542cont
                              ; Q _render_map_Ttmp520
                              ; V _render_map_Ttmp521
                              ; V _render_map_Ttmp524
                              ; Q _render_map_Ttmp528
                              ; Q _render_map_Ttmp531
                              ; Q _render_map_Ttmp534
                              ; Q _render_map_Ttmp537
                              ; Q _render_map_Ttmp540
                              ; Q _render_map_Ttmp545
                              ; Q _render_map_Ttmp547
                              ; VSP
                              ; P:125
                              ; L:457
A157  F6C17A                  LDB _render_map_y
A15A  F7C240                  STB _render_map_Ttmp520
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp520
A15D  58                      LSLB
A15E  F7C240                  STB _render_map_Ttmp520
A161  E69FC162                LDB [_render_map_ptr]
A165  F7C241                  STB _render_map_Ttmp521
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A168  4F                      CLRA
A169  F6C240                  LDB _render_map_Ttmp520
A16C  FDC239                  STD _render_map_Ttmp558
A16F  8601                    LDA #1
A171  BEC160                  LDX _render_map_x
A174  FEC239                  LDU _render_map_Ttmp558
A177  F6C241                  LDB _render_map_Ttmp521
A17A  D748                    STB <PLOTCPE
A17C  BD9032                  JSR PLOT
A17F  F6C241                  LDB _render_map_Ttmp521
A182  F76A25                  STB _PEN
A185  FCC160                  LDD _render_map_x
A188  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A18B  4F                      CLRA
A18C  F6C240                  LDB _render_map_Ttmp520
A18F  FD65BB                  STD YGR
                              ; Q _render_map_Ttmp520
                              ; Q _render_map_Ttmp521
                              ; Q _render_map_Ttmp524
                              ; Q _render_map_Ttmp545
                              ; Q _render_map_Ttmp547
                              ; Q _render_map_Ttmp558
                              ; Q _render_map_Ttmp559
                              ; VSP
                              ; P:23
                              ; L:458
A192  F6C17A                  LDB _render_map_y
A195  F7C240                  STB _render_map_Ttmp520
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp520
A198  58                      LSLB
A199  F7C240                  STB _render_map_Ttmp520
A19C  C601                    LDB #$01
A19E  F7C241                  STB _render_map_Ttmp521
A1A1  F6C240                  LDB _render_map_Ttmp520
A1A4  CB01                    ADDB #$01
A1A6  F7C243                  STB _render_map_Ttmp524
A1A9  E69FC162                LDB [_render_map_ptr]
A1AD  F7A1BF                  STB _render_map_Ttmp545
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
A1B0  F6C243                  LDB _render_map_Ttmp524
A1B3  FDC239                  STD _render_map_Ttmp558
A1B6  8601                    LDA #1
A1B8  BEC160                  LDX _render_map_x
A1BB  FEC239                  LDU _render_map_Ttmp558
                      ; peephole(12): inlined1
                      ;       LDB _render_map_Ttmp545
A1BE  C600                    LDB #1-1
A1BF                  _render_map_Ttmp545 equ *-1
A1C0  D748                    STB <PLOTCPE
A1C2  BD9032                  JSR PLOT
A1C5  F6A1BF                  LDB _render_map_Ttmp545
A1C8  F76A25                  STB _PEN
A1CB  FCC160                  LDD _render_map_x
A1CE  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A1D1  4F                      CLRA
A1D2  F6C243                  LDB _render_map_Ttmp524
A1D5  FD65BB                  STD YGR
                              ; Q _render_map_Ttmp520
                              ; V _render_map_Ttmp521
                              ; Q _render_map_Ttmp524
                              ; Q _render_map_Ttmp545
                              ; Q _render_map_Ttmp547
                              ; Q _render_map_Ttmp558
                              ; Q _render_map_Ttmp559
                              ; Q _render_map_Ttmp560
                              ; Q _render_map_Ttmp561
                              ; VSP
                              ; P:28
                              ; L:459
A1D8  7CC163                  INC _render_map_ptr+1
A1DB  2603                    BNE _label562
A1DD  7CC162                  INC _render_map_ptr
A1E0                  _label562
                              ; VSP
                              ; P:4
                              ; L:460
                              IF (((128+_label542prepfrom-(*+2))|(127-_label542prepfrom+(*+2)))&0x8000)
A1E0  BDA0E0                  JSR _label542prepfrom
                              ELSE
                              BSR _label542prepfrom
                              ENDIF
                              IF (((128+_label542prepto-(*+2))|(127-_label542prepto+(*+2)))&0x8000)
A1E3  BDA0E6                  JSR _label542prepto
                              ELSE
                              BSR _label542prepto
                              ENDIF
                              IF (((128+_label542prepstep-(*+2))|(127-_label542prepstep+(*+2)))&0x8000)
A1E6  BDA0FA                  JSR _label542prepstep
                              ELSE
                              BSR _label542prepstep
                              ENDIF
A1E9  FCC289                  LDD _TRtmp546
A1EC  F3C160                  ADDD _render_map_x
A1EF  FDC160                  STD _render_map_x
A1F2  5F                      CLRB
A1F3  BEC160                  LDX _render_map_x
A1F6  BCC285                  CMPX _TRtmp543
A1F9  2601                    BNE _label564
A1FB  5A                      DECB
A1FC                  _label564
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp528
A1FC  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp528
                              IF (((128+_label542bis-(*+2))|(127-_label542bis+(*+2)))&0x8000)
                              LBNE _label542bis
                              ELSE
A1FD  2603                    BNE _label542bis
                              ENDIF
                              IF (((128+_label542bf-(*+2))|(127-_label542bf+(*+2)))&0x8000)
A1FF  7EA10D                  JMP _label542bf
                              ELSE
                              BRA _label542bf
                              ENDIF
A202                  _label542bis
                              ; V _render_map_Ttmp517
                              ; Q _render_map_Ttmp526
                              ; Q _render_map_Ttmp528
                              ; VSP
                              ; P:37
                              ; L:461
                              IF (((128+_label518prepfrom-(*+2))|(127-_label518prepfrom+(*+2)))&0x8000)
A202  BDA063                  JSR _label518prepfrom
                              ELSE
                              BSR _label518prepfrom
                              ENDIF
                              IF (((128+_label518prepto-(*+2))|(127-_label518prepto+(*+2)))&0x8000)
A205  BDA06C                  JSR _label518prepto
                              ELSE
                              BSR _label518prepto
                              ENDIF
                              IF (((128+_label518prepstep-(*+2))|(127-_label518prepstep+(*+2)))&0x8000)
A208  BDA082                  JSR _label518prepstep
                              ELSE
                              BSR _label518prepstep
                              ENDIF
A20B  F6C17A                  LDB _render_map_y
A20E  FBC2A5                  ADDB _TRtmp525
A211  F7C17A                  STB _render_map_y
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_y
                      ; peephole(2): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
                              LBEQ _label518bis
                              ELSE
A214  2710                    BEQ _label518bis
                              ENDIF
A216  5F                      CLRB
A217  B6C17A                  LDA _render_map_y
A21A  B1C2A3                  CMPA _TRtmp519
A21D  2601                    BNE _label567
A21F  5A                      DECB
A220                  _label567
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp528
A220  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp528
                              IF (((128+_label518bis-(*+2))|(127-_label518bis+(*+2)))&0x8000)
                              LBNE _label518bis
                              ELSE
A221  2603                    BNE _label518bis
                              ENDIF
                              IF (((128+_label518bf-(*+2))|(127-_label518bf+(*+2)))&0x8000)
A223  7EA094                  JMP _label518bf
                              ELSE
                              BRA _label518bf
                              ENDIF
A226                  _label518bis
                              ; V _render_map_Ttmp516
                              ; Q _render_map_Ttmp522
                              ; Q _render_map_Ttmp528
                              ; VSP
                              ; P:44
                              ; L:462
A226  CC7553                  LDD #_pos_x
A229  FDC237                  STD _render_map_Ttmp514
A22C  E69FC237                LDB [_render_map_Ttmp514]
A230  F7C23F                  STB _render_map_Ttmp516
A233  CCC106                  LDD #_pos_y
A236  FDC23B                  STD _render_map_Ttmp568
A239  E69FC23B                LDB [_render_map_Ttmp568]
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp517
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp517
A23D  F7C240                  STB _render_map_Ttmp520
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp520
A240  58                      LSLB
A241  F7C240                  STB _render_map_Ttmp520
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$06
A244  CC0006                  LDD #$0006
A247  F7C244                  STB _render_map_Ttmp569
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
A24A  F6C23F                  LDB _render_map_Ttmp516
A24D  FDC239                  STD _render_map_Ttmp558
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
A250  F6C240                  LDB _render_map_Ttmp520
A253  FDC23D                  STD _render_map_Ttmp570
A256  8601                    LDA #1
A258  BEC239                  LDX _render_map_Ttmp558
A25B  FEC23D                  LDU _render_map_Ttmp570
A25E  F6C244                  LDB _render_map_Ttmp569
A261  D748                    STB <PLOTCPE
A263  BD9032                  JSR PLOT
A266  F6C244                  LDB _render_map_Ttmp569
A269  F76A25                  STB _PEN
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A26C  4F                      CLRA
A26D  F6C23F                  LDB _render_map_Ttmp516
A270  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
A273  F6C240                  LDB _render_map_Ttmp520
A276  FD65BB                  STD YGR
                              ; Q _render_map_Ttmp514
                              ; Q _render_map_Ttmp516
                              ; Q _render_map_Ttmp517
                              ; Q _render_map_Ttmp520
                              ; Q _render_map_Ttmp521
                              ; Q _render_map_Ttmp522
                              ; Q _render_map_Ttmp524
                              ; Q _render_map_Ttmp526
                              ; Q _render_map_Ttmp545
                              ; Q _render_map_Ttmp558
                              ; Q _render_map_Ttmp568
                              ; Q _render_map_Ttmp569
                              ; Q _render_map_Ttmp570
                              ; VSP
                              ; P:35
                              ; L:463
A279  CC7553                  LDD #_pos_x
A27C  FDC237                  STD _render_map_Ttmp514
A27F  E69FC237                LDB [_render_map_Ttmp514]
A283  F7C23F                  STB _render_map_Ttmp516
A286  CCC106                  LDD #_pos_y
A289  FDC23B                  STD _render_map_Ttmp568
A28C  E69FC23B                LDB [_render_map_Ttmp568]
                      ; peephole(6): unread1
                      ;       STB _render_map_Ttmp517
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp517
A290  F7C240                  STB _render_map_Ttmp520
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _render_map_Ttmp520
A293  58                      LSLB
A294  F7C240                  STB _render_map_Ttmp520
A297  C601                    LDB #$01
A299  F7C241                  STB _render_map_Ttmp521
A29C  F6C240                  LDB _render_map_Ttmp520
A29F  CB01                    ADDB #$01
A2A1  F7C242                  STB _render_map_Ttmp522
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$06
A2A4  CC0006                  LDD #$0006
A2A7  F7C244                  STB _render_map_Ttmp569
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
A2AA  F6C23F                  LDB _render_map_Ttmp516
A2AD  FDC239                  STD _render_map_Ttmp558
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
A2B0  F6C242                  LDB _render_map_Ttmp522
A2B3  FDC23D                  STD _render_map_Ttmp570
A2B6  8601                    LDA #1
A2B8  BEC239                  LDX _render_map_Ttmp558
A2BB  FEC23D                  LDU _render_map_Ttmp570
A2BE  F6C244                  LDB _render_map_Ttmp569
A2C1  D748                    STB <PLOTCPE
A2C3  BD9032                  JSR PLOT
A2C6  F6C244                  LDB _render_map_Ttmp569
A2C9  F76A25                  STB _PEN
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A2CC  4F                      CLRA
A2CD  F6C23F                  LDB _render_map_Ttmp516
A2D0  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
A2D3  F6C242                  LDB _render_map_Ttmp522
A2D6  FD65BB                  STD YGR
                              ; Q _render_map_Ttmp514
                              ; Q _render_map_Ttmp516
                              ; Q _render_map_Ttmp517
                              ; Q _render_map_Ttmp520
                              ; V _render_map_Ttmp521
                              ; Q _render_map_Ttmp522
                              ; Q _render_map_Ttmp524
                              ; Q _render_map_Ttmp526
                              ; Q _render_map_Ttmp545
                              ; Q _render_map_Ttmp547
                              ; Q _render_map_Ttmp558
                              ; Q _render_map_Ttmp559
                              ; Q _render_map_Ttmp568
                              ; Q _render_map_Ttmp569
                              ; Q _render_map_Ttmp570
                              ; VSP
                              ; P:40
                              ; L:464
A2D9  39                      RTS
A2DA                  render_mapafter
                              ; VSP
                              ; P:2
                              ; L:465
                              ; VSP
                              ; P:0
                              ; L:466
                              IF (((128+build_table_distafter-(*+2))|(127-build_table_distafter+(*+2)))&0x8000)
A2DA  7EA769                  JMP build_table_distafter
                              ELSE
                              BRA build_table_distafter
                              ENDIF
A2DD                  PROCbuild_table_dist
                              ; VSP
                              ; P:6
                              ; L:467
                              ; VSP
                              ; P:0
                              ; L:468
A2DD  4F                      CLRA
A2DE  B7C24D                  STA _build_table_dist_Ttmp571
A2E1  4C                      INCA
A2E2  C6C8                    LDB #$c8
A2E4  F7C24E                  STB _build_table_dist_Ttmp572
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp572
                      ; peephole(2): r816 [A=0](LDA#1)->(INCA)
                      ;       LDA #$01
A2E7  F7C24F                  STB _build_table_dist_Ttmp573
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp573
A2EA  BD8E82                  JSR CPUMATHDIV28BIT
A2ED  F7C24F                  STB _build_table_dist_Ttmp573
                              ; variable_move_array_byte(2)
                      ; peephole(3): r510 (LDD#,ADD#)->(LDD#)
                      ;       LDD #$0000
A2F0  CCB200                  LDD #$0000+_table_dist
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _build_table_dist_Ttmp577
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp577
                      ;       ADDD #_table_dist
A2F3  FDC247                  STD _build_table_dist_Ttmp577
A2F6  F6C24F                  LDB _build_table_dist_Ttmp573
A2F9  E79FC247                STB [_build_table_dist_Ttmp577]
                              ; V _build_table_dist_Ttmp571
                              ; V _build_table_dist_Ttmp572
                              ; Q _build_table_dist_Ttmp573
                              ; Q _build_table_dist_Ttmp576
                              ; Q _build_table_dist_Ttmp577
                              ; VSP
                              ; P:17
                              ; L:469
                              IF (((128+_label578prepa-(*+2))|(127-_label578prepa+(*+2)))&0x8000)
                              JMP _label578prepa
                              ELSE
A2FD  2028                    BRA _label578prepa
                              ENDIF
A2FF                  _label578prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
A2FF  CC0001                  LDD #$0001
A302  F7C24D                  STB _build_table_dist_Ttmp571
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp571
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
A305  FDC28B                  STD _TRtmp579
A308  39                      RTS
A309                  _label578prepto
A309  CC0800                  LDD #$0800
A30C  FDC245                  STD _build_table_dist_Ttmp576
                      ; peephole(1): r858 [B=0](LDB#1)->(INCB)
                      ;       LDB #$01
A30F  5C                      INCB
A310  F7C24F                  STB _build_table_dist_Ttmp573
A313  CCFFFF                  LDD #$ffff
A316  F3C245                  ADDD _build_table_dist_Ttmp576
A319  FDC247                  STD _build_table_dist_Ttmp577
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp577
A31C  FDC28D                  STD _TRtmp580
A31F  39                      RTS
A320                  _label578prepstep
A320  CC0001                  LDD #$0001
A323  FDC28F                  STD _TRtmp582
A326  39                      RTS
A327                  _label578prepa
                              IF (((128+_label578prepfrom-(*+2))|(127-_label578prepfrom+(*+2)))&0x8000)
                              JSR _label578prepfrom
                              ELSE
A327  8DD6                    BSR _label578prepfrom
                              ENDIF
                              IF (((128+_label578prepto-(*+2))|(127-_label578prepto+(*+2)))&0x8000)
                              JSR _label578prepto
                              ELSE
A329  8DDE                    BSR _label578prepto
                              ENDIF
                              IF (((128+_label578prepstep-(*+2))|(127-_label578prepstep+(*+2)))&0x8000)
                              JSR _label578prepstep
                              ELSE
A32B  8DF3                    BSR _label578prepstep
                              ENDIF
A32D  FCC28B                  LDD _TRtmp579
A330  FDC164                  STD _build_table_dist_dist
A333                  _label578bf
A333  5F                      CLRB
A334  BEC28F                  LDX _TRtmp582
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
A337  2F01                    BLE _label586
A339  5A                      DECB
A33A                  _label586
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp585
A33A  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp585
                              IF (((128+_label578forw-(*+2))|(127-_label578forw+(*+2)))&0x8000)
                              LBNE _label578forw
                              ELSE
A33B  2602                    BNE _label578forw
                              ENDIF
                              IF (((128+_label578back-(*+2))|(127-_label578back+(*+2)))&0x8000)
                              JMP _label578back
                              ELSE
A33D  2020                    BRA _label578back
                              ENDIF
A33F                  _label578forw
A33F  5F                      CLRB
A340  BEC164                  LDX _build_table_dist_dist
A343  BCC28B                  CMPX _TRtmp579
A346  2C01                    BGE _label589
A348  5A                      DECB
A349                  _label589
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp588
A349  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp588
                              IF (((128+_label578bis-(*+2))|(127-_label578bis+(*+2)))&0x8000)
A34A  102600B5                LBNE _label578bis
                              ELSE
                              BNE _label578bis
                              ENDIF
A34E  5F                      CLRB
A34F  BEC164                  LDX _build_table_dist_dist
A352  BCC28D                  CMPX _TRtmp580
A355  2F01                    BLE _label592
A357  5A                      DECB
A358                  _label592
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp591
A358  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp591
                              IF (((128+_label578bis-(*+2))|(127-_label578bis+(*+2)))&0x8000)
A359  102600A6                LBNE _label578bis
                              ELSE
                              BNE _label578bis
                              ENDIF
                              IF (((128+_label578cont-(*+2))|(127-_label578cont+(*+2)))&0x8000)
                              JMP _label578cont
                              ELSE
A35D  201E                    BRA _label578cont
                              ENDIF
A35F                  _label578back
A35F  5F                      CLRB
A360  BEC164                  LDX _build_table_dist_dist
A363  BCC28B                  CMPX _TRtmp579
A366  2F01                    BLE _label595
A368  5A                      DECB
A369                  _label595
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp594
A369  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp594
                              IF (((128+_label578bis-(*+2))|(127-_label578bis+(*+2)))&0x8000)
A36A  10260095                LBNE _label578bis
                              ELSE
                              BNE _label578bis
                              ENDIF
A36E  5F                      CLRB
A36F  BEC164                  LDX _build_table_dist_dist
A372  BCC28D                  CMPX _TRtmp580
A375  2C01                    BGE _label598
A377  5A                      DECB
A378                  _label598
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp597
A378  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp597
                              IF (((128+_label578bis-(*+2))|(127-_label578bis+(*+2)))&0x8000)
A379  10260086                LBNE _label578bis
                              ELSE
                              BNE _label578bis
                              ENDIF
A37D                  _label578cont
                              ; Q _build_table_dist_Ttmp572
                              ; V _build_table_dist_Ttmp573
                              ; V _build_table_dist_Ttmp576
                              ; Q _build_table_dist_Ttmp581
                              ; Q _build_table_dist_Ttmp583
                              ; Q _build_table_dist_Ttmp585
                              ; Q _build_table_dist_Ttmp588
                              ; Q _build_table_dist_Ttmp591
                              ; Q _build_table_dist_Ttmp594
                              ; Q _build_table_dist_Ttmp597
                              ; VSP
                              ; P:124
                              ; L:470
A37D  C6C8                    LDB #$c8
A37F  F7C24E                  STB _build_table_dist_Ttmp572
A382  CC00C8                  LDD #$00c8
A385  FDC166                  STD _build_table_dist_line_height
                              ; V _build_table_dist_Ttmp572
                              ; VSP
                              ; P:4
                              ; L:471
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_line_height
A388  FDC245                  STD _build_table_dist_Ttmp576
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp576
A38B  58                      LSLB
A38C  49                      ROLA
A38D  58                      LSLB
A38E  49                      ROLA
A38F  58                      LSLB
A390  49                      ROLA
A391  58                      LSLB
A392  49                      ROLA
A393  FDC245                  STD _build_table_dist_Ttmp576
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp576
A396  FDC166                  STD _build_table_dist_line_height
                              ; Q _build_table_dist_Ttmp572
                              ; Q _build_table_dist_Ttmp576
                              ; VSP
                              ; P:14
                              ; L:472
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_line_height
                      ; peephole(6): unread1
                      ;       STD _build_table_dist_Ttmp599
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp599
A399  BEC164                  LDX _build_table_dist_dist
A39C  BD7805                  JSR CPUMATHDIV16BITTO16BIT_SIGNED
                      ; peephole(6): unread1
                      ;       STX _build_table_dist_Ttmp601
                      ; peephole(6): unread1
                      ;       STD _build_table_dist_Ttmp600
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp600
A39F  FDC245                  STD _build_table_dist_Ttmp576
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp576
A3A2  FDC166                  STD _build_table_dist_line_height
                              ; Q _build_table_dist_Ttmp572
                              ; Q _build_table_dist_Ttmp573
                              ; Q _build_table_dist_Ttmp576
                              ; Q _build_table_dist_Ttmp581
                              ; Q _build_table_dist_Ttmp599
                              ; Q _build_table_dist_Ttmp600
                              ; Q _build_table_dist_Ttmp601
                              ; VSP
                              ; P:11
                              ; L:473
                              ; VSP
                              ; P:0
                              ; L:474
A3A5  C664                    LDB #$64
A3A7  F7C24E                  STB _build_table_dist_Ttmp572
A3AA  5F                      CLRB
A3AB  BEC166                  LDX _build_table_dist_line_height
A3AE  8C0064                  CMPX #$0064
A3B1  2301                    BLS _label603
A3B3  5A                      DECB
A3B4                  _label603
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp585
A3B4  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp585
                              IF (((128+_label604e0-(*+2))|(127-_label604e0+(*+2)))&0x8000)
                              LBEQ _label604e0
                              ELSE
A3B5  270B                    BEQ _label604e0
                              ENDIF
A3B7                  _label604t
                              ; V _build_table_dist_Ttmp572
                              ; VSP
                              ; P:16
                              ; L:475
A3B7  C664                    LDB #$64
A3B9  F7C24E                  STB _build_table_dist_Ttmp572
A3BC  CC0064                  LDD #$0064
A3BF  FDC166                  STD _build_table_dist_line_height
                              ; V _build_table_dist_Ttmp572
                              ; VSP
                              ; P:4
                              ; L:476
A3C2                  _label604f
A3C2                  _label604e0
                              ; Q _build_table_dist_Ttmp585
                              ; VSP
                              ; P:2
                              ; L:477
A3C2  FCC166                  LDD _build_table_dist_line_height
A3C5  F7C24E                  STB _build_table_dist_Ttmp572
                              ; variable_move_array_byte(2)
A3C8  CC0000                  LDD #$0000
A3CB  FDC249                  STD _build_table_dist_Ttmp607
A3CE  FCC164                  LDD _build_table_dist_dist
                      ; peephole(6): unread1
                      ;       STD _build_table_dist_Ttmp608
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp608
A3D1  F3C249                  ADDD _build_table_dist_Ttmp607
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _build_table_dist_Ttmp607
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_dist_Ttmp607
A3D4  C3B200                  ADDD #_table_dist
A3D7  FDC249                  STD _build_table_dist_Ttmp607
A3DA  F6C24E                  LDB _build_table_dist_Ttmp572
A3DD  E79FC249                STB [_build_table_dist_Ttmp607]
                              ; Q _build_table_dist_Ttmp572
                              ; Q _build_table_dist_Ttmp573
                              ; Q _build_table_dist_Ttmp576
                              ; Q _build_table_dist_Ttmp581
                              ; Q _build_table_dist_Ttmp607
                              ; Q _build_table_dist_Ttmp608
                              ; VSP
                              ; P:14
                              ; L:478
                              IF (((128+_label578prepfrom-(*+2))|(127-_label578prepfrom+(*+2)))&0x8000)
A3E1  BDA2FF                  JSR _label578prepfrom
                              ELSE
                              BSR _label578prepfrom
                              ENDIF
                              IF (((128+_label578prepto-(*+2))|(127-_label578prepto+(*+2)))&0x8000)
A3E4  BDA309                  JSR _label578prepto
                              ELSE
                              BSR _label578prepto
                              ENDIF
                              IF (((128+_label578prepstep-(*+2))|(127-_label578prepstep+(*+2)))&0x8000)
A3E7  BDA320                  JSR _label578prepstep
                              ELSE
                              BSR _label578prepstep
                              ENDIF
A3EA  FCC28F                  LDD _TRtmp582
A3ED  F3C164                  ADDD _build_table_dist_dist
A3F0  FDC164                  STD _build_table_dist_dist
A3F3  5F                      CLRB
A3F4  BEC164                  LDX _build_table_dist_dist
A3F7  BCC28B                  CMPX _TRtmp579
A3FA  2601                    BNE _label610
A3FC  5A                      DECB
A3FD                  _label610
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp585
A3FD  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp585
                              IF (((128+_label578bis-(*+2))|(127-_label578bis+(*+2)))&0x8000)
                              LBNE _label578bis
                              ELSE
A3FE  2603                    BNE _label578bis
                              ENDIF
                              IF (((128+_label578bf-(*+2))|(127-_label578bf+(*+2)))&0x8000)
A400  7EA333                  JMP _label578bf
                              ELSE
                              BRA _label578bf
                              ENDIF
A403                  _label578bis
                              ; V _build_table_dist_Ttmp571
                              ; Q _build_table_dist_Ttmp577
                              ; Q _build_table_dist_Ttmp585
                              ; VSP
                              ; P:37
                              ; L:479
A403  F6CAFD                  LDB _build_table_dist_Tstr611
A406  F7C24D                  STB _build_table_dist_Ttmp571
A409  CCCAFD                  LDD #_build_table_dist_Tstr611
A40C  FDC24B                  STD _build_table_dist_Ttmp614
A40F  7CC24C                  INC _build_table_dist_Ttmp614+1
A412  2603                    BNE _label615
A414  7CC24B                  INC _build_table_dist_Ttmp614
A417                  _label615
                              IF (((128+vScrollText_after-(*+2))|(127-vScrollText_after+(*+2)))&0x8000)
A417  7EA66C                  JMP vScrollText_after
                              ELSE
                              BRA vScrollText_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                          VERTICAL SCROLL ON EF936X                          *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
A41A                  VSCROLLT
                              
A41A  1A50                    ORCC #$50
A41C  B6676D                  LDA CONSOLEX1
A41F  2616                    BNE VSCROLLTNEW
A421  B6676E                  LDA CONSOLEY1
A424  2611                    BNE VSCROLLTNEW
A426  B66771                  LDA CONSOLEW
                      ; peephole(12): inlined1
                      ;       CMPA CURRENTTILESWIDTH
A429  8128                    CMPA #40
A42A                  CURRENTTILESWIDTH equ *-1
A42B  260A                    BNE VSCROLLTNEW
A42D  B66772                  LDA CONSOLEH
                      ; peephole(12): inlined1
                      ;       CMPA CURRENTTILESHEIGHT
A430  8119                    CMPA #25
A431                  CURRENTTILESHEIGHT equ *-1
A432  2603                    BNE VSCROLLTNEW
A434  7EA556                  JMP VSCROLLTORG
A437                  VSCROLLTNEW
                              ; Check if double buffering is active -- in case,
                              ; whe should use a different version.
A437  B665CC                  LDA DOUBLEBUFFERENABLED
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A43A  2703                    BEQ VSCROLLTNEWORIG
                      ; ----------------------------------------------
                      ; Version active on double buffering ON
                      ; ----------------------------------------------
A43C                  VSCROLLTNEWDB
A43C  1CAF                    ANDCC #$AF
A43E  39                      RTS
                      ; ----------------------------------------------
                      ; Version active on double buffering OFF
                      ; ----------------------------------------------
A43F                  VSCROLLTNEWORIG
A43F  1CFE                    ANDCC #$FE
A441  B66A25                  LDA _PEN
A444  840F                    ANDA #$0F
A446  48                      ASLA
A447  48                      ASLA
A448  48                      ASLA
A449  48                      ASLA
A44A  9719                    STA <MATHPTR5
A44C  B6C16E                  LDA _PAPER
A44F  840F                    ANDA #$0F
A451  9A19                    ORA <MATHPTR5
A453  9719                    STA <MATHPTR5
A455  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A458  2603                    BNE VSCROLLTNEW0X
A45A  7EA47C                  JMP VSCROLLTNEW0
A45D                  VSCROLLTNEW0X
A45D  8101                    CMPA #1
A45F  2603                    BNE VSCROLLTNEW1X
A461  7EA47C                  JMP VSCROLLTNEW1
A464                  VSCROLLTNEW1X
A464  8102                    CMPA #2
A466  2603                    BNE VSCROLLTNEW2X
A468  7EA47C                  JMP VSCROLLTNEW2
A46B                  VSCROLLTNEW2X
A46B  8103                    CMPA #3
A46D  2603                    BNE VSCROLLTNEW3X
A46F  7EA47C                  JMP VSCROLLTNEW3
A472                  VSCROLLTNEW3X
A472  8104                    CMPA #4
A474  2603                    BNE VSCROLLTNEW4X
A476  7EA47C                  JMP VSCROLLTNEW4
A479                  VSCROLLTNEW4X
                              
A479  1CAF                    ANDCC #$AF
A47B  39                      RTS
A47C                  VSCROLLTNEW0
A47C                  VSCROLLTNEW1
A47C                  VSCROLLTNEW2
A47C                  VSCROLLTNEW3
A47C                  VSCROLLTNEW4
A47C  3476                    PSHS A,B,X,Y,U
A47E  964A                    LDA <DIRECTION
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A480  102E00CA                LBGT VSCROLLTNEWDOWN
A484                  VSCROLLTNEWUP
A484  B6676D                  LDA CONSOLEX1
A487  9716                    STA <MATHPTR2
A489  B6676E                  LDA CONSOLEY1
A48C  9717                    STA <MATHPTR3
A48E  BD67D3                  JSR TEXTATCALCPOS
A491  1F12                    TFR X,Y 
A493  4F                      CLRA
A494  F66BAA                  LDB CURRENTSL
A497  31AB                    LEAY D,Y 
A499  31AB                    LEAY D,Y 
A49B  31AB                    LEAY D,Y 
A49D  31AB                    LEAY D,Y 
A49F  31AB                    LEAY D,Y 
A4A1  31AB                    LEAY D,Y 
A4A3  31AB                    LEAY D,Y 
A4A5  31AB                    LEAY D,Y 
A4A7  3410                    PSHS X
A4A9  3420                    PSHS Y
                              
A4AB                  VSCROLLTNEWUPYSCR
A4AB  B6E7C3                  LDA BASE_SEGMENT+$c3
A4AE  84FE                    ANDA #$fe
A4B0  B7E7C3                  STA BASE_SEGMENT+$c3
A4B3  1CFE                    ANDCC #$FE
A4B5  F66776                  LDB CONSOLEHB
A4B8  C108                    CMPB #8
A4BA  271E                    BEQ VSCROLLTNEWUPYSCR1BNO
A4BC  4F                      CLRA
A4BD  1F03                    TFR D,U 
A4BF                  VSCROLLTNEWUPYSCR1
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
A4BF  5F                      CLRB
A4C0                  VSCROLLTNEWUPYSCR1L1
A4C0  A6A5                    LDA B,Y
A4C2  A785                    STA B,X
A4C4  5C                      INCB
A4C5  F16775                  CMPB CONSOLEWB
A4C8  26F6                    BNE VSCROLLTNEWUPYSCR1L1
A4CA  4F                      CLRA
A4CB  F66BAA                  LDB CURRENTSL
A4CE  308B                    LEAX D,X 
A4D0  31AB                    LEAY D,Y 
A4D2  335F                    LEAU -1,U 
A4D4  11830000                CMPU #0
A4D8  26E5                    BNE VSCROLLTNEWUPYSCR1
A4DA                  VSCROLLTNEWUPYSCR1BNO
A4DA  4F                      CLRA
A4DB  C608                    LDB #8
A4DD  1F03                    TFR D,U 
A4DF                  VSCROLLTNEWUPYSCR1B
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
A4DF  5F                      CLRB
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A4E0  4F                      CLRA
A4E1                  VSCROLLTNEWUPYSCR1BL1
A4E1  A785                    STA B,X
A4E3  5C                      INCB
A4E4  F16775                  CMPB CONSOLEWB
A4E7  26F8                    BNE VSCROLLTNEWUPYSCR1BL1
A4E9  4F                      CLRA
A4EA  F66BAA                  LDB CURRENTSL
A4ED  308B                    LEAX D,X 
A4EF  31AB                    LEAY D,Y 
A4F1  335F                    LEAU -1,U 
A4F3  11830000                CMPU #0
A4F7  26E6                    BNE VSCROLLTNEWUPYSCR1B
A4F9  B6E7C3                  LDA BASE_SEGMENT+$c3
A4FC  8A01                    ORA #$01
A4FE  B7E7C3                  STA BASE_SEGMENT+$c3
A501  3520                    PULS Y
A503  3510                    PULS X
                              
A505  1CFE                    ANDCC #$FE
A507  F66776                  LDB CONSOLEHB
A50A  C108                    CMPB #8
A50C  271E                    BEQ VSCROLLTNEWUPYSCR1DNO
A50E  4F                      CLRA
A50F  1F03                    TFR D,U 
A511                  VSCROLLTNEWUPYSCR1C
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
A511  5F                      CLRB
A512                  VSCROLLTNEWUPYSCR1CL1
A512  A6A5                    LDA B,Y
A514  A785                    STA B,X
A516  5C                      INCB
A517  F16775                  CMPB CONSOLEWB
A51A  26F6                    BNE VSCROLLTNEWUPYSCR1CL1
A51C  4F                      CLRA
A51D  F66BAA                  LDB CURRENTSL
A520  308B                    LEAX D,X 
A522  31AB                    LEAY D,Y 
A524  335F                    LEAU -1,U 
A526  11830000                CMPU #0
A52A  26E5                    BNE VSCROLLTNEWUPYSCR1C
A52C                  VSCROLLTNEWUPYSCR1DNO
A52C  4F                      CLRA
A52D  C608                    LDB #8
A52F  1F03                    TFR D,U 
A531                  VSCROLLTNEWUPYSCR1D
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDB #0
A531  5F                      CLRB
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A532  4F                      CLRA
A533                  VSCROLLTNEWUPYSCR1DL1
A533  A785                    STA B,X
A535  5C                      INCB
A536  F16775                  CMPB CONSOLEWB
A539  26F8                    BNE VSCROLLTNEWUPYSCR1DL1
A53B  4F                      CLRA
A53C  F66BAA                  LDB CURRENTSL
A53F  308B                    LEAX D,X 
A541  31AB                    LEAY D,Y 
A543  335F                    LEAU -1,U 
A545  11830000                CMPU #0
A549  26E6                    BNE VSCROLLTNEWUPYSCR1D
A54B  7EA551                  JMP VSCROLLTNEWE
A54E                  VSCROLLTNEWDOWN
A54E  7EA551                  JMP VSCROLLTNEWE
A551                  VSCROLLTNEWE
A551  3576                    PULS A,B,X,Y,U
A553  1CAF                    ANDCC #$AF
A555  39                      RTS
                      ; -------------------------------
A556                  VSCROLLTORG
A556  3406                    PSHS D
A558  FC6F81                  LDD BITMAPADDRESS
                      ; peephole(12): inlined1
                      ;       ADDD CURRENTFRAMESIZE
A55B  C31F40                  ADDD #40*200
A55C                  CURRENTFRAMESIZE equ *-2
A55E  F06BAA                  SUBB CURRENTSL    
A561  DD14                    STD <MATHPTR0
A563  3506                    PULS D
                              ; Check if double buffering is active -- in case,
                              ; whe should use a different version.
A565  B665CC                  LDA DOUBLEBUFFERENABLED
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A568  2703                    BEQ VSCROLLTORGORIG
                      ; ----------------------------------------------
                      ; Version active on double buffering ON
                      ; ----------------------------------------------
A56A                  VSCROLLTORGDB
A56A  1CAF                    ANDCC #$AF
A56C  39                      RTS
                      ; ----------------------------------------------
                      ; Version active on double buffering OFF
                      ; ----------------------------------------------
A56D                  VSCROLLTORGORIG
A56D  1CFE                    ANDCC #$FE
A56F  B6C16E                  LDA _PAPER
A572  840F                    ANDA #$0F
A574  48                      ASLA
A575  48                      ASLA
A576  48                      ASLA
A577  48                      ASLA
A578  9719                    STA <MATHPTR5
A57A  B6C16E                  LDA _PAPER
A57D  840F                    ANDA #$0F
A57F  9A19                    ORA <MATHPTR5
A581  9719                    STA <MATHPTR5
A583  B66F85                  LDA CURRENTMODE
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A586  2603                    BNE VSCROLLTORG0X
A588  7EA5AA                  JMP VSCROLLTORG0
A58B                  VSCROLLTORG0X
A58B  8101                    CMPA #1
A58D  2603                    BNE VSCROLLTORG1X
A58F  7EA5AA                  JMP VSCROLLTORG1
A592                  VSCROLLTORG1X
A592  8102                    CMPA #2
A594  2603                    BNE VSCROLLTORG2X
A596  7EA5AA                  JMP VSCROLLTORG2
A599                  VSCROLLTORG2X
A599  8103                    CMPA #3
A59B  2603                    BNE VSCROLLTORG3X
A59D  7EA5AA                  JMP VSCROLLTORG3
A5A0                  VSCROLLTORG3X
A5A0  8104                    CMPA #4
A5A2  2603                    BNE VSCROLLTORG4X
A5A4  7EA5AA                  JMP VSCROLLTORG4
A5A7                  VSCROLLTORG4X
A5A7  1CAF                    ANDCC #$AF
A5A9  39                      RTS
A5AA                  VSCROLLTORG0
A5AA                  VSCROLLTORG1
A5AA                  VSCROLLTORG2
A5AA                  VSCROLLTORG3
A5AA                  VSCROLLTORG4
A5AA  3476                    PSHS A,B,X,Y,U
A5AC  964A                    LDA <DIRECTION
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A5AE  2E6B                    BGT VSCROLLTORGDOWN
A5B0                  VSCROLLTORGUP
A5B0  BE6F81                  LDX BITMAPADDRESS
A5B3  1F12                    TFR X,Y 
A5B5  10BE6F81                LDY BITMAPADDRESS
A5B9  B66BAA                  LDA CURRENTSL
A5BC  31A6                    LEAY A,Y 
A5BE  31A6                    LEAY A,Y 
A5C0  31A6                    LEAY A,Y 
A5C2  31A6                    LEAY A,Y 
A5C4  31A6                    LEAY A,Y 
A5C6  31A6                    LEAY A,Y 
A5C8  31A6                    LEAY A,Y 
A5CA  31A6                    LEAY A,Y 
                              
A5CC                  VSCROLLTORGUPYSCR
A5CC  B6E7C3                  LDA BASE_SEGMENT+$c3
A5CF  84FE                    ANDA #$fe
A5D1  B7E7C3                  STA BASE_SEGMENT+$c3
A5D4                  VSCROLLTORGUPYSCR1
A5D4  A6A0                    LDA ,Y+
A5D6  A780                    STA ,X+
A5D8  109C14                  CMPY <MATHPTR0
A5DB  26F7                    BNE VSCROLLTORGUPYSCR1
A5DD  9619                    LDA <MATHPTR5
A5DF                  VSCROLLTORGUPREFILL
A5DF  A780                    STA ,X+
A5E1  9C14                    CMPX <MATHPTR0
A5E3  26FA                    BNE VSCROLLTORGUPREFILL
A5E5  B6E7C3                  LDA BASE_SEGMENT+$c3
A5E8  8A01                    ORA #$01
A5EA  B7E7C3                  STA BASE_SEGMENT+$c3
A5ED  BE6F81                  LDX BITMAPADDRESS
A5F0  10BE6F81                LDY BITMAPADDRESS
A5F4  B66BAA                  LDA CURRENTSL
A5F7  31A6                    LEAY A,Y 
A5F9  31A6                    LEAY A,Y 
A5FB  31A6                    LEAY A,Y 
A5FD  31A6                    LEAY A,Y 
A5FF  31A6                    LEAY A,Y 
A601  31A6                    LEAY A,Y 
A603  31A6                    LEAY A,Y 
A605  31A6                    LEAY A,Y 
A607                  VSCROLLTORGUPYSCR1C
A607  A6A0                    LDA ,Y+
A609  A780                    STA ,X+
A60B  109C14                  CMPY <MATHPTR0
A60E  26F7                    BNE VSCROLLTORGUPYSCR1C
A610  9619                    LDA <MATHPTR5
A612                  VSCROLLTORGUPREFILLC
A612  A780                    STA ,X+
A614  9C14                    CMPX <MATHPTR0
A616  26FA                    BNE VSCROLLTORGUPREFILLC
A618  7EA667                  JMP VSCROLLTORGE
A61B                  VSCROLLTORGDOWN
A61B  BE6F81                  LDX BITMAPADDRESS
A61E  10BE6F81                LDY BITMAPADDRESS
A622  B6A55C                  LDA CURRENTFRAMESIZE
A625  31A6                    LEAY A,Y 
A627  3086                    LEAX A,X 
                              
A629  B66BAA                  LDA CURRENTSL
A62C  43                      COMA
A62D  3086                    LEAX A,X 
A62F                  VSCROLLTORGDOWNYSCR
A62F  B6E7C3                  LDA BASE_SEGMENT+$c3
A632  84FE                    ANDA #$fe
A634  B7E7C3                  STA BASE_SEGMENT+$c3
A637                  VSCROLLTORGDOWNYSCR1
A637  A682                    LDA ,-X
A639  A7A2                    STA ,-Y
A63B  BC6F81                  CMPX BITMAPADDRESS
A63E  26F7                    BNE VSCROLLTORGDOWNYSCR1
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A640  4F                      CLRA
A641                  VSCROLLTORGDOWNREFILL
A641  A7A2                    STA ,-Y
A643  10BC6F81                CMPY BITMAPADDRESS
A647  26F8                    BNE VSCROLLTORGDOWNREFILL
A649  B6E7C3                  LDA BASE_SEGMENT+$c3
A64C  8A01                    ORA #$01
A64E  B7E7C3                  STA BASE_SEGMENT+$c3
A651                  VSCROLLTORGDOWNYSCR1C
A651  A682                    LDA ,-X
A653  A7A2                    STA ,-Y
A655  BC6F81                  CMPX BITMAPADDRESS
A658  26F7                    BNE VSCROLLTORGDOWNYSCR1C
A65A  9619                    LDA <MATHPTR5
A65C                  VSCROLLTORGDOWNREFILLC
A65C  A7A2                    STA ,-Y
A65E  10BC6F81                CMPY BITMAPADDRESS
A662  26F8                    BNE VSCROLLTORGDOWNREFILLC
A664  7EA667                  JMP VSCROLLTORGE
A667                  VSCROLLTORGE
A667  3576                    PULS A,B,X,Y,U
A669  1CAF                    ANDCC #$AF
A66B  39                      RTS
A66C                  vScrollText_after
                              IF (((128+cls_after-(*+2))|(127-cls_after+(*+2)))&0x8000)
A66C  7EA738                  JMP cls_after
                              ELSE
                              BRA cls_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                       CLEAR SCREEN ROUTINE FOR EF936X                       *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                     mc6809 optimization by Samuel Devulder                  *
                      ;*               added support for double buffering by Marco Spedaletti        *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
A66F                  CLS
A66F  3408                    PSHS  DP
A671  B66F85                  LDA CURRENTMODE
A674  2731                    BEQ CLS0
A676  4A                      DECA
A677  272E                    BEQ CLS1
A679  4A                      DECA
A67A  2708                    BEQ CLS2
A67C  4A                      DECA
A67D  271A                    BEQ CLS3
A67F  4A                      DECA
A680  2725                    BEQ CLS4
A682  3588                    PULS DP,PC
A684                  CLS2
A684  4F                      CLRA
A685  F6C16E                  LDB _PAPER
A688  54                      LSRB
A689  8200                    SBCA #0
A68B  54                      LSRB
A68C  C600                    LDB #1-1 ; important not 0 or else the optimzer will CLRB which clears the carry
A68E  C200                    SBCB #0
A690  CE0000                  LDU #0
A693  33C5                    LEAU B,U
A695  1F89                    TFR A,B
A697  2023                    BRA CLSG
A699                  CLS3
A699  B6C16E                  LDA _PAPER
A69C  840F                    ANDA #$0F
A69E  C611                    LDB #$11
A6A0  3D                      MUL
A6A1  1F98                    TFR B,A
A6A3  1F03                    TFR D,U
A6A5  2015                    BRA CLSG
A6A7                  CLS0
A6A7                  CLS1
A6A7                  CLS4
A6A7  B66A25                  LDA _PEN
A6AA  48                      ASLA
A6AB  48                      ASLA
A6AC  48                      ASLA
A6AD  48                      ASLA
A6AE  A7E2                    STA ,-S
A6B0  B6C16E                  LDA _PAPER
A6B3  840F                    ANDA #$0F
A6B5  AAE0                    ORA ,S+
A6B7  1F89                    TFR A,B
A6B9  CE0000                  LDU #0
A6BC                  CLSG
A6BC  3406                    PSHS D
                              ; Check if double buffering is active -- in case,
                              ; whe should use a different version.
A6BE  B665CC                  LDA DOUBLEBUFFERENABLED
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPA #0
A6C1  2721                    BEQ CLSGORIG
A6C3  3506                    PULS D
A6C5  1A50                    ORCC #$50
                      ; ----------------------------------------------
                      ; Version active on double buffering ON
                      ; ----------------------------------------------
A6C7  10BE6F81                LDY BITMAPADDRESS
A6CB  31A93FFF                LEAY $3FFF,Y 
A6CF  10BFA6DC                STY CLSGDBADDR+2
A6D3  10BE6F81                LDY BITMAPADDRESS
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
A6D7  4F                      CLRA
A6D8                  CLSGDB
A6D8  A7A0                    STA ,Y+
A6DA                  CLSGDBADDR
A6DA  108C7FFF                CMPY #$7FFF 
A6DE  26F8                    BNE CLSGDB
A6E0  1CAF                    ANDCC #$AF
                              
A6E2  3588                    PULS DP,PC
                      ; ----------------------------------------------
                      ; Version active on double buffering OFF
                      ; ----------------------------------------------
A6E4                  CLSGORIG
A6E4  3506                    PULS D
A6E6  BE6F81                  LDX BITMAPADDRESS
A6E9  300A                    LEAX 10,X
A6EB  3446                    PSHS D,U
A6ED  FCA55C                  LDD CURRENTFRAMESIZE
A6F0  338B                    LEAU D,X
A6F2  FFA732                  STU CLSGL2+1
A6F5  CCE700                  LDD #BASE_SEGMENT
A6F8  1F8B                    TFR A,DP
A6FA  96C3                    LDA <$C3
A6FC  84FE                    ANDA #$FE
A6FE  97C3                    STA <$C3
A700  3546                    PULS D,U
A702                  CLSGL1
A702  0CC3                    INC <$C3
A704  EF16                    STU -10,X
A706  EF18                    STU -8,X
A708  EF1A                    STU -6,X
A70A  EF1C                    STU -4,X
A70C  EF1E                    STU -2,X
A70E  EF84                    STU ,X
A710  EF02                    STU 2,X
A712  EF04                    STU 4,X
A714  EF06                    STU 6,X
A716  EF08                    STU 8,X
A718  0AC3                    DEC <$C3
A71A  ED16                    STD -10,X
A71C  ED18                    STD -8,X
A71E  ED1A                    STD -6,X
A720  ED1C                    STD -4,X
A722  ED1E                    STD -2,X
A724  ED84                    STD ,X
A726  ED02                    STD 2,X
A728  ED04                    STD 4,X
A72A  ED06                    STD 6,X
A72C  ED08                    STD 8,X
A72E  308814                  LEAX 20,X
A731                  CLSGL2
A731  8C5555                  CMPX #$5555
A734  25CC                    BLO CLSGL1
A736  3588                    PULS DP,PC
A738                  cls_after
A738  10BEC24B                LDY _build_table_dist_Ttmp614
A73C  109F01                  STY <TEXTPTR
A73F  B6C24D                  LDA _build_table_dist_Ttmp571
A742  9703                    STA <TEXTSIZE
A744  BD69F3                  JSR TEXTAT
A747  F6676D                  LDB CONSOLEX1
A74A  D74D                    STB <XCURSYS
A74C  0C4E                    INC <YCURSYS
A74E  5F                      CLRB
A74F  964E                    LDA <YCURSYS
A751  B16770                  CMPA CONSOLEY2
A754  2F01                    BLE _label619
A756  5A                      DECB
A757                  _label619
                      ; peephole(6): unread1
                      ;       STB _build_table_dist_Ttmp585
A757  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_dist_Ttmp585
                              IF (((128+_label617scroll-(*+2))|(127-_label617scroll+(*+2)))&0x8000)
                              LBNE _label617scroll
                              ELSE
A758  2602                    BNE _label617scroll
                              ENDIF
                              IF (((128+_label617end-(*+2))|(127-_label617end+(*+2)))&0x8000)
                              JMP _label617end
                              ELSE
A75A  200C                    BRA _label617end
                              ENDIF
A75C                  _label617scroll
A75C  86FF                    LDA #$ff
A75E  974A                    STA <DIRECTION
A760  BDA41A                  JSR VSCROLLT
A763  F66770                  LDB CONSOLEY2
A766  D74E                    STB <YCURSYS
A768                  _label617end
                              ; Q _build_table_dist_Ttmp571
                              ; Q _build_table_dist_Ttmp572
                              ; Q _build_table_dist_Ttmp573
                              ; Q _build_table_dist_Ttmp585
                              ; Q _build_table_dist_Ttmp614
                              ; VSP
                              ; P:499
                              ; L:480
A768  39                      RTS
A769                  build_table_distafter
                              ; VSP
                              ; P:2
                              ; L:481
                              ; VSP
                              ; P:0
                              ; L:482
                              IF (((128+build_table_div_4096after-(*+2))|(127-build_table_div_4096after+(*+2)))&0x8000)
A769  7EA89F                  JMP build_table_div_4096after
                              ELSE
                              BRA build_table_div_4096after
                              ENDIF
A76C                  PROCbuild_table_div_4096
                              ; VSP
                              ; P:6
                              ; L:483
                              ; VSP
                              ; P:0
                              ; L:484
A76C  4F                      CLRA
A76D  B7C25A                  STA _build_table_div_4096_Ttmp620
A770  CCFFFF                  LDD #$ffff
A773  FDC250                  STD _build_table_div_4096_Ttmp621
                              ; variable_move_array_byte(2)
A776  CC0000                  LDD #$0000
A779  FDC252                  STD _build_table_div_4096_Ttmp625
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp625
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _build_table_div_4096_Ttmp626
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp626
A77C  58                      LSLB
A77D  49                      ROLA
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _build_table_div_4096_Ttmp626
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp626
A77E  C3BA00                  ADDD #_table_div_4096
A781  FDC254                  STD _build_table_div_4096_Ttmp626
A784  FCC250                  LDD _build_table_div_4096_Ttmp621
A787  ED9FC254                STD [_build_table_div_4096_Ttmp626]
                              ; V _build_table_div_4096_Ttmp620
                              ; V _build_table_div_4096_Ttmp621
                              ; Q _build_table_div_4096_Ttmp624
                              ; Q _build_table_div_4096_Ttmp625
                              ; Q _build_table_div_4096_Ttmp626
                              ; VSP
                              ; P:17
                              ; L:485
                              IF (((128+_label628prepa-(*+2))|(127-_label628prepa+(*+2)))&0x8000)
                              JMP _label628prepa
                              ELSE
A78B  2023                    BRA _label628prepa
                              ENDIF
A78D                  _label628prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
A78D  CC0001                  LDD #$0001
A790  F7C25A                  STB _build_table_div_4096_Ttmp620
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp620
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
A793  FDC291                  STD _TRtmp629
A796  39                      RTS
A797                  _label628prepto
A797  CC0180                  LDD #$0180
A79A  FDC250                  STD _build_table_div_4096_Ttmp621
A79D  C601                    LDB #$01
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp631
A79F  CCFFFF                  LDD #$ffff
A7A2  F3C250                  ADDD _build_table_div_4096_Ttmp621
                      ; peephole(6): unread1
                      ;       STD _build_table_div_4096_Ttmp624
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp624
A7A5  FDC293                  STD _TRtmp632
A7A8  39                      RTS
A7A9                  _label628prepstep
A7A9  CC0001                  LDD #$0001
A7AC  FDC295                  STD _TRtmp634
A7AF  39                      RTS
A7B0                  _label628prepa
                              IF (((128+_label628prepfrom-(*+2))|(127-_label628prepfrom+(*+2)))&0x8000)
                              JSR _label628prepfrom
                              ELSE
A7B0  8DDB                    BSR _label628prepfrom
                              ENDIF
                              IF (((128+_label628prepto-(*+2))|(127-_label628prepto+(*+2)))&0x8000)
                              JSR _label628prepto
                              ELSE
A7B2  8DE3                    BSR _label628prepto
                              ENDIF
                              IF (((128+_label628prepstep-(*+2))|(127-_label628prepstep+(*+2)))&0x8000)
                              JSR _label628prepstep
                              ELSE
A7B4  8DF3                    BSR _label628prepstep
                              ENDIF
A7B6  FCC291                  LDD _TRtmp629
A7B9  FDC168                  STD _build_table_div_4096_i
A7BC                  _label628bf
A7BC  5F                      CLRB
A7BD  BEC295                  LDX _TRtmp634
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
A7C0  2F01                    BLE _label638
A7C2  5A                      DECB
A7C3                  _label638
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp637
A7C3  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp637
                              IF (((128+_label628forw-(*+2))|(127-_label628forw+(*+2)))&0x8000)
                              LBNE _label628forw
                              ELSE
A7C4  2602                    BNE _label628forw
                              ENDIF
                              IF (((128+_label628back-(*+2))|(127-_label628back+(*+2)))&0x8000)
                              JMP _label628back
                              ELSE
A7C6  201E                    BRA _label628back
                              ENDIF
A7C8                  _label628forw
A7C8  5F                      CLRB
A7C9  BEC168                  LDX _build_table_div_4096_i
A7CC  BCC291                  CMPX _TRtmp629
A7CF  2C01                    BGE _label641
A7D1  5A                      DECB
A7D2                  _label641
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp640
A7D2  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp640
                              IF (((128+_label628bis-(*+2))|(127-_label628bis+(*+2)))&0x8000)
A7D3  10260083                LBNE _label628bis
                              ELSE
                              BNE _label628bis
                              ENDIF
A7D7  5F                      CLRB
A7D8  BEC168                  LDX _build_table_div_4096_i
A7DB  BCC293                  CMPX _TRtmp632
A7DE  2F01                    BLE _label644
A7E0  5A                      DECB
A7E1                  _label644
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp643
A7E1  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp643
                              IF (((128+_label628bis-(*+2))|(127-_label628bis+(*+2)))&0x8000)
                              LBNE _label628bis
                              ELSE
A7E2  2676                    BNE _label628bis
                              ENDIF
                              IF (((128+_label628cont-(*+2))|(127-_label628cont+(*+2)))&0x8000)
                              JMP _label628cont
                              ELSE
A7E4  201A                    BRA _label628cont
                              ENDIF
A7E6                  _label628back
A7E6  5F                      CLRB
A7E7  BEC168                  LDX _build_table_div_4096_i
A7EA  BCC291                  CMPX _TRtmp629
A7ED  2F01                    BLE _label647
A7EF  5A                      DECB
A7F0                  _label647
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp646
A7F0  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp646
                              IF (((128+_label628bis-(*+2))|(127-_label628bis+(*+2)))&0x8000)
                              LBNE _label628bis
                              ELSE
A7F1  2667                    BNE _label628bis
                              ENDIF
A7F3  5F                      CLRB
A7F4  BEC168                  LDX _build_table_div_4096_i
A7F7  BCC293                  CMPX _TRtmp632
A7FA  2C01                    BGE _label650
A7FC  5A                      DECB
A7FD                  _label650
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp649
A7FD  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp649
                              IF (((128+_label628bis-(*+2))|(127-_label628bis+(*+2)))&0x8000)
                              LBNE _label628bis
                              ELSE
A7FE  265A                    BNE _label628bis
                              ENDIF
A800                  _label628cont
                              ; V _build_table_div_4096_Ttmp621
                              ; Q _build_table_div_4096_Ttmp630
                              ; V _build_table_div_4096_Ttmp631
                              ; Q _build_table_div_4096_Ttmp633
                              ; Q _build_table_div_4096_Ttmp635
                              ; Q _build_table_div_4096_Ttmp637
                              ; Q _build_table_div_4096_Ttmp640
                              ; Q _build_table_div_4096_Ttmp643
                              ; Q _build_table_div_4096_Ttmp646
                              ; Q _build_table_div_4096_Ttmp649
                              ; VSP
                              ; P:124
                              ; L:486
A800  CC1000                  LDD #$1000
A803  FDC250                  STD _build_table_div_4096_Ttmp621
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$1000
A806  8610                    LDA #$10
A808  FDC16A                  STD _build_table_div_4096_res
                              ; V _build_table_div_4096_Ttmp621
                              ; VSP
                              ; P:4
                              ; L:487
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_res
                      ; peephole(6): unread1
                      ;       STD _build_table_div_4096_Ttmp651
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp651
A80B  BEC168                  LDX _build_table_div_4096_i
A80E  BD7805                  JSR CPUMATHDIV16BITTO16BIT_SIGNED
                      ; peephole(6): unread1
                      ;       STX _build_table_div_4096_Ttmp653
                      ; peephole(6): unread1
                      ;       STD _build_table_div_4096_Ttmp652
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp652
A811  FDC250                  STD _build_table_div_4096_Ttmp621
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp621
A814  FDC16A                  STD _build_table_div_4096_res
                              ; Q _build_table_div_4096_Ttmp621
                              ; Q _build_table_div_4096_Ttmp630
                              ; Q _build_table_div_4096_Ttmp631
                              ; Q _build_table_div_4096_Ttmp633
                              ; Q _build_table_div_4096_Ttmp651
                              ; Q _build_table_div_4096_Ttmp652
                              ; Q _build_table_div_4096_Ttmp653
                              ; VSP
                              ; P:11
                              ; L:488
                              ; variable_move_array_byte(2)
A817  CC0000                  LDD #$0000
A81A  FDC252                  STD _build_table_div_4096_Ttmp625
A81D  FCC168                  LDD _build_table_div_4096_i
A820  FDC254                  STD _build_table_div_4096_Ttmp626
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp626
A823  F3C252                  ADDD _build_table_div_4096_Ttmp625
A826  FDC252                  STD _build_table_div_4096_Ttmp625
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp625
                      ; peephole(2): r666 (STD*,LSLB,ROLA,STD*)->(LSLB,ROLA,STD*)
                      ;       STD _build_table_div_4096_Ttmp656
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp656
A829  58                      LSLB
A82A  49                      ROLA
                      ; peephole(2): r437 (STORE*,?,STORE*)->(?,STORE*)
                      ;       STD _build_table_div_4096_Ttmp656
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDD _build_table_div_4096_Ttmp656
A82B  C3BA00                  ADDD #_table_div_4096
A82E  FDC256                  STD _build_table_div_4096_Ttmp656
A831  FCC16A                  LDD _build_table_div_4096_res
A834  ED9FC256                STD [_build_table_div_4096_Ttmp656]
                              ; Q _build_table_div_4096_Ttmp621
                              ; Q _build_table_div_4096_Ttmp625
                              ; Q _build_table_div_4096_Ttmp626
                              ; Q _build_table_div_4096_Ttmp630
                              ; Q _build_table_div_4096_Ttmp656
                              ; VSP
                              ; P:18
                              ; L:489
                              IF (((128+_label628prepfrom-(*+2))|(127-_label628prepfrom+(*+2)))&0x8000)
A838  BDA78D                  JSR _label628prepfrom
                              ELSE
                              BSR _label628prepfrom
                              ENDIF
                              IF (((128+_label628prepto-(*+2))|(127-_label628prepto+(*+2)))&0x8000)
A83B  BDA797                  JSR _label628prepto
                              ELSE
                              BSR _label628prepto
                              ENDIF
                              IF (((128+_label628prepstep-(*+2))|(127-_label628prepstep+(*+2)))&0x8000)
A83E  BDA7A9                  JSR _label628prepstep
                              ELSE
                              BSR _label628prepstep
                              ENDIF
A841  FCC295                  LDD _TRtmp634
A844  F3C168                  ADDD _build_table_div_4096_i
A847  FDC168                  STD _build_table_div_4096_i
A84A  5F                      CLRB
A84B  BEC168                  LDX _build_table_div_4096_i
A84E  BCC291                  CMPX _TRtmp629
A851  2601                    BNE _label659
A853  5A                      DECB
A854                  _label659
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp637
A854  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp637
                              IF (((128+_label628bis-(*+2))|(127-_label628bis+(*+2)))&0x8000)
                              LBNE _label628bis
                              ELSE
A855  2603                    BNE _label628bis
                              ENDIF
                              IF (((128+_label628bf-(*+2))|(127-_label628bf+(*+2)))&0x8000)
A857  7EA7BC                  JMP _label628bf
                              ELSE
                              BRA _label628bf
                              ENDIF
A85A                  _label628bis
                              ; V _build_table_div_4096_Ttmp620
                              ; Q _build_table_div_4096_Ttmp624
                              ; Q _build_table_div_4096_Ttmp637
                              ; VSP
                              ; P:37
                              ; L:490
A85A  F6CAFA                  LDB _build_table_div_4096_Tstr660
A85D  F7C25A                  STB _build_table_div_4096_Ttmp620
A860  CCCAFA                  LDD #_build_table_div_4096_Tstr660
A863  FDC258                  STD _build_table_div_4096_Ttmp663
A866  7CC259                  INC _build_table_div_4096_Ttmp663+1
A869  2603                    BNE _label664
A86B  7CC258                  INC _build_table_div_4096_Ttmp663
A86E                  _label664
A86E  10BEC258                LDY _build_table_div_4096_Ttmp663
A872  109F01                  STY <TEXTPTR
A875  B6C25A                  LDA _build_table_div_4096_Ttmp620
A878  9703                    STA <TEXTSIZE
A87A  BD69F3                  JSR TEXTAT
A87D  F6676D                  LDB CONSOLEX1
A880  D74D                    STB <XCURSYS
A882  0C4E                    INC <YCURSYS
A884  5F                      CLRB
A885  964E                    LDA <YCURSYS
A887  B16770                  CMPA CONSOLEY2
A88A  2F01                    BLE _label668
A88C  5A                      DECB
A88D                  _label668
                      ; peephole(6): unread1
                      ;       STB _build_table_div_4096_Ttmp637
A88D  5D                      TSTB
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _build_table_div_4096_Ttmp637
                              IF (((128+_label666scroll-(*+2))|(127-_label666scroll+(*+2)))&0x8000)
                              LBNE _label666scroll
                              ELSE
A88E  2602                    BNE _label666scroll
                              ENDIF
                              IF (((128+_label666end-(*+2))|(127-_label666end+(*+2)))&0x8000)
                              JMP _label666end
                              ELSE
A890  200C                    BRA _label666end
                              ENDIF
A892                  _label666scroll
A892  86FF                    LDA #$ff
A894  974A                    STA <DIRECTION
A896  BDA41A                  JSR VSCROLLT
A899  F66770                  LDB CONSOLEY2
A89C  D74E                    STB <YCURSYS
A89E                  _label666end
                              ; Q _build_table_div_4096_Ttmp620
                              ; Q _build_table_div_4096_Ttmp630
                              ; Q _build_table_div_4096_Ttmp631
                              ; Q _build_table_div_4096_Ttmp637
                              ; Q _build_table_div_4096_Ttmp663
                              ; VSP
                              ; P:41
                              ; L:491
A89E  39                      RTS
A89F                  build_table_div_4096after
                              ; VSP
                              ; P:2
                              ; L:492
                              ; VSP
                              ; P:0
                              ; L:493
                              ; VSP
                              ; P:0
                              ; L:494
A89F  867B                    LDA #%01111011
A8A1  B7E7DC                  STA BASE_SEGMENT+$DC
A8A4  CC0000                  LDD #$0000
A8A7  FD65BF                  STD CLIPX1
A8AA  CC009F                  LDD #$009f
A8AD  FD9033                  STD CLIPX2
A8B0  CC0000                  LDD #$0000
A8B3  FD65C1                  STD CLIPY1
A8B6  CC00C7                  LDD #$00c7
A8B9  FD903E                  STD CLIPY2
A8BC  CC1F40                  LDD #$1f40
A8BF  FDA55C                  STD CURRENTFRAMESIZE
A8C2  CC0000                  LDD #$0000
A8C5  FD65C3                  STD ORIGINX
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
A8C8  FD65C5                  STD ORIGINY
A8CB  CC00A0                  LDD #$00a0
A8CE  FD71E6                  STD CURRENTWIDTH
A8D1  CC00C8                  LDD #$00c8
A8D4  FD71EC                  STD CURRENTHEIGHT
A8D7  FC71E6                  LDD CURRENTWIDTH
A8DA  FD65C7                  STD RESOLUTIONX
A8DD  FC71EC                  LDD CURRENTHEIGHT
A8E0  FD65C9                  STD RESOLUTIONY
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$ff
                      ; peephole(6): unread1
                      ;       STB CURRENTTILES
A8E3  C614                    LDB #$14
A8E5  F7A42A                  STB CURRENTTILESWIDTH
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$19
A8E8  CC0019                  LDD #$0019
A8EB  974D                    STA <XCURSYS
A8ED  974E                    STA <YCURSYS
A8EF  F7A431                  STB CURRENTTILESHEIGHT
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
A8F2  CC4000                  LDD #$4000
A8F5  FD6773                  STD CONSOLESA
A8F8  C650                    LDB #$50
A8FA  F76775                  STB CONSOLEWB
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$c8
A8FD  CC00C8                  LDD #$00c8
A900  B7676D                  STA CONSOLEX1
A903  B7676E                  STA CONSOLEY1
A906  F76776                  STB CONSOLEHB
                      ;       CLRA
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
A909  C613                    LDB #$13
A90B  F7676F                  STB CONSOLEX2
A90E  C618                    LDB #$18
A910  F76770                  STB CONSOLEY2
A913  C614                    LDB #$14
A915  F76771                  STB CONSOLEW
A918  C619                    LDB #$19
A91A  F76772                  STB CONSOLEH
A91D  CC4000                  LDD #$4000
A920  FD6773                  STD CONSOLESA
A923  C650                    LDB #$50
A925  F76775                  STB CONSOLEWB
A928  C6C8                    LDB #$c8
A92A  F76776                  STB CONSOLEHB
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$03
A92D  CC0003                  LDD #$0003
                      ; peephole(6): unread1
                      ;       STA CURRENTTILEMODE
                              ; VSP
                              ; P:62
                              ; L:495
A930  F76F85                  STB CURRENTMODE
                      ;       CLRA
A933  BDA66F                  JSR CLS
A936  F6676D                  LDB CONSOLEX1
A939  D74D                    STB <XCURSYS
A93B  F6676E                  LDB CONSOLEY1
A93E  D74E                    STB <YCURSYS
                              ; Q _Ttmp3
                              ; Q _Ttmp669
                              ; VSP
                              ; P:5
                              ; L:496
A940  F6CAF5                  LDB _Tstr670
A943  F7C17D                  STB _Ttmp3
A946  CCCAF5                  LDD #_Tstr670
A949  FDC17B                  STD _Ttmp2
A94C  7CC17C                  INC _Ttmp2+1
A94F  2603                    BNE _label673
A951  7CC17B                  INC _Ttmp2
A954                  _label673
A954  10BEC17B                LDY _Ttmp2
A958  109F01                  STY <TEXTPTR
A95B  B6C17D                  LDA _Ttmp3
A95E  9703                    STA <TEXTSIZE
A960  BD69F3                  JSR TEXTAT
A963  F6676D                  LDB CONSOLEX1
A966  D74D                    STB <XCURSYS
A968  0C4E                    INC <YCURSYS
A96A  5F                      CLRB
A96B  964E                    LDA <YCURSYS
A96D  B16770                  CMPA CONSOLEY2
A970  2F01                    BLE _label678
A972  5A                      DECB
A973                  _label678
A973  F7C17F                  STB _Ttmp677
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp677
                              IF (((128+_label675scroll-(*+2))|(127-_label675scroll+(*+2)))&0x8000)
                              LBNE _label675scroll
                              ELSE
A976  2602                    BNE _label675scroll
                              ENDIF
                              IF (((128+_label675end-(*+2))|(127-_label675end+(*+2)))&0x8000)
                              JMP _label675end
                              ELSE
A978  200C                    BRA _label675end
                              ENDIF
A97A                  _label675scroll
A97A  86FF                    LDA #$ff
A97C  974A                    STA <DIRECTION
A97E  BDA41A                  JSR VSCROLLT
A981  F66770                  LDB CONSOLEY2
A984  D74E                    STB <YCURSYS
A986                  _label675end
                              ; Q _Ttmp2
                              ; Q _Ttmp3
                              ; Q _Ttmp669
                              ; Q _Ttmp677
                              ; Q _Ttmp679
                              ; VSP
                              ; P:41
                              ; L:497
                              IF (((128+PROCbuild_table_dist-(*+2))|(127-PROCbuild_table_dist+(*+2)))&0x8000)
A986  BDA2DD                  JSR PROCbuild_table_dist
                              ELSE
                              BSR PROCbuild_table_dist
                              ENDIF
                              ; VSP
                              ; P:5
                              ; L:498
                              IF (((128+PROCbuild_table_div_4096-(*+2))|(127-PROCbuild_table_div_4096+(*+2)))&0x8000)
A989  BDA76C                  JSR PROCbuild_table_div_4096
                              ELSE
                              BSR PROCbuild_table_div_4096
                              ENDIF
                              ; VSP
                              ; P:5
                              ; L:499
                              ; VSP
                              ; P:0
                              ; L:500
                              IF (((128+PROCrender_map-(*+2))|(127-PROCrender_map+(*+2)))&0x8000)
A98C  BDA058                  JSR PROCrender_map
                              ELSE
                              BSR PROCrender_map
                              ENDIF
                              ; VSP
                              ; P:5
                              ; L:501
                              IF (((128+PROCraycaster-(*+2))|(127-PROCraycaster+(*+2)))&0x8000)
A98F  BD897A                  JSR PROCraycaster
                              ELSE
                              BSR PROCraycaster
                              ENDIF
                              ; VSP
                              ; P:5
                              ; L:502
                              ; VSP
                              ; P:0
                              ; L:503
                              ; VSP
                              ; P:0
                              ; L:504
A992  F6CAF1                  LDB _Tstr680
A995  F7C17D                  STB _Ttmp3
A998  CCCAF1                  LDD #_Tstr680
A99B  FDC17B                  STD _Ttmp2
A99E  7CC17C                  INC _Ttmp2+1
A9A1  2603                    BNE _label683
A9A3  7CC17B                  INC _Ttmp2
A9A6                  _label683
A9A6  10BEC17B                LDY _Ttmp2
A9AA  109F01                  STY <TEXTPTR
A9AD  B6C17D                  LDA _Ttmp3
A9B0  9703                    STA <TEXTSIZE
A9B2  BD69F3                  JSR TEXTAT
A9B5  F6676D                  LDB CONSOLEX1
A9B8  D74D                    STB <XCURSYS
A9BA  0C4E                    INC <YCURSYS
A9BC  5F                      CLRB
A9BD  964E                    LDA <YCURSYS
A9BF  B16770                  CMPA CONSOLEY2
A9C2  2F01                    BLE _label687
A9C4  5A                      DECB
A9C5                  _label687
A9C5  F7C17F                  STB _Ttmp677
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp677
                              IF (((128+_label685scroll-(*+2))|(127-_label685scroll+(*+2)))&0x8000)
                              LBNE _label685scroll
                              ELSE
A9C8  2602                    BNE _label685scroll
                              ENDIF
                              IF (((128+_label685end-(*+2))|(127-_label685end+(*+2)))&0x8000)
                              JMP _label685end
                              ELSE
A9CA  200C                    BRA _label685end
                              ENDIF
A9CC                  _label685scroll
A9CC  86FF                    LDA #$ff
A9CE  974A                    STA <DIRECTION
A9D0  BDA41A                  JSR VSCROLLT
A9D3  F66770                  LDB CONSOLEY2
A9D6  D74E                    STB <YCURSYS
A9D8                  _label685end
                              ; Q _Ttmp2
                              ; Q _Ttmp3
                              ; Q _Ttmp669
                              ; Q _Ttmp677
                              ; Q _Ttmp679
                              ; VSP
                              ; P:41
                              ; L:505
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$0d
A9D8  CC000D                  LDD #$000d
A9DB  B7C17D                  STA _Ttmp3
A9DE  F7AAC0                  STB _Ttmp690
                      ;       CLRA
A9E1  C608                    LDB #$08
A9E3  F7AAA2                  STB _Ttmp694
                      ; peephole(1): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$20
A9E6  CC0020                  LDD #$0020
A9E9  B7AB0C                  STA _Ttmp697
A9EC  F7C182                  STB _Ttmp692
                      ;       CLRA
A9EF  C62C                    LDB #$2c
A9F1  F7AAB0                  STB _Ttmp691
A9F4  C620                    LDB #$20
A9F6  F7C180                  STB _Ttmp679
A9F9  C660                    LDB #$60
A9FB  F7C183                  STB _Ttmp693
A9FE  F6C181                  LDB _Ttmp689
AA01  BD72EE                  JSR DSFREE
AA04  B6C180                  LDA _Ttmp679
AA07  BD73A3                  JSR DSALLOC
AA0A  F7C181                  STB _Ttmp689
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp689
AA0D  BD7342                  JSR DSDESCRIPTOR
AA10  EC01                    LDD 1,X 
AA12  FDC17B                  STD _Ttmp2
AA15  A684                    LDA ,X 
AA17  B7C184                  STA _Ttmp695
AA1A  C68F                    LDB #$8f
AA1C  F7C17E                  STB _Ttmp669
AA1F                  _label688repeat
AA1F  7AC17E                  DEC _Ttmp669
AA22  F6C17E                  LDB _Ttmp669
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPB #$00
                              IF (((128+_label688skipcc-(*+2))|(127-_label688skipcc+(*+2)))&0x8000)
                              LBNE _label688skipcc
                              ELSE
AA25  2618                    BNE _label688skipcc
                              ENDIF
AA27  C620                    LDB #$20
AA29  F7C17E                  STB _Ttmp669
AA2C  F6C183                  LDB _Ttmp693
AA2F  C160                    CMPB #$60
                              IF (((128+_label688skipcc2-(*+2))|(127-_label688skipcc2+(*+2)))&0x8000)
                              LBEQ _label688skipcc2
                              ELSE
AA31  2707                    BEQ _label688skipcc2
                              ENDIF
AA33                  _label688skipcc3
AA33  C660                    LDB #$60
AA35  F7C183                  STB _Ttmp693
                              IF (((128+_label688skipcc-(*+2))|(127-_label688skipcc+(*+2)))&0x8000)
                              JMP _label688skipcc
                              ELSE
AA38  2005                    BRA _label688skipcc
                              ENDIF
AA3A                  _label688skipcc2
AA3A  C620                    LDB #$20
AA3C  F7C183                  STB _Ttmp693
AA3F                  _label688skipcc
AA3F  CCC183                  LDD #_Ttmp693
AA42  FDAA4C                  STD _Ttmp699
AA45  C601                    LDB #$01
AA47  F7AA52                  STB _Ttmp700
                      ; peephole(12): inlined1
                      ;       LDY _Ttmp699
AA4A  108E0000                LDY #$0000
AA4C                  _Ttmp699 equ *-2
AA4E  109F01                  STY <TEXTPTR
                      ; peephole(12): inlined1
                      ;       LDA _Ttmp700
AA51  8600                    LDA #1-1
AA52                  _Ttmp700 equ *-1
AA53  9703                    STA <TEXTSIZE
AA55  BD69F3                  JSR TEXTAT
AA58  F6676F                  LDB CONSOLEX2
AA5B  CBFF                    ADDB #$ff
AA5D  F7C17F                  STB _Ttmp677
AA60  C6FF                    LDB #$ffffffff
                      ; peephole(6): unread1
                      ;       STB _Ttmp702
                              ; variable_add_inplace_vars( , XCURSYS, Ttmp702 )
                      ; peephole(1): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB <XCURSYS
                      ;       ADDB _Ttmp702
AA62  DB4D                    ADDB <XCURSYS
AA64  D74D                    STB <XCURSYS
                              ; variable_less_than( , XCURSYS, CONSOLEX1, 0 )
AA66  5F                      CLRB
AA67  964D                    LDA <XCURSYS
AA69  B1676D                  CMPA CONSOLEX1
AA6C  2C01                    BGE _label706
AA6E  5A                      DECB
AA6F                  _label706
                      ; peephole(6): unread1
                      ;       STB _Ttmp705
AA6F  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp705
                              IF (((128+_label703g-(*+2))|(127-_label703g+(*+2)))&0x8000)
                              LBEQ _label703g
                              ELSE
AA70  2707                    BEQ _label703g
                              ENDIF
                              ; variable_move( , Ttmp677, XCURSYS )
AA72  F6676D                  LDB CONSOLEX1
AA75  D74D                    STB <XCURSYS
                              IF (((128+_label703e-(*+2))|(127-_label703e+(*+2)))&0x8000)
                              JMP _label703e
                              ELSE
AA77  2011                    BRA _label703e
                              ENDIF
AA79                  _label703g
AA79  5F                      CLRB
AA7A  964D                    LDA <XCURSYS
AA7C  B1C17F                  CMPA _Ttmp677
AA7F  2F01                    BLE _label710
AA81  5A                      DECB
AA82                  _label710
                      ; peephole(6): unread1
                      ;       STB _Ttmp709
AA82  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp709
                              IF (((128+_label703e-(*+2))|(127-_label703e+(*+2)))&0x8000)
                              LBEQ _label703e
                              ELSE
AA83  2705                    BEQ _label703e
                              ENDIF
AA85  F6C17F                  LDB _Ttmp677
AA88  D74D                    STB <XCURSYS
AA8A                  _label703e
AA8A  BD69B4                  JSR INKEY
AA8D  B7C184                  STA _Ttmp695
AA90  F7C185                  STB _Ttmp696
AA93  F6C184                  LDB _Ttmp695
                              IF (((128+_label688repeat-(*+2))|(127-_label688repeat+(*+2)))&0x8000)
                              LBEQ _label688repeat
                              ELSE
AA96  2787                    BEQ _label688repeat
                              ENDIF
AA98  F6C185                  LDB _Ttmp696
                              IF (((128+_label688repeat-(*+2))|(127-_label688repeat+(*+2)))&0x8000)
                              LBEQ _label688repeat
                              ELSE
AA9B  2782                    BEQ _label688repeat
                              ENDIF
AA9D  5F                      CLRB
AA9E  B6C185                  LDA _Ttmp696
                      ; peephole(12): inlined1
                      ;       CMPA _Ttmp694
AAA1  8100                    CMPA #1-1
AAA2                  _Ttmp694 equ *-1
AAA3  2601                    BNE _label713
AAA5  5A                      DECB
AAA6                  _label713
AAA6  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                              IF (((128+_label688backspace-(*+2))|(127-_label688backspace+(*+2)))&0x8000)
                              LBNE _label688backspace
                              ELSE
AAA9  265C                    BNE _label688backspace
                              ENDIF
AAAB  5F                      CLRB
AAAC  B6C185                  LDA _Ttmp696
                      ; peephole(12): inlined1
                      ;       CMPA _Ttmp691
AAAF  8100                    CMPA #1-1
AAB0                  _Ttmp691 equ *-1
AAB1  2601                    BNE _label714
AAB3  5A                      DECB
AAB4                  _label714
AAB4  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                              IF (((128+_label688finished-(*+2))|(127-_label688finished+(*+2)))&0x8000)
AAB7  102600F7                LBNE _label688finished
                              ELSE
                              BNE _label688finished
                              ENDIF
AABB  5F                      CLRB
AABC  B6C185                  LDA _Ttmp696
                      ; peephole(12): inlined1
                      ;       CMPA _Ttmp690
AABF  8100                    CMPA #1-1
AAC0                  _Ttmp690 equ *-1
AAC1  2601                    BNE _label715
AAC3  5A                      DECB
AAC4                  _label715
AAC4  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                              IF (((128+_label688finished-(*+2))|(127-_label688finished+(*+2)))&0x8000)
AAC7  102600E7                LBNE _label688finished
                              ELSE
                              BNE _label688finished
                              ENDIF
AACB  CCC185                  LDD #_Ttmp696
AACE  FDAAD8                  STD _Ttmp717
AAD1  C601                    LDB #$01
AAD3  F7AADE                  STB _Ttmp718
                      ; peephole(12): inlined1
                      ;       LDY _Ttmp717
AAD6  108E0000                LDY #$0000
AAD8                  _Ttmp717 equ *-2
AADA  109F01                  STY <TEXTPTR
                      ; peephole(12): inlined1
                      ;       LDA _Ttmp718
AADD  8600                    LDA #1-1
AADE                  _Ttmp718 equ *-1
AADF  9703                    STA <TEXTSIZE
AAE1  BD69F3                  JSR TEXTAT
AAE4  B6C185                  LDA _Ttmp696
AAE7  BEC17B                  LDX _Ttmp2
AAEA  F6C17D                  LDB _Ttmp3
AAED  3A                      ABX
AAEE  A784                    STA ,X
AAF0  7CC17D                  INC _Ttmp3
AAF3  5F                      CLRB
AAF4  B6C17D                  LDA _Ttmp3
AAF7  B1C180                  CMPA _Ttmp679
AAFA  2601                    BNE _label721
AAFC  5A                      DECB
AAFD                  _label721
AAFD  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                              IF (((128+_label688repeat-(*+2))|(127-_label688repeat+(*+2)))&0x8000)
AB00  1027FF1B                LBEQ _label688repeat
                              ELSE
                              BEQ _label688repeat
                              ENDIF
                              IF (((128+_label688finished-(*+2))|(127-_label688finished+(*+2)))&0x8000)
AB04  7EABB2                  JMP _label688finished
                              ELSE
                              BRA _label688finished
                              ENDIF
AB07                  _label688backspace
AB07  5F                      CLRB
AB08  B6C17D                  LDA _Ttmp3
                      ; peephole(12): inlined1
                      ;       CMPA _Ttmp697
AB0B  8100                    CMPA #1-1
AB0C                  _Ttmp697 equ *-1
AB0D  2601                    BNE _label722
AB0F  5A                      DECB
AB10                  _label722
AB10  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                              IF (((128+_label688repeat-(*+2))|(127-_label688repeat+(*+2)))&0x8000)
AB13  1026FF08                LBNE _label688repeat
                              ELSE
                              BNE _label688repeat
                              ENDIF
AB17  7AC17D                  DEC _Ttmp3
AB1A  CCC182                  LDD #_Ttmp692
AB1D  FDAB27                  STD _Ttmp724
AB20  C601                    LDB #$01
AB22  F7AB2D                  STB _Ttmp725
                      ; peephole(12): inlined1
                      ;       LDY _Ttmp724
AB25  108E0000                LDY #$0000
AB27                  _Ttmp724 equ *-2
AB29  109F01                  STY <TEXTPTR
                      ; peephole(12): inlined1
                      ;       LDA _Ttmp725
AB2C  8600                    LDA #1-1
AB2D                  _Ttmp725 equ *-1
AB2E  9703                    STA <TEXTSIZE
AB30  BD69F3                  JSR TEXTAT
AB33  F6676F                  LDB CONSOLEX2
AB36  CBFF                    ADDB #$ff
AB38  F7C186                  STB _Ttmp727
AB3B  C6FE                    LDB #$fffffffe
                      ; peephole(6): unread1
                      ;       STB _Ttmp728
                              ; variable_add_inplace_vars( , XCURSYS, Ttmp728 )
                      ; peephole(1): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB <XCURSYS
                      ;       ADDB _Ttmp728
AB3D  DB4D                    ADDB <XCURSYS
AB3F  D74D                    STB <XCURSYS
                              ; variable_less_than( , XCURSYS, CONSOLEX1, 0 )
AB41  5F                      CLRB
AB42  964D                    LDA <XCURSYS
AB44  B1676D                  CMPA CONSOLEX1
AB47  2C01                    BGE _label732
AB49  5A                      DECB
AB4A                  _label732
                      ; peephole(6): unread1
                      ;       STB _Ttmp731
AB4A  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp731
                              IF (((128+_label729g-(*+2))|(127-_label729g+(*+2)))&0x8000)
                              LBEQ _label729g
                              ELSE
AB4B  2707                    BEQ _label729g
                              ENDIF
                              ; variable_move( , Ttmp727, XCURSYS )
AB4D  F6676D                  LDB CONSOLEX1
AB50  D74D                    STB <XCURSYS
                              IF (((128+_label729e-(*+2))|(127-_label729e+(*+2)))&0x8000)
                              JMP _label729e
                              ELSE
AB52  2011                    BRA _label729e
                              ENDIF
AB54                  _label729g
AB54  5F                      CLRB
AB55  964D                    LDA <XCURSYS
AB57  B1C186                  CMPA _Ttmp727
AB5A  2F01                    BLE _label736
AB5C  5A                      DECB
AB5D                  _label736
                      ; peephole(6): unread1
                      ;       STB _Ttmp735
AB5D  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp735
                              IF (((128+_label729e-(*+2))|(127-_label729e+(*+2)))&0x8000)
                              LBEQ _label729e
                              ELSE
AB5E  2705                    BEQ _label729e
                              ENDIF
AB60  F6C186                  LDB _Ttmp727
AB63  D74D                    STB <XCURSYS
AB65                  _label729e
AB65  CCC182                  LDD #_Ttmp692
AB68  FDAB72                  STD _Ttmp739
AB6B  C601                    LDB #$01
AB6D  F7AB78                  STB _Ttmp740
                      ; peephole(12): inlined1
                      ;       LDY _Ttmp739
AB70  108E0000                LDY #$0000
AB72                  _Ttmp739 equ *-2
AB74  109F01                  STY <TEXTPTR
                      ; peephole(12): inlined1
                      ;       LDA _Ttmp740
AB77  8600                    LDA #1-1
AB78                  _Ttmp740 equ *-1
AB79  9703                    STA <TEXTSIZE
AB7B  BD69F3                  JSR TEXTAT
AB7E  F6676F                  LDB CONSOLEX2
AB81  CBFF                    ADDB #$ff
AB83  F7ABA3                  STB _Ttmp742
AB86  C6FF                    LDB #$ffffffff
                      ; peephole(6): unread1
                      ;       STB _Ttmp743
                              ; variable_add_inplace_vars( , XCURSYS, Ttmp743 )
                      ; peephole(1): r542 (STB*,LDB+,ORB/ANDB/EORB/ADDB*)->(STB*,ORB/ANDB/EORB/ADDB+)
                      ;       LDB <XCURSYS
                      ;       ADDB _Ttmp743
AB88  DB4D                    ADDB <XCURSYS
AB8A  D74D                    STB <XCURSYS
                              ; variable_less_than( , XCURSYS, CONSOLEX1, 0 )
AB8C  5F                      CLRB
AB8D  964D                    LDA <XCURSYS
AB8F  B1676D                  CMPA CONSOLEX1
AB92  2C01                    BGE _label747
AB94  5A                      DECB
AB95                  _label747
                      ; peephole(6): unread1
                      ;       STB _Ttmp746
AB95  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp746
                              IF (((128+_label744g-(*+2))|(127-_label744g+(*+2)))&0x8000)
                              LBEQ _label744g
                              ELSE
AB96  2707                    BEQ _label744g
                              ENDIF
                              ; variable_move( , Ttmp742, XCURSYS )
AB98  F6676D                  LDB CONSOLEX1
AB9B  D74D                    STB <XCURSYS
                              IF (((128+_label744e-(*+2))|(127-_label744e+(*+2)))&0x8000)
                              JMP _label744e
                              ELSE
AB9D  2010                    BRA _label744e
                              ENDIF
AB9F                  _label744g
AB9F  5F                      CLRB
ABA0  964D                    LDA <XCURSYS
                      ; peephole(12): inlined1
                      ;       CMPA _Ttmp742
ABA2  8100                    CMPA #1-1
ABA3                  _Ttmp742 equ *-1
ABA4  2F01                    BLE _label751
ABA6  5A                      DECB
ABA7                  _label751
                      ; peephole(6): unread1
                      ;       STB _Ttmp750
ABA7  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp750
                              IF (((128+_label744e-(*+2))|(127-_label744e+(*+2)))&0x8000)
                              LBEQ _label744e
                              ELSE
ABA8  2705                    BEQ _label744e
                              ENDIF
ABAA  F6ABA3                  LDB _Ttmp742
ABAD  D74D                    STB <XCURSYS
ABAF                  _label744e
                              IF (((128+_label688repeat-(*+2))|(127-_label688repeat+(*+2)))&0x8000)
ABAF  7EAA1F                  JMP _label688repeat
                              ELSE
                              BRA _label688repeat
                              ENDIF
ABB2                  _label688finished
ABB2  B6C17D                  LDA _Ttmp3
ABB5  F6C181                  LDB _Ttmp689
ABB8  BD7320                  JSR DSRESIZE
ABBB  F6C181                  LDB _Ttmp689
ABBE  BD7342                  JSR DSDESCRIPTOR
ABC1  EC01                    LDD 1,X 
ABC3  FDABE8                  STD _Ttmp753
ABC6  A684                    LDA ,X 
ABC8  B7ABD1                  STA _Ttmp754
                      ; peephole(12): inlined1
                      ;       LDB _go
ABCB  C600                    LDB #1-1
ABCC                  _go equ *-1
ABCD  BD72EE                  JSR DSFREE
                      ; peephole(12): inlined1
                      ;       LDA _Ttmp754
ABD0  8600                    LDA #1-1
ABD1                  _Ttmp754 equ *-1
ABD2  BD73A3                  JSR DSALLOC
ABD5  F7ABCC                  STB _go
                      ; peephole(1): r344 (STORE*,LOAD*)->(STORE*)
                      ;       LDB _go
ABD8  BD7342                  JSR DSDESCRIPTOR
ABDB  EC01                    LDD 1,X 
ABDD  FDABEB                  STD _Ttmp755
ABE0  A684                    LDA ,X 
                      ; peephole(6): unread1
                      ;       STA _Ttmp756
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
ABE2  4F                      CLRA
ABE3  F6ABD1                  LDB _Ttmp754
                      ; peephole(12): inlined1
                      ;       LDY _Ttmp753
ABE6  108E0000                LDY #$0000
ABE8                  _Ttmp753 equ *-2
                      ; peephole(12): inlined1
                      ;       LDX _Ttmp755
ABEA  8E0000                  LDX #$0000
ABEB                  _Ttmp755 equ *-2
ABED  BD6507                  JSR DUFFDEVICE
ABF0  F6676D                  LDB CONSOLEX1
ABF3  D74D                    STB <XCURSYS
ABF5  0C4E                    INC <YCURSYS
ABF7  5F                      CLRB
ABF8  964E                    LDA <YCURSYS
ABFA  B16770                  CMPA CONSOLEY2
ABFD  2F01                    BLE _label761
ABFF  5A                      DECB
AC00                  _label761
                      ; peephole(6): unread1
                      ;       STB _Ttmp760
AC00  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp760
                              IF (((128+_label757scroll-(*+2))|(127-_label757scroll+(*+2)))&0x8000)
                              LBNE _label757scroll
                              ELSE
AC01  2602                    BNE _label757scroll
                              ENDIF
                              IF (((128+_label757end-(*+2))|(127-_label757end+(*+2)))&0x8000)
                              JMP _label757end
                              ELSE
AC03  200C                    BRA _label757end
                              ENDIF
AC05                  _label757scroll
AC05  86FF                    LDA #$ff
AC07  974A                    STA <DIRECTION
AC09  BDA41A                  JSR VSCROLLT
AC0C  F66770                  LDB CONSOLEY2
AC0F  D74E                    STB <YCURSYS
AC11                  _label757end
                              ; Q _Ttmp2
                              ; Q _Ttmp3
                              ; Q _Ttmp669
                              ; Q _Ttmp677
                              ; Q _Ttmp679
                              ; Q _Ttmp690
                              ; Q _Ttmp691
                              ; Q _Ttmp692
                              ; Q _Ttmp693
                              ; Q _Ttmp694
                              ; Q _Ttmp695
                              ; Q _Ttmp696
                              ; Q _Ttmp697
                              ; Q _Ttmp699
                              ; Q _Ttmp700
                              ; Q _Ttmp702
                              ; Q _Ttmp705
                              ; Q _Ttmp707
                              ; Q _Ttmp709
                              ; Q _Ttmp711
                              ; Q _Ttmp717
                              ; Q _Ttmp718
                              ; Q _Ttmp724
                              ; Q _Ttmp725
                              ; Q _Ttmp727
                              ; Q _Ttmp728
                              ; Q _Ttmp731
                              ; Q _Ttmp733
                              ; Q _Ttmp735
                              ; Q _Ttmp737
                              ; Q _Ttmp739
                              ; Q _Ttmp740
                              ; Q _Ttmp742
                              ; Q _Ttmp743
                              ; Q _Ttmp746
                              ; Q _Ttmp748
                              ; Q _Ttmp750
                              ; Q _Ttmp752
                              ; Q _Ttmp753
                              ; Q _Ttmp754
                              ; Q _Ttmp755
                              ; Q _Ttmp756
                              ; Q _Ttmp758
                              ; Q _Ttmp760
                              ; Q _Ttmp762
                              ; VSP
                              ; P:382
                              ; L:506
                              ; VSP
                              ; P:0
                              ; L:507
                              IF (((128+_label763prepa-(*+2))|(127-_label763prepa+(*+2)))&0x8000)
                              JMP _label763prepa
                              ELSE
AC11  2018                    BRA _label763prepa
                              ENDIF
AC13                  _label763prepfrom
                      ; peephole(2): r877 (LDB#,STB,CLRA)->(LDD#,STB)
                      ;       LDB #$01
AC13  CC0001                  LDD #$0001
AC16  F7C17D                  STB _Ttmp3
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp3
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ;       CLRA
AC19  FDC297                  STD _TRtmp764
AC1C  39                      RTS
AC1D                  _label763prepto
AC1D  CC03E8                  LDD #$03e8
                      ; peephole(1): r615 (STDa,LDDa,STDb)->(STDb)
                      ;       STD _Ttmp765
                      ;       LDD _Ttmp765
AC20  FDC299                  STD _TRtmp766
AC23  39                      RTS
AC24                  _label763prepstep
AC24  CC0001                  LDD #$0001
AC27  FDC29B                  STD _TRtmp767
AC2A  39                      RTS
AC2B                  _label763prepa
                              IF (((128+_label763prepfrom-(*+2))|(127-_label763prepfrom+(*+2)))&0x8000)
                              JSR _label763prepfrom
                              ELSE
AC2B  8DE6                    BSR _label763prepfrom
                              ENDIF
                              IF (((128+_label763prepto-(*+2))|(127-_label763prepto+(*+2)))&0x8000)
                              JSR _label763prepto
                              ELSE
AC2D  8DEE                    BSR _label763prepto
                              ENDIF
                              IF (((128+_label763prepstep-(*+2))|(127-_label763prepstep+(*+2)))&0x8000)
                              JSR _label763prepstep
                              ELSE
AC2F  8DF3                    BSR _label763prepstep
                              ENDIF
AC31  FCC297                  LDD _TRtmp764
AC34  FDC16C                  STD _i
AC37                  _label763bf
AC37  5F                      CLRB
AC38  BEC29B                  LDX _TRtmp767
                      ; peephole(1): r452 (LOAD/STORE,CMP#0)->(LOAD/STORE)
                      ;       CMPX #$0000
AC3B  2F01                    BLE _label769
AC3D  5A                      DECB
AC3E                  _label769
AC3E  F7C17F                  STB _Ttmp677
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp677
                              IF (((128+_label763forw-(*+2))|(127-_label763forw+(*+2)))&0x8000)
                              LBNE _label763forw
                              ELSE
AC41  2602                    BNE _label763forw
                              ENDIF
                              IF (((128+_label763back-(*+2))|(127-_label763back+(*+2)))&0x8000)
                              JMP _label763back
                              ELSE
AC43  2020                    BRA _label763back
                              ENDIF
AC45                  _label763forw
AC45  5F                      CLRB
AC46  BEC16C                  LDX _i
AC49  BCC297                  CMPX _TRtmp764
AC4C  2C01                    BGE _label771
AC4E  5A                      DECB
AC4F                  _label771
                      ; peephole(6): unread1
                      ;       STB _Ttmp702
AC4F  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp702
                              IF (((128+_label763bis-(*+2))|(127-_label763bis+(*+2)))&0x8000)
AC50  102600A2                LBNE _label763bis
                              ELSE
                              BNE _label763bis
                              ENDIF
AC54  5F                      CLRB
AC55  BEC16C                  LDX _i
AC58  BCC299                  CMPX _TRtmp766
AC5B  2F01                    BLE _label773
AC5D  5A                      DECB
AC5E                  _label773
                      ; peephole(6): unread1
                      ;       STB _Ttmp705
AC5E  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp705
                              IF (((128+_label763bis-(*+2))|(127-_label763bis+(*+2)))&0x8000)
AC5F  10260093                LBNE _label763bis
                              ELSE
                              BNE _label763bis
                              ENDIF
                              IF (((128+_label763cont-(*+2))|(127-_label763cont+(*+2)))&0x8000)
                              JMP _label763cont
                              ELSE
AC63  201E                    BRA _label763cont
                              ENDIF
AC65                  _label763back
AC65  5F                      CLRB
AC66  BEC16C                  LDX _i
AC69  BCC297                  CMPX _TRtmp764
AC6C  2F01                    BLE _label775
AC6E  5A                      DECB
AC6F                  _label775
                      ; peephole(6): unread1
                      ;       STB _Ttmp709
AC6F  5D                      TSTB
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp709
                              IF (((128+_label763bis-(*+2))|(127-_label763bis+(*+2)))&0x8000)
AC70  10260082                LBNE _label763bis
                              ELSE
                              BNE _label763bis
                              ENDIF
AC74  5F                      CLRB
AC75  BEC16C                  LDX _i
AC78  BCC299                  CMPX _TRtmp766
AC7B  2C01                    BGE _label777
AC7D  5A                      DECB
AC7E                  _label777
AC7E  F7C186                  STB _Ttmp727
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp727
                              IF (((128+_label763bis-(*+2))|(127-_label763bis+(*+2)))&0x8000)
                              LBNE _label763bis
                              ELSE
AC81  2673                    BNE _label763bis
                              ENDIF
AC83                  _label763cont
                              ; Q _Ttmp669
                              ; Q _Ttmp677
                              ; Q _Ttmp679
                              ; Q _Ttmp695
                              ; Q _Ttmp702
                              ; Q _Ttmp705
                              ; Q _Ttmp709
                              ; Q _Ttmp727
                              ; VSP
                              ; P:119
                              ; L:508
                              IF (((128+PROCrender_view_v4-(*+2))|(127-PROCrender_view_v4+(*+2)))&0x8000)
AC83  BDA019                  JSR PROCrender_view_v4
                              ELSE
                              BSR PROCrender_view_v4
                              ENDIF
                              ; VSP
                              ; P:5
                              ; L:509
AC86  4F                      CLRA
AC87  B7C17E                  STA _Ttmp669
                      ; peephole(1): r810 [A=0](CLRA)->()
                      ;       CLRA
AC8A  B7C180                  STA _Ttmp679
AC8D  C610                    LDB #$10
AC8F  F7C184                  STB _Ttmp695
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp695
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
AC92  FDAC99                  STD _Ttmp778
AC95  FCC16C                  LDD _i
                      ; peephole(12): inlined1
                      ;       LDX _Ttmp778
AC98  8E0000                  LDX #$0000
AC99                  _Ttmp778 equ *-2
AC9B  BD7805                  JSR CPUMATHDIV16BITTO16BIT_SIGNED
AC9E  BFACA2                  STX _Ttmp780
                      ; peephole(6): unread1
                      ;       STD _Ttmp779
                      ; peephole(12): inlined1
                      ;       LDD _Ttmp780
ACA1  CC0000                  LDD #$0000
ACA2                  _Ttmp780 equ *-2
ACA4  F7ACB9                  STB _Ttmp781
ACA7  CC0000                  LDD #$0000
ACAA  FDACB3                  STD _Ttmp782
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
ACAD  FDACB6                  STD _Ttmp783
ACB0  8601                    LDA #1
                      ; peephole(12): inlined1
                      ;       LDX _Ttmp782
ACB2  8E0000                  LDX #$0000
ACB3                  _Ttmp782 equ *-2
                      ; peephole(12): inlined1
                      ;       LDU _Ttmp783
ACB5  CE0000                  LDU #$0000
ACB6                  _Ttmp783 equ *-2
                      ; peephole(12): inlined1
                      ;       LDB _Ttmp781
ACB8  C600                    LDB #1-1
ACB9                  _Ttmp781 equ *-1
ACBA  D748                    STB <PLOTCPE
ACBC  BD9032                  JSR PLOT
ACBF  F6ACB9                  LDB _Ttmp781
ACC2  F76A25                  STB _PEN
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
ACC5  4F                      CLRA
ACC6  F6C17E                  LDB _Ttmp669
ACC9  FD65B9                  STD XGR
                      ; peephole(1): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #0
                      ; peephole(2): r810 [A=0](CLRA)->()
                      ;       CLRA
ACCC  F6C180                  LDB _Ttmp679
ACCF  FD65BB                  STD YGR
                              ; V _Ttmp669
                              ; V _Ttmp679
                              ; V _Ttmp695
                              ; Q _Ttmp697
                              ; Q _Ttmp700
                              ; Q _Ttmp707
                              ; Q _Ttmp711
                              ; Q _Ttmp718
                              ; V _Ttmp778
                              ; Q _Ttmp779
                              ; Q _Ttmp780
                              ; Q _Ttmp781
                              ; V _Ttmp782
                              ; V _Ttmp783
                              ; VSP
                              ; P:34
                              ; L:510
                              IF (((128+_label763prepfrom-(*+2))|(127-_label763prepfrom+(*+2)))&0x8000)
ACD2  BDAC13                  JSR _label763prepfrom
                              ELSE
                              BSR _label763prepfrom
                              ENDIF
                              IF (((128+_label763prepto-(*+2))|(127-_label763prepto+(*+2)))&0x8000)
ACD5  BDAC1D                  JSR _label763prepto
                              ELSE
                              BSR _label763prepto
                              ENDIF
                              IF (((128+_label763prepstep-(*+2))|(127-_label763prepstep+(*+2)))&0x8000)
ACD8  BDAC24                  JSR _label763prepstep
                              ELSE
                              BSR _label763prepstep
                              ENDIF
ACDB  FCC29B                  LDD _TRtmp767
ACDE  F3C16C                  ADDD _i
ACE1  FDC16C                  STD _i
ACE4  5F                      CLRB
ACE5  BEC16C                  LDX _i
ACE8  BCC297                  CMPX _TRtmp764
ACEB  2601                    BNE _label785
ACED  5A                      DECB
ACEE                  _label785
ACEE  F7C17F                  STB _Ttmp677
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp677
                              IF (((128+_label763bis-(*+2))|(127-_label763bis+(*+2)))&0x8000)
                              LBNE _label763bis
                              ELSE
ACF1  2603                    BNE _label763bis
                              ENDIF
                              IF (((128+_label763bf-(*+2))|(127-_label763bf+(*+2)))&0x8000)
ACF3  7EAC37                  JMP _label763bf
                              ELSE
                              BRA _label763bf
                              ENDIF
ACF6                  _label763bis
                              ; V _Ttmp3
                              ; Q _Ttmp677
                              ; V _Ttmp765
                              ; VSP
                              ; P:37
                              ; L:511
                              ; VSP
                              ; P:0
                              ; L:512
ACF6  F6CAED                  LDB _Tstr786
ACF9  F7C17D                  STB _Ttmp3
ACFC  CCCAED                  LDD #_Tstr786
ACFF  FDC17B                  STD _Ttmp2
AD02  7CC17C                  INC _Ttmp2+1
AD05  2603                    BNE _label789
AD07  7CC17B                  INC _Ttmp2
AD0A                  _label789
AD0A  10BEC17B                LDY _Ttmp2
AD0E  109F01                  STY <TEXTPTR
AD11  B6C17D                  LDA _Ttmp3
AD14  9703                    STA <TEXTSIZE
AD16  BD69F3                  JSR TEXTAT
AD19  F6676D                  LDB CONSOLEX1
AD1C  D74D                    STB <XCURSYS
AD1E  0C4E                    INC <YCURSYS
AD20  5F                      CLRB
AD21  964E                    LDA <YCURSYS
AD23  B16770                  CMPA CONSOLEY2
AD26  2F01                    BLE _label793
AD28  5A                      DECB
AD29                  _label793
AD29  F7C17F                  STB _Ttmp677
                      ; peephole(1): r717 (ST*a,LD*a)->(ST*a)
                      ;       LDB _Ttmp677
                              IF (((128+_label791scroll-(*+2))|(127-_label791scroll+(*+2)))&0x8000)
                              LBNE _label791scroll
                              ELSE
AD2C  2602                    BNE _label791scroll
                              ENDIF
                              IF (((128+_label791end-(*+2))|(127-_label791end+(*+2)))&0x8000)
                              JMP _label791end
                              ELSE
AD2E  200C                    BRA _label791end
                              ENDIF
AD30                  _label791scroll
AD30  86FF                    LDA #$ff
AD32  974A                    STA <DIRECTION
AD34  BDA41A                  JSR VSCROLLT
AD37  F66770                  LDB CONSOLEY2
AD3A  D74E                    STB <YCURSYS
AD3C                  _label791end
                              ; Q _Ttmp2
                              ; Q _Ttmp3
                              ; Q _Ttmp669
                              ; Q _Ttmp677
                              ; Q _Ttmp679
                              ; VSP
                              ; P:41
                              ; L:513
                              ; VSP
                              ; P:0
                              ; L:513
                              ; P:0
AD3C                  _label794
                              IF (((128+_label794-(*+2))|(127-_label794+(*+2)))&0x8000)
                              JMP _label794
                              ELSE
AD3C  20FE                    BRA _label794
                              ENDIF
0020                  _map_width EQU $0020
0018                  _map_height EQU $0018
0080                  _screen_width EQU $0080
00C8                  _screen_height EQU $00c8
0080                  _move_speed EQU $0080
0167                  _rot_speed EQU $0167
0800                  _max_dist EQU $0800
0180                  _max_div_4096 EQU $0180
AD3E  0000            _vblast_address  fdb $0000
AD40  160220000000280050007800A000C800 _vblast_bin fcb $16,$02,$20,$00,$00,$00,$28,$00,$50,$00,$78,$00,$a0,$00,$c8,    $00
AD50  F0011801400168019001B801E0020802         fcb $f0,$01,$18,$01,$40,$01,$68,$01,$90,$01,$b8,$01,$e0,$02,$08,        $02
AD60  300258028002A802D002F80320034803         fcb $30,$02,$58,$02,$80,$02,$a8,$02,$d0,$02,$f8,$03,$20,$03,$48,        $03
AD70  70039803C003E8041004380460048804         fcb $70,$03,$98,$03,$c0,$03,$e8,$04,$10,$04,$38,$04,$60,$04,$88,        $04
AD80  B004D8050005280550057805A005C805         fcb $b0,$04,$d8,$05,$00,$05,$28,$05,$50,$05,$78,$05,$a0,$05,$c8,        $05
AD90  F0061806400668069006B806E0070807         fcb $f0,$06,$18,$06,$40,$06,$68,$06,$90,$06,$b8,$06,$e0,$07,$08,        $07
ADA0  300758078007A807D007F80820084808         fcb $30,$07,$58,$07,$80,$07,$a8,$07,$d0,$07,$f8,$08,$20,$08,$48,        $08
ADB0  70089808C008E8091009380960098809         fcb $70,$08,$98,$08,$c0,$08,$e8,$09,$10,$09,$38,$09,$60,$09,$88,        $09
ADC0  B009D80A000A280A500A780AA00AC80A         fcb $b0,$09,$d8,$0a,$00,$0a,$28,$0a,$50,$0a,$78,$0a,$a0,$0a,$c8,        $0a
ADD0  F00B180B400B680B900BB80BE00C080C         fcb $f0,$0b,$18,$0b,$40,$0b,$68,$0b,$90,$0b,$b8,$0b,$e0,$0c,$08,        $0c
ADE0  300C580C800CA80CD00CF80D200D480D         fcb $30,$0c,$58,$0c,$80,$0c,$a8,$0c,$d0,$0c,$f8,$0d,$20,$0d,$48,        $0d
ADF0  700D980DC00DE80E100E380E600E880E         fcb $70,$0d,$98,$0d,$c0,$0d,$e8,$0e,$10,$0e,$38,$0e,$60,$0e,$88,        $0e
AE00  B00ED80F000F280F500F780FA00FC80F         fcb $b0,$0e,$d8,$0f,$00,$0f,$28,$0f,$50,$0f,$78,$0f,$a0,$0f,$c8,        $0f
AE10  F0101810401068109010B810E0110811         fcb $f0,$10,$18,$10,$40,$10,$68,$10,$90,$10,$b8,$10,$e0,$11,$08,        $11
AE20  301158118011A811D011F81220124812         fcb $30,$11,$58,$11,$80,$11,$a8,$11,$d0,$11,$f8,$12,$20,$12,$48,        $12
AE30  70129812C012E8131013381360138813         fcb $70,$12,$98,$12,$c0,$12,$e8,$13,$10,$13,$38,$13,$60,$13,$88,        $13
AE40  B013D8140014281450147814A014C814         fcb $b0,$13,$d8,$14,$00,$14,$28,$14,$50,$14,$78,$14,$a0,$14,$c8,        $14
AE50  F0151815401568159015B815E0160816         fcb $f0,$15,$18,$15,$40,$15,$68,$15,$90,$15,$b8,$15,$e0,$16,$08,        $16
AE60  301658168016A816D016F81720174817         fcb $30,$16,$58,$16,$80,$16,$a8,$16,$d0,$16,$f8,$17,$20,$17,$48,        $17
AE70  70179817C017E8181018381860188818         fcb $70,$17,$98,$17,$c0,$17,$e8,$18,$10,$18,$38,$18,$60,$18,$88,        $18
AE80  B018D8190019281950197819A019C819         fcb $b0,$18,$d8,$19,$00,$19,$28,$19,$50,$19,$78,$19,$a0,$19,$c8,        $19
AE90  F01A181A401A681A901AB81AE01B081B         fcb $f0,$1a,$18,$1a,$40,$1a,$68,$1a,$90,$1a,$b8,$1a,$e0,$1b,$08,        $1b
AEA0  301B581B801BA81BD01BF81C201C481C         fcb $30,$1b,$58,$1b,$80,$1b,$a8,$1b,$d0,$1b,$f8,$1c,$20,$1c,$48,        $1c
AEB0  701C981CC01CE81D101D381D601D881D         fcb $70,$1c,$98,$1c,$c0,$1c,$e8,$1d,$10,$1d,$38,$1d,$60,$1d,$88,        $1d
AEC0  B01DD81E001E281E501E781EA01EC81E         fcb $b0,$1d,$d8,$1e,$00,$1e,$28,$1e,$50,$1e,$78,$1e,$a0,$1e,$c8,        $1e
AED0  F01F1800000000400800000000000000         fcb $f0,$1f,$18,$00,$00,$00,$00,$40,$08,$00,$00,$00,$00,$00,$00,        $00
AEE0  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AEF0  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF00  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF10  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF20  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF30  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF40  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF50  00000000000000000000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,        $00
AF60  0000003476AF8DFF6A10AF8DFF67EF8D         fcb $00,$00,$00,$34,$76,$af,$8d,$ff,$6a,$10,$af,$8d,$ff,$67,$ef,        $8d
AF70  FF65B6E7C38A01B7E7C3C6008D1ACB04         fcb $ff,$65,$b6,$e7,$c3,$8a,$01,$b7,$e7,$c3,$c6,$00,$8d,$1a,$cb,        $04
AF80  C18025F8B6E7C384FEB7E7C3C6028D08         fcb $c1,$80,$25,$f8,$b6,$e7,$c3,$84,$fe,$b7,$e7,$c3,$c6,$02,$8d,        $08
AF90  CB04C18225F835F63436AE8DFF353A33         fcb $cb,$04,$c1,$82,$25,$f8,$35,$f6,$34,$36,$ae,$8d,$ff,$35,$3a,        $33
AFA0  84AE8DFF303A3184AE8DFF2B54543AE6         fcb $84,$ae,$8d,$ff,$30,$3a,$31,$84,$ae,$8d,$ff,$2b,$54,$54,$3a,        $e6
AFB0  C4E1412556C6C854E0C43404A6623420         fcb $c4,$e1,$41,$25,$56,$c6,$c8,$54,$e0,$c4,$34,$04,$a6,$62,$34,        $20
AFC0  318DFF1F31A6E1A422048D73200EE6A4         fcb $31,$8d,$ff,$1f,$31,$a6,$e1,$a4,$22,$04,$8d,$73,$20,$0e,$e6,        $a4
AFD0  8D6DE662E0A4340486EE8D73E7A43520         fcb $8d,$6d,$e6,$62,$e0,$a4,$34,$04,$86,$ee,$8d,$73,$e7,$a4,$35,        $20
AFE0  E6C4E041A6A4484848488B0E34068D5F         fcb $e6,$c4,$e0,$41,$a6,$a4,$48,$48,$48,$48,$8b,$0e,$34,$06,$8d,        $5f
AFF0  E6415884F0AB218D56350684F08B0F8D         fcb $e6,$41,$58,$84,$f0,$ab,$21,$8d,$56,$35,$06,$84,$f0,$8b,$0f,        $8d
B000  4E350486FF8D4835042032C6C854E041         fcb $4e,$35,$04,$86,$ff,$8d,$48,$35,$04,$20,$32,$c6,$c8,$54,$e0,        $41
B010  340486EE8D39E641E0C4A6218BE03404         fcb $34,$04,$86,$ee,$8d,$39,$e6,$41,$e0,$c4,$a6,$21,$8b,$e0,$34,        $04
B020  8D2DE6C458A6A448484848AB218D2035         fcb $8d,$2d,$e6,$c4,$58,$a6,$a4,$48,$48,$48,$48,$ab,$21,$8d,$20,        $35
B030  04A6218BF08D18350486FF8D1235B634         fcb $04,$a6,$21,$8b,$f0,$8d,$18,$35,$04,$86,$ff,$8d,$12,$35,$b6,        $34
B040  464FE66158338DFCFAECCB308B35C634         fcb $46,$4f,$e6,$61,$58,$33,$8d,$fc,$fa,$ec,$cb,$30,$8b,$35,$c6,        $34
B050  464F50CB6458495849ED8C03A6E4167C         fcb $46,$4f,$50,$cb,$64,$58,$49,$58,$49,$ed,$8c,$03,$a6,$e4,$16,        $7c
B060  DFA7890F78A7890F50A7890F28A7890F         fcb $df,$a7,$89,$0f,$78,$a7,$89,$0f,$50,$a7,$89,$0f,$28,$a7,$89,        $0f
B070  00A7890ED8A7890EB0A7890E88A7890E         fcb $00,$a7,$89,$0e,$d8,$a7,$89,$0e,$b0,$a7,$89,$0e,$88,$a7,$89,        $0e
B080  60A7890E38A7890E10A7890DE8A7890D         fcb $60,$a7,$89,$0e,$38,$a7,$89,$0e,$10,$a7,$89,$0d,$e8,$a7,$89,        $0d
B090  C0A7890D98A7890D70A7890D48A7890D         fcb $c0,$a7,$89,$0d,$98,$a7,$89,$0d,$70,$a7,$89,$0d,$48,$a7,$89,        $0d
B0A0  20A7890CF8A7890CD0A7890CA8A7890C         fcb $20,$a7,$89,$0c,$f8,$a7,$89,$0c,$d0,$a7,$89,$0c,$a8,$a7,$89,        $0c
B0B0  80A7890C58A7890C30A7890C08A7890B         fcb $80,$a7,$89,$0c,$58,$a7,$89,$0c,$30,$a7,$89,$0c,$08,$a7,$89,        $0b
B0C0  E0A7890BB8A7890B90A7890B68A7890B         fcb $e0,$a7,$89,$0b,$b8,$a7,$89,$0b,$90,$a7,$89,$0b,$68,$a7,$89,        $0b
B0D0  40A7890B18A7890AF0A7890AC8A7890A         fcb $40,$a7,$89,$0b,$18,$a7,$89,$0a,$f0,$a7,$89,$0a,$c8,$a7,$89,        $0a
B0E0  A0A7890A78A7890A50A7890A28A7890A         fcb $a0,$a7,$89,$0a,$78,$a7,$89,$0a,$50,$a7,$89,$0a,$28,$a7,$89,        $0a
B0F0  00A78909D8A78909B0A7890988A78909         fcb $00,$a7,$89,$09,$d8,$a7,$89,$09,$b0,$a7,$89,$09,$88,$a7,$89,        $09
B100  60A7890938A7890910A78908E8A78908         fcb $60,$a7,$89,$09,$38,$a7,$89,$09,$10,$a7,$89,$08,$e8,$a7,$89,        $08
B110  C0A7890898A7890870A7890848A78908         fcb $c0,$a7,$89,$08,$98,$a7,$89,$08,$70,$a7,$89,$08,$48,$a7,$89,        $08
B120  20A78907F8A78907D0A78907A8A78907         fcb $20,$a7,$89,$07,$f8,$a7,$89,$07,$d0,$a7,$89,$07,$a8,$a7,$89,        $07
B130  80A7890758A7890730A7890708A78906         fcb $80,$a7,$89,$07,$58,$a7,$89,$07,$30,$a7,$89,$07,$08,$a7,$89,        $06
B140  E0A78906B8A7890690A7890668A78906         fcb $e0,$a7,$89,$06,$b8,$a7,$89,$06,$90,$a7,$89,$06,$68,$a7,$89,        $06
B150  40A7890618A78905F0A78905C8A78905         fcb $40,$a7,$89,$06,$18,$a7,$89,$05,$f0,$a7,$89,$05,$c8,$a7,$89,        $05
B160  A0A7890578A7890550A7890528A78905         fcb $a0,$a7,$89,$05,$78,$a7,$89,$05,$50,$a7,$89,$05,$28,$a7,$89,        $05
B170  00A78904D8A78904B0A7890488A78904         fcb $00,$a7,$89,$04,$d8,$a7,$89,$04,$b0,$a7,$89,$04,$88,$a7,$89,        $04
B180  60A7890438A7890410A78903E8A78903         fcb $60,$a7,$89,$04,$38,$a7,$89,$04,$10,$a7,$89,$03,$e8,$a7,$89,        $03
B190  C0A7890398A7890370A7890348A78903         fcb $c0,$a7,$89,$03,$98,$a7,$89,$03,$70,$a7,$89,$03,$48,$a7,$89,        $03
B1A0  20A78902F8A78902D0A78902A8A78902         fcb $20,$a7,$89,$02,$f8,$a7,$89,$02,$d0,$a7,$89,$02,$a8,$a7,$89,        $02
B1B0  80A7890258A7890230A7890208A78901         fcb $80,$a7,$89,$02,$58,$a7,$89,$02,$30,$a7,$89,$02,$08,$a7,$89,        $01
B1C0  E0A78901B8A7890190A7890168A78901         fcb $e0,$a7,$89,$01,$b8,$a7,$89,$01,$90,$a7,$89,$01,$68,$a7,$89,        $01
B1D0  40A7890118A78900F0A78900C8A78900         fcb $40,$a7,$89,$01,$18,$a7,$89,$00,$f0,$a7,$89,$00,$c8,$a7,$89,        $00
B1E0  A0A7890078A7890050A7890028A78900         fcb $a0,$a7,$89,$00,$78,$a7,$89,$00,$50,$a7,$89,$00,$28,$a7,$89,        $00
B1F0  004FE66158338DFB4AECCB308B35C600         fcb $00,$4f,$e6,$61,$58,$33,$8d,$fb,$4a,$ec,$cb,$30,$8b,$35,$c6, $0
table_dist rzb 2048
BA00  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _table_div_4096 rzb 768
world_map fcb
C000  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _line_height_array rzb 128
C080  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _color_array rzb 128
C100  010203040500    _colors fcb $01,$02,$03,$04,$05,$0
                      ; peephole(12): inlined3
                      ;_default_color  fdb $0007
                      ; peephole(12): inlined3
                      ;_pos_x  fdb $1200
C106  0C00            _pos_y  fdb $0c00
                      ; peephole(12): inlined3
                      ;_dir_x0  fdb $ff00
                      ; peephole(12): inlined3
                      ;_dir_y0  fdb $0000
                      ; peephole(12): inlined3
                      ;_dir_x  fdb $ff00
                      ; peephole(12): inlined3
                      ;_dir_y  fdb $0000
                      ; peephole(12): inlined3
                      ;_plane_x0  fdb $0000
                      ; peephole(12): inlined3
                      ;_plane_y0  fdb $ff80
C108  0000            _plane_x  fdb $0000
                      ; peephole(12): inlined3
                      ;_plane_y  fdb $ff80
                      ; peephole(6): unread2
                      ;_map_z  fdb $0000
C10A  0000            _angle  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_new_pos_x  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_new_pos_y  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_old_dir_x  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_old_dir_y  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_old_plane_x  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_new_map_x  fdb $0000
                      ; peephole(12): inlined3
                      ;_event_handler_map_pos  fdb $0000
C10C  0000            _raycaster_ray_dir_x  fdb $0000
C10E  0000            _raycaster_ray_dir_y  fdb $0000
C110  0000            _raycaster_delta_dir_x  fdb $0000
C112  0000            _raycaster_delta_dir_y  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_ray_dir_x0  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_ray_dir_y0  fdb $0000
C114  0000            _raycaster_delta_dist_x  fdb $0000
C116  0000            _raycaster_delta_dist_y  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_perp_wall_dist  fdb $0000
C118  0000            _raycaster_side_dist_x  fdb $0000
C11A  0000            _raycaster_side_dist_y  fdb $0000
C11C  0000            _raycaster_map_pointer  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_map_pointer_0  fdb $0000
                      ; peephole(6): unread2
                      ;_raycaster_temp_int  fdb $0000
                      ; peephole(6): unread2
                      ;_raycaster_temp_word  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_map_X0  fdb $0000
C11E  0000            _raycaster_v1  fdb $0000
C120  0000            _raycaster_v3  fdb $0000
C122  0000            _raycaster_step_x  fdb $0000
C124  0000            _raycaster_step_y  fdb $0000
C126  0000            _draw__x0  fdb $0000
C128  0000            _draw__y0  fdb $0000
C12A  0000            _draw__x1  fdb $0000
C12C  0000            _draw__y1  fdb $0000
C12E  0000            _render_view_v1_middle  fdb $0000
C130  0000            _render_view_v1_line_height  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_color  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_draw_start  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_draw_end  fdb $0000
C132  0000            _render_view_v1_screen_x  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_middle  fdb $0000
C134  0000            _render_view_v2_line_height1  fdb $0000
C136  0000            _render_view_v2_line_height2  fdb $0000
C138  0000            _render_view_v2_color1  fdb $0000
C13A  0000            _render_view_v2_color2  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_draw_start1  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_draw_start2  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_draw_end1  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_draw_end2  fdb $0000
C13C  0000            _render_view_v2_x  fdb $0000
                      ; peephole(12): direct-page4
                      ;_render_view_v2_y  fdb $0000
00F7                  _render_view_v2_y equ $f7
                      ; peephole(12): inlined3
                      ;_render_view_v2_ram_a  fdb $0000
C13E  0000            _render_view_v2_sky_height  fdb $0000
C140  0000            _render_view_v2_one_pix_height  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_segment_sky  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_segment_floor  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_segment_one_pix_sky  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_segment_one_pix_floor  fdb $0000
C142  0000            _render_view_v2_bitmap_address  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_color1_hi  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_color2_hi  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v2_sky_hi  fdb $0000
C144  0000            _render_view_v2_address  fdb $0000
C146  0000            _render_view_v3_vblast_target  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v3_middle  fdb $0000
C148  0000            _render_view_v3_line_height1  fdb $0000
C14A  0000            _render_view_v3_line_height2  fdb $0000
C14C  0000            _render_view_v3_color1  fdb $0000
C14E  0000            _render_view_v3_color2  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_draw_start1  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_draw_start2  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_draw_end1  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_draw_end2  fdb $0000
C150  0000            _render_view_v3_x  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_y  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v3_ram_a  fdb $0000
C152  0000            _render_view_v3_sky_height  fdb $0000
C154  0000            _render_view_v3_one_pix_height  fdb $0000
C156  0000            _render_view_v3_segment_sky  fdb $0000
C158  0000            _render_view_v3_segment_floor  fdb $0000
C15A  0000            _render_view_v3_segment_one_pix_sky  fdb $0000
C15C  0000            _render_view_v3_segment_one_pix_floor  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_color1_hi  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_color2_hi  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v3_sky_hi  fdb $0000
C15E  0000            _render_view_v4_vblast_target  fdb $0000
C160  0000            _render_map_x  fdb $0000
C162  0000            _render_map_ptr  fdb $0000
C164  0000            _build_table_dist_dist  fdb $0000
C166  0000            _build_table_dist_line_height  fdb $0000
C168  0000            _build_table_div_4096_i  fdb $0000
C16A  0000            _build_table_div_4096_res  fdb $0000
C16C  0000            _i  fdb $0000
                      ; peephole(12): inlined3
                      ;_PEN fcb $01
C16E  00              _PAPER fcb $00
                      ; peephole(6): unread2
                      ;_SBINK0 fcb $01
                      ; peephole(6): unread2
                      ;_SBINK1 fcb $01
                      ; peephole(6): unread2
                      ;_SBINK2 fcb $01
                      ; peephole(6): unread2
                      ;_SBINK3 fcb $01
CB10                  _TAB equ cstring0
                      ; peephole(6): unread2
                      ;_map_x fcb $00
                      ; peephole(6): unread2
                      ;_map_y fcb $00
                      ; peephole(6): unread2
                      ;_event_handler_new_map_y fcb $00
C16F  00              _event_handler_compute_dir fcb $00
C170  00              _event_handler_key rzb 1
C171  00              _raycaster_camera_x fcb $00
                      ; peephole(12): inlined3
                      ;_raycaster_map_Y0 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_v2 fcb $00
C172  00              _raycaster_side fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_draw_start fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_draw_end fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_line_height fcb $00
                      ; peephole(12): inlined3
                      ;_raycaster_map_item fcb $00
C173  00              _raycaster_color fcb $00
C174  00              _draw__c fcb $00
C175  00              _render_view_v1_x fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v2_ram_b fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v2_two_pix_height fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v2_segment_two_pix fcb $00
C176  00              _render_view_v2_ram_s fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v2_floor_hi fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v3_ram_b fcb $00
C177  00              _render_view_v3_two_pix_height fcb $00
C178  00              _render_view_v3_segment_two_pix fcb $00
C179  00              _render_view_v3_ram_s fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v3_floor_hi fcb $00
C17A  00              _render_map_y fcb $00
                      ; peephole(12): inlined3
                      ;_go rzb 1
C17B  0000            _Ttmp2  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp699  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp717  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp724  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp739  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp753  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp755  fdb $0000
                      ; peephole(6): unread2
                      ;_Ttmp765  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp778  fdb $0000
                      ; peephole(6): unread2
                      ;_Ttmp779  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp780  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp782  fdb $0000
                      ; peephole(12): inlined3
                      ;_Ttmp783  fdb $0000
C17D  00              _Ttmp3 fcb $00
C17E  00              _Ttmp669 fcb $00
CAF5                  _Tstr670 equ cstring671
C17F  00              _Ttmp677 fcb $00
C180  00              _Ttmp679 fcb $00
CAF1                  _Tstr680 equ cstring681
C181  00              _Ttmp689 rzb 1
                      ; peephole(12): inlined3
                      ;_Ttmp690 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp691 fcb $00
C182  00              _Ttmp692 fcb $00
C183  00              _Ttmp693 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp694 fcb $00
C184  00              _Ttmp695 fcb $00
C185  00              _Ttmp696 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp697 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp700 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp702 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp705 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp707 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp709 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp711 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp718 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp725 fcb $00
C186  00              _Ttmp727 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp728 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp731 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp733 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp735 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp737 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp740 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp742 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp743 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp746 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp748 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp750 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp752 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp754 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp756 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp758 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp760 fcb $00
                      ; peephole(6): unread2
                      ;_Ttmp762 fcb $00
                      ; peephole(12): inlined3
                      ;_Ttmp781 fcb $00
CAED                  _Tstr786 equ cstring787
C187  0000            _event_handler_Ttmp9  fdb $0000
                      ; peephole(12): direct-page4
                      ;_event_handler_Ttmp11  fdb $0000
00FD                  _event_handler_Ttmp11 equ $fd
C189  0000            _event_handler_Ttmp23  fdb $0000
C18B  0000            _event_handler_Ttmp24  fdb $0000
C18D  0000            _event_handler_Ttmp36  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp65  fdb $0000
                      ; peephole(12): inlined3
                      ;_event_handler_Ttmp66  fdb $0000
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp67  fdb $0000
C18F  0000            _event_handler_Ttmp68  fdb $0000
C191  000000000000    _event_handler_Tflt84 rzb 6
C197  000000000000    _event_handler_Tflt85 rzb 6
C19D  000000000000    _event_handler_Tflt86 rzb 6
C1A3  000000000000    _event_handler_Tflt87 rzb 6
C1A9  000000000000    _event_handler_Tflt88 rzb 6
C1AF  000000000000    _event_handler_Tflt89 rzb 6
C1B5  000000000000    _event_handler_Tflt90 rzb 6
C1BB  000000000000    _event_handler_Tflt91 rzb 6
C1C1  000000000000    _event_handler_Tflt92 rzb 6
C1C7  000000000000    _event_handler_Tflt93 rzb 6
C1CD  000000000000    _event_handler_Tflt94 rzb 6
C1D3  000000000000    _event_handler_Tflt95 rzb 6
C1D9  000000000000    _event_handler_Tflt96 rzb 6
C1DF  000000000000    _event_handler_Tflt97 rzb 6
C1E5  000000000000    _event_handler_Tflt98 rzb 6
CB0E                  _event_handler_Tstr4 equ cstring5
                      ; peephole(12): inlined3
                      ;_event_handler_Ttmp6 rzb 1
                      ; peephole(12): direct-page4
                      ;_event_handler_Ttmp7 fcb $00
00F4                  _event_handler_Ttmp7 equ $f4
C1EB  00              _event_handler_Ttmp8 fcb $00
                      ; peephole(12): direct-page4
                      ;_event_handler_Ttmp10 fcb $00
00FB                  _event_handler_Ttmp10 equ $fb
C1EC  00              _event_handler_Ttmp12 fcb $00
CB0C                  _event_handler_Tstr13 equ cstring14
                      ; peephole(12): direct-page4
                      ;_event_handler_Ttmp16 fcb $00
00FC                  _event_handler_Ttmp16 equ $fc
CB0A                  _event_handler_Tstr19 equ cstring20
                      ; peephole(12): direct-page4
                      ;_event_handler_Ttmp22 fcb $00
00FF                  _event_handler_Ttmp22 equ $ff
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp27 fcb $00
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp35 fcb $00
CB08                  _event_handler_Tstr37 equ cstring38
CB06                  _event_handler_Tstr42 equ cstring43
CB0E                  _event_handler_Tstr54 equ cstring5
CB04                  _event_handler_Tstr58 equ cstring59
CB02                  _event_handler_Tstr69 equ cstring70
CB00                  _event_handler_Tstr74 equ cstring75
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp99 fcb $00
                      ; peephole(6): unread2
                      ;_event_handler_Ttmp100 fcb $00
C1ED  0000            _raycaster_Ttmp101  fdb $0000
C1EF  0000            _raycaster_Ttmp103  fdb $0000
C1F1  0000            _raycaster_Ttmp106  fdb $0000
                      ; peephole(12): direct-page4
                      ;_raycaster_Ttmp107  fdb $0000
00F9                  _raycaster_Ttmp107 equ $f9
C1F3  0000            _raycaster_Ttmp108  fdb $0000
                      ; peephole(12): inlined3
                      ;_raycaster_Ttmp109  fdb $0000
C1F5  0000            _raycaster_Ttmp110  fdb $0000
C1F7  0000            _raycaster_Ttmp141  fdb $0000
C1F9  00000000        _raycaster_Ttmp143  fdb $0000,$0000
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp102 fcb $00
C1FD  00              _raycaster_Ttmp104 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp105 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp111 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp116 fcb $00
C1FE  00              _raycaster_Ttmp118 fcb $00
C1FF  00              _raycaster_Ttmp121 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp124 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp127 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp130 fcb $00
                      ; peephole(6): unread2
                      ;_raycaster_Ttmp168 fcb $00
C200  0000            _render_view_v1_Ttmp182  fdb $0000
C202  0000            _render_view_v1_Ttmp216  fdb $0000
C204  0000            _render_view_v1_Ttmp217  fdb $0000
C206  0000            _render_view_v1_Ttmp218  fdb $0000
C208  0000            _render_view_v1_Ttmp219  fdb $0000
C20A  0000            _render_view_v1_Ttmp220  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp221  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp222  fdb $0000
C20C  0000            _render_view_v1_Ttmp223  fdb $0000
C20E  0000            _render_view_v1_Ttmp224  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp227  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp229  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp234  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp239  fdb $0000
C210  0000            _render_view_v1_Ttmp241  fdb $0000
C212  0000            _render_view_v1_Ttmp242  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp250  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp262  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp264  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp266  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp273  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp284  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp286  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp288  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp290  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp297  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp298  fdb $0000
C214  00              _render_view_v1_Ttmp180 fcb $00
C215  00              _render_view_v1_Ttmp181 fcb $00
C216  00              _render_view_v1_Ttmp183 fcb $00
C217  00              _render_view_v1_Ttmp184 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp185 fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp189 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp191 fcb $00
C218  00              _render_view_v1_Ttmp193 fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp196 fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp199 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp202 fcb $00
                      ; peephole(12): inlined3
                      ;_render_view_v1_Ttmp205 fcb $00
C219  00              _render_view_v1_Ttmp214 fcb $00
C21A  00              _render_view_v1_Ttmp215 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp225 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp226 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp228 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp230 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp235 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp240 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp243 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp251 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp254 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp256 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp257 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp259 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp263 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp265 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp267 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp268 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp270 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp274 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp277 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp279 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp281 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp285 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp287 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp289 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp291 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp292 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp294 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp299 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp300 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp301 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp302 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp303 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp304 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp305 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v1_Ttmp306 fcb $00
C21B  0000            _render_view_v2_Ttmp313  fdb $0000
C21D  0000            _render_view_v2_Ttmp318  fdb $0000
C21F  0000            _render_view_v2_Ttmp319  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp346  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp347  fdb $0000
                      ; peephole(9): unread2
                      ;_render_view_v2_Ttmp311 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp312 fcb $00
C221  00              _render_view_v2_Ttmp314 fcb $00
C222  00              _render_view_v2_Ttmp315 fcb $00
                      ; peephole(9): unread2
                      ;_render_view_v2_Ttmp316 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp317 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp321 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp326 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp327 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp329 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp330 fcb $00
C223  00              _render_view_v2_Ttmp332 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp335 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp338 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp341 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v2_Ttmp344 fcb $00
C224  0000            _render_view_v3_Ttmp446  fdb $0000
C226  0000            _render_view_v3_Ttmp451  fdb $0000
C228  0000            _render_view_v3_Ttmp452  fdb $0000
C22A  0000            _render_view_v3_Ttmp453  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp480  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp481  fdb $0000
C22C  0000            _render_view_v3_Ttmp496  fdb $0000
C22E  0000            _render_view_v3_Ttmp497  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp499  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp500  fdb $0000
C230  00              _render_view_v3_Ttmp444 fcb $00
                      ; peephole(12): direct-page4
                      ;_render_view_v3_Ttmp445 fcb $00
00F3                  _render_view_v3_Ttmp445 equ $f3
                      ; peephole(12): direct-page4
                      ;_render_view_v3_Ttmp447 fcb $00
00F5                  _render_view_v3_Ttmp447 equ $f5
C231  00              _render_view_v3_Ttmp448 fcb $00
                      ; peephole(9): unread2
                      ;_render_view_v3_Ttmp449 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp450 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp455 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp460 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp461 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp463 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp464 fcb $00
C232  00              _render_view_v3_Ttmp466 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp469 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp472 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp475 fcb $00
                      ; peephole(6): unread2
                      ;_render_view_v3_Ttmp478 fcb $00
C233  0000            _render_view_v4_Ttmp507  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v4_Ttmp508  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v4_Ttmp509  fdb $0000
                      ; peephole(12): inlined3
                      ;_render_view_v4_Ttmp511  fdb $0000
C235  0000            _render_view_v4_Ttmp512  fdb $0000
                      ; peephole(6): unread2
                      ;_render_view_v4_Ttmp510 fcb $00
C237  0000            _render_map_Ttmp514  fdb $0000
                      ; peephole(6): unread2
                      ;_render_map_Ttmp515  fdb $0000
C239  0000            _render_map_Ttmp558  fdb $0000
C23B  0000            _render_map_Ttmp568  fdb $0000
C23D  0000            _render_map_Ttmp570  fdb $0000
C23F  00              _render_map_Ttmp516 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp517 fcb $00
C240  00              _render_map_Ttmp520 fcb $00
C241  00              _render_map_Ttmp521 fcb $00
C242  00              _render_map_Ttmp522 fcb $00
C243  00              _render_map_Ttmp524 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp526 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp528 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp531 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp534 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp537 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp540 fcb $00
                      ; peephole(12): inlined3
                      ;_render_map_Ttmp545 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp547 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp559 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp560 fcb $00
                      ; peephole(6): unread2
                      ;_render_map_Ttmp561 fcb $00
C244  00              _render_map_Ttmp569 fcb $00
C245  0000            _build_table_dist_Ttmp576  fdb $0000
C247  0000            _build_table_dist_Ttmp577  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp599  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp600  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp601  fdb $0000
C249  0000            _build_table_dist_Ttmp607  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp608  fdb $0000
C24B  0000            _build_table_dist_Ttmp614  fdb $0000
C24D  00              _build_table_dist_Ttmp571 fcb $00
C24E  00              _build_table_dist_Ttmp572 fcb $00
C24F  00              _build_table_dist_Ttmp573 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp581 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp583 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp585 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp588 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp591 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp594 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_dist_Ttmp597 fcb $00
CAFD                  _build_table_dist_Tstr611 equ cstring612
C250  0000            _build_table_div_4096_Ttmp621  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp624  fdb $0000
C252  0000            _build_table_div_4096_Ttmp625  fdb $0000
C254  0000            _build_table_div_4096_Ttmp626  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp651  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp652  fdb $0000
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp653  fdb $0000
C256  0000            _build_table_div_4096_Ttmp656  fdb $0000
C258  0000            _build_table_div_4096_Ttmp663  fdb $0000
C25A  00              _build_table_div_4096_Ttmp620 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp630 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp631 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp633 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp635 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp637 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp640 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp643 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp646 fcb $00
                      ; peephole(6): unread2
                      ;_build_table_div_4096_Ttmp649 fcb $00
CAFA                  _build_table_div_4096_Tstr660 equ cstring661
C25B  0000            _TRtmp324  fdb $0000
C25D  0000            _TRtmp325  fdb $0000
C25F  0000            _TRtmp328  fdb $0000
C261  0000            _TRtmp363  fdb $0000
C263  0000            _TRtmp364  fdb $0000
C265  0000            _TRtmp365  fdb $0000
C267  0000            _TRtmp379  fdb $0000
C269  0000            _TRtmp380  fdb $0000
C26B  0000            _TRtmp381  fdb $0000
C26D  0000            _TRtmp395  fdb $0000
C26F  0000            _TRtmp396  fdb $0000
C271  0000            _TRtmp397  fdb $0000
C273  0000            _TRtmp411  fdb $0000
C275  0000            _TRtmp412  fdb $0000
C277  0000            _TRtmp413  fdb $0000
C279  0000            _TRtmp427  fdb $0000
C27B  0000            _TRtmp428  fdb $0000
C27D  0000            _TRtmp429  fdb $0000
C27F  0000            _TRtmp458  fdb $0000
C281  0000            _TRtmp459  fdb $0000
C283  0000            _TRtmp462  fdb $0000
C285  0000            _TRtmp543  fdb $0000
C287  0000            _TRtmp544  fdb $0000
C289  0000            _TRtmp546  fdb $0000
C28B  0000            _TRtmp579  fdb $0000
C28D  0000            _TRtmp580  fdb $0000
C28F  0000            _TRtmp582  fdb $0000
C291  0000            _TRtmp629  fdb $0000
C293  0000            _TRtmp632  fdb $0000
C295  0000            _TRtmp634  fdb $0000
C297  0000            _TRtmp764  fdb $0000
C299  0000            _TRtmp766  fdb $0000
C29B  0000            _TRtmp767  fdb $0000
C29D  00              _TRtmp113 fcb $00
C29E  00              _TRtmp114 fcb $00
C29F  00              _TRtmp115 fcb $00
C2A0  00              _TRtmp187 fcb $00
C2A1  00              _TRtmp188 fcb $00
C2A2  00              _TRtmp190 fcb $00
C2A3  00              _TRtmp519 fcb $00
C2A4  00              _TRtmp523 fcb $00
C2A5  00              _TRtmp525 fcb $00
C2A6                  UDCCHAR
                              ; $00 
C2A6  3C666E6E60623C00         fcb $3c,$66,$6e,$6e,$60,$62,$3c,        $00
                              ; $01 
C2AE  00003C063E663E00         fcb $00,$00,$3c,$06,$3e,$66,$3e,        $00
                              ; $02 
C2B6  0060607C66667C00         fcb $00,$60,$60,$7c,$66,$66,$7c,        $00
                              ; $03 
C2BE  00003C6060603C00         fcb $00,$00,$3c,$60,$60,$60,$3c,        $00
                              ; $04 
C2C6  0006063E66663E00         fcb $00,$06,$06,$3e,$66,$66,$3e,        $00
                              ; $05 
C2CE  00003C667E603C00         fcb $00,$00,$3c,$66,$7e,$60,$3c,        $00
                              ; $06 
C2D6  000E183E18181800         fcb $00,$0e,$18,$3e,$18,$18,$18,        $00
                              ; $07 
C2DE  00003E66663E067C         fcb $00,$00,$3e,$66,$66,$3e,$06,        $7c
                              ; $08 
C2E6  0060607C66666600         fcb $00,$60,$60,$7c,$66,$66,$66,        $00
                              ; $09 
C2EE  0018003818183C00         fcb $00,$18,$00,$38,$18,$18,$3c,        $00
                              ; $0a 
C2F6  000600060606063C         fcb $00,$06,$00,$06,$06,$06,$06,        $3c
                              ; $0b 
C2FE  0060606C786C6600         fcb $00,$60,$60,$6c,$78,$6c,$66,        $00
                              ; $0c 
C306  0038181818183C00         fcb $00,$38,$18,$18,$18,$18,$3c,        $00
                              ; $0d 
C30E  0000667F7F6B6300         fcb $00,$00,$66,$7f,$7f,$6b,$63,        $00
                              ; $0e 
C316  00007C6666666600         fcb $00,$00,$7c,$66,$66,$66,$66,        $00
                              ; $0f 
C31E  00003C6666663C00         fcb $00,$00,$3c,$66,$66,$66,$3c,        $00
                              ; $10 
C326  00007C66667C6060         fcb $00,$00,$7c,$66,$66,$7c,$60,        $60
                              ; $11 
C32E  00003E66663E0606         fcb $00,$00,$3e,$66,$66,$3e,$06,        $06
                              ; $12 
C336  00007C6660606000         fcb $00,$00,$7c,$66,$60,$60,$60,        $00
                              ; $13 
C33E  00003E603C067C00         fcb $00,$00,$3e,$60,$3c,$06,$7c,        $00
                              ; $14 
C346  00187E1818180E00         fcb $00,$18,$7e,$18,$18,$18,$0e,        $00
                              ; $15 
C34E  0000666666663E00         fcb $00,$00,$66,$66,$66,$66,$3e,        $00
                              ; $16 
C356  00006666663C1800         fcb $00,$00,$66,$66,$66,$3c,$18,        $00
                              ; $17 
C35E  0000636B7F3E3600         fcb $00,$00,$63,$6b,$7f,$3e,$36,        $00
                              ; $18 
C366  0000663C183C6600         fcb $00,$00,$66,$3c,$18,$3c,$66,        $00
                              ; $19 
C36E  00006666663E0C78         fcb $00,$00,$66,$66,$66,$3e,$0c,        $78
                              ; $1a 
C376  00007E0C18307E00         fcb $00,$00,$7e,$0c,$18,$30,$7e,        $00
                              ; $1b 
C37E  3C30303030303C00         fcb $3c,$30,$30,$30,$30,$30,$3c,        $00
                              ; $1c 
C386  0C12307C3062FC00         fcb $0c,$12,$30,$7c,$30,$62,$fc,        $00
                              ; $1d 
C38E  3C0C0C0C0C0C3C00         fcb $3c,$0c,$0c,$0c,$0c,$0c,$3c,        $00
                              ; $1e 
C396  00183C7E18181818         fcb $00,$18,$3c,$7e,$18,$18,$18,        $18
                              ; $1f 
C39E  0010307F7F301000         fcb $00,$10,$30,$7f,$7f,$30,$10,        $00
                              ; $20 
C3A6  0000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,        $00
                              ; $21 
C3AE  1818181800001800         fcb $18,$18,$18,$18,$00,$00,$18,        $00
                              ; $22 
C3B6  6666660000000000         fcb $66,$66,$66,$00,$00,$00,$00,        $00
                              ; $23 
C3BE  6666FF66FF666600         fcb $66,$66,$ff,$66,$ff,$66,$66,        $00
                              ; $24 
C3C6  183E603C067C1800         fcb $18,$3e,$60,$3c,$06,$7c,$18,        $00
                              ; $25 
C3CE  62660C1830664600         fcb $62,$66,$0c,$18,$30,$66,$46,        $00
                              ; $26 
C3D6  3C663C3867663F00         fcb $3c,$66,$3c,$38,$67,$66,$3f,        $00
                              ; $27 
C3DE  060C180000000000         fcb $06,$0c,$18,$00,$00,$00,$00,        $00
                              ; $28 
C3E6  0C18303030180C00         fcb $0c,$18,$30,$30,$30,$18,$0c,        $00
                              ; $29 
C3EE  30180C0C0C183000         fcb $30,$18,$0c,$0c,$0c,$18,$30,        $00
                              ; $2a 
C3F6  00663CFF3C660000         fcb $00,$66,$3c,$ff,$3c,$66,$00,        $00
                              ; $2b 
C3FE  0018187E18180000         fcb $00,$18,$18,$7e,$18,$18,$00,        $00
                              ; $2c 
C406  0000000000181830         fcb $00,$00,$00,$00,$00,$18,$18,        $30
                              ; $2d 
C40E  0000007E00000000         fcb $00,$00,$00,$7e,$00,$00,$00,        $00
                              ; $2e 
C416  0000000000181800         fcb $00,$00,$00,$00,$00,$18,$18,        $00
                              ; $2f 
C41E  0003060C18306000         fcb $00,$03,$06,$0c,$18,$30,$60,        $00
                              ; $30 
C426  3C666E7666663C00         fcb $3c,$66,$6e,$76,$66,$66,$3c,        $00
                              ; $31 
C42E  1818381818187E00         fcb $18,$18,$38,$18,$18,$18,$7e,        $00
                              ; $32 
C436  3C66060C30607E00         fcb $3c,$66,$06,$0c,$30,$60,$7e,        $00
                              ; $33 
C43E  3C66061C06663C00         fcb $3c,$66,$06,$1c,$06,$66,$3c,        $00
                              ; $34 
C446  060E1E667F060600         fcb $06,$0e,$1e,$66,$7f,$06,$06,        $00
                              ; $35 
C44E  7E607C0606663C00         fcb $7e,$60,$7c,$06,$06,$66,$3c,        $00
                              ; $36 
C456  3C66607C66663C00         fcb $3c,$66,$60,$7c,$66,$66,$3c,        $00
                              ; $37 
C45E  7E660C1818181800         fcb $7e,$66,$0c,$18,$18,$18,$18,        $00
                              ; $38 
C466  3C66663C66663C00         fcb $3c,$66,$66,$3c,$66,$66,$3c,        $00
                              ; $39 
C46E  3C66663E06663C00         fcb $3c,$66,$66,$3e,$06,$66,$3c,        $00
                              ; $3a 
C476  0000180000180000         fcb $00,$00,$18,$00,$00,$18,$00,        $00
                              ; $3b 
C47E  0000180000181830         fcb $00,$00,$18,$00,$00,$18,$18,        $30
                              ; $3c 
C486  0E18306030180E00         fcb $0e,$18,$30,$60,$30,$18,$0e,        $00
                              ; $3d 
C48E  00007E007E000000         fcb $00,$00,$7e,$00,$7e,$00,$00,        $00
                              ; $3e 
C496  70180C060C187000         fcb $70,$18,$0c,$06,$0c,$18,$70,        $00
                              ; $3f 
C49E  3C66060C18001800         fcb $3c,$66,$06,$0c,$18,$00,$18,        $00
                              ; $40 
C4A6  000000FFFF000000         fcb $00,$00,$00,$ff,$ff,$00,$00,        $00
                              ; $41 
C4AE  183C667E66666600         fcb $18,$3c,$66,$7e,$66,$66,$66,        $00
                              ; $42 
C4B6  7C66667C66667C00         fcb $7c,$66,$66,$7c,$66,$66,$7c,        $00
                              ; $43 
C4BE  3C66606060663C00         fcb $3c,$66,$60,$60,$60,$66,$3c,        $00
                              ; $44 
C4C6  786C6666666C7800         fcb $78,$6c,$66,$66,$66,$6c,$78,        $00
                              ; $45 
C4CE  7E60607860607E00         fcb $7e,$60,$60,$78,$60,$60,$7e,        $00
                              ; $46 
C4D6  7E60607860606000         fcb $7e,$60,$60,$78,$60,$60,$60,        $00
                              ; $47 
C4DE  3C66606E66663C00         fcb $3c,$66,$60,$6e,$66,$66,$3c,        $00
                              ; $48 
C4E6  6666667E66666600         fcb $66,$66,$66,$7e,$66,$66,$66,        $00
                              ; $49 
C4EE  3C18181818183C00         fcb $3c,$18,$18,$18,$18,$18,$3c,        $00
                              ; $4a 
C4F6  1E0C0C0C0C6C3800         fcb $1e,$0c,$0c,$0c,$0c,$6c,$38,        $00
                              ; $4b 
C4FE  666C7870786C6600         fcb $66,$6c,$78,$70,$78,$6c,$66,        $00
                              ; $4c 
C506  6060606060607E00         fcb $60,$60,$60,$60,$60,$60,$7e,        $00
                              ; $4d 
C50E  63777F6B63636300         fcb $63,$77,$7f,$6b,$63,$63,$63,        $00
                              ; $4e 
C516  66767E7E6E666600         fcb $66,$76,$7e,$7e,$6e,$66,$66,        $00
                              ; $4f 
C51E  3C66666666663C00         fcb $3c,$66,$66,$66,$66,$66,$3c,        $00
                              ; $50 
C526  7C66667C60606000         fcb $7c,$66,$66,$7c,$60,$60,$60,        $00
                              ; $51 
C52E  3C666666663C0E00         fcb $3c,$66,$66,$66,$66,$3c,$0e,        $00
                              ; $52 
C536  7C66667C786C6600         fcb $7c,$66,$66,$7c,$78,$6c,$66,        $00
                              ; $53 
C53E  3C66603C06663C00         fcb $3c,$66,$60,$3c,$06,$66,$3c,        $00
                              ; $54 
C546  7E18181818181800         fcb $7e,$18,$18,$18,$18,$18,$18,        $00
                              ; $55 
C54E  6666666666663C00         fcb $66,$66,$66,$66,$66,$66,$3c,        $00
                              ; $56 
C556  66666666663C1800         fcb $66,$66,$66,$66,$66,$3c,$18,        $00
                              ; $57 
C55E  6363636B7F776300         fcb $63,$63,$63,$6b,$7f,$77,$63,        $00
                              ; $58 
C566  66663C183C666600         fcb $66,$66,$3c,$18,$3c,$66,$66,        $00
                              ; $59 
C56E  6666663C18181800         fcb $66,$66,$66,$3c,$18,$18,$18,        $00
                              ; $5a 
C576  7E060C1830607E00         fcb $7e,$06,$0c,$18,$30,$60,$7e,        $00
                              ; $5b 
C57E  181818FFFF181818         fcb $18,$18,$18,$ff,$ff,$18,$18,        $18
                              ; $5c 
C586  C0C03030C0C03030         fcb $c0,$c0,$30,$30,$c0,$c0,$30,        $30
                              ; $5d 
C58E  1818181818181818         fcb $18,$18,$18,$18,$18,$18,$18,        $18
                              ; $5e 
C596  3333CCCC3333CCCC         fcb $33,$33,$cc,$cc,$33,$33,$cc,        $cc
                              ; $5f 
C59E  3399CC663399CC66         fcb $33,$99,$cc,$66,$33,$99,$cc,        $66
                              ; $60 
C5A6  0000000000000000         fcb $00,$00,$00,$00,$00,$00,$00,        $00
                              ; $61 
C5AE  F0F0F0F0F0F0F0F0         fcb $f0,$f0,$f0,$f0,$f0,$f0,$f0,        $f0
                              ; $62 
C5B6  00000000FFFFFFFF         fcb $00,$00,$00,$00,$ff,$ff,$ff,        $ff
                              ; $63 
C5BE  FF00000000000000         fcb $ff,$00,$00,$00,$00,$00,$00,        $00
                              ; $64 
C5C6  00000000000000FF         fcb $00,$00,$00,$00,$00,$00,$00,        $ff
                              ; $65 
C5CE  C0C0C0C0C0C0C0C0         fcb $c0,$c0,$c0,$c0,$c0,$c0,$c0,        $c0
                              ; $66 
C5D6  CCCC3333CCCC3333         fcb $cc,$cc,$33,$33,$cc,$cc,$33,        $33
                              ; $67 
C5DE  0303030303030303         fcb $03,$03,$03,$03,$03,$03,$03,        $03
                              ; $68 
C5E6  00000000CCCC3333         fcb $00,$00,$00,$00,$cc,$cc,$33,        $33
                              ; $69 
C5EE  CC993366CC993366         fcb $cc,$99,$33,$66,$cc,$99,$33,        $66
                              ; $6a 
C5F6  0303030303030303         fcb $03,$03,$03,$03,$03,$03,$03,        $03
                              ; $6b 
C5FE  1818181F1F181818         fcb $18,$18,$18,$1f,$1f,$18,$18,        $18
                              ; $6c 
C606  000000000F0F0F0F         fcb $00,$00,$00,$00,$0f,$0f,$0f,        $0f
                              ; $6d 
C60E  1818181F1F000000         fcb $18,$18,$18,$1f,$1f,$00,$00,        $00
                              ; $6e 
C616  000000F8F8181818         fcb $00,$00,$00,$f8,$f8,$18,$18,        $18
                              ; $6f 
C61E  000000000000FFFF         fcb $00,$00,$00,$00,$00,$00,$ff,        $ff
                              ; $70 
C626  0000001F1F181818         fcb $00,$00,$00,$1f,$1f,$18,$18,        $18
                              ; $71 
C62E  181818FFFF000000         fcb $18,$18,$18,$ff,$ff,$00,$00,        $00
                              ; $72 
C636  000000FFFF181818         fcb $00,$00,$00,$ff,$ff,$18,$18,        $18
                              ; $73 
C63E  181818F8F8181818         fcb $18,$18,$18,$f8,$f8,$18,$18,        $18
                              ; $74 
C646  C0C0C0C0C0C0C0C0         fcb $c0,$c0,$c0,$c0,$c0,$c0,$c0,        $c0
                              ; $75 
C64E  E0E0E0E0E0E0E0E0         fcb $e0,$e0,$e0,$e0,$e0,$e0,$e0,        $e0
                              ; $76 
C656  0707070707070707         fcb $07,$07,$07,$07,$07,$07,$07,        $07
                              ; $77 
C65E  FFFF000000000000         fcb $ff,$ff,$00,$00,$00,$00,$00,        $00
                              ; $78 
C666  FFFFFF0000000000         fcb $ff,$ff,$ff,$00,$00,$00,$00,        $00
                              ; $79 
C66E  0000000000FFFFFF         fcb $00,$00,$00,$00,$00,$ff,$ff,        $ff
                              ; $7a 
C676  0103066C78706000         fcb $01,$03,$06,$6c,$78,$70,$60,        $00
                              ; $7b 
C67E  00000000F0F0F0F0         fcb $00,$00,$00,$00,$f0,$f0,$f0,        $f0
                              ; $7c 
C686  0F0F0F0F00000000         fcb $0f,$0f,$0f,$0f,$00,$00,$00,        $00
                              ; $7d 
C68E  181818F8F8000000         fcb $18,$18,$18,$f8,$f8,$00,$00,        $00
                              ; $7e 
C696  F0F0F0F000000000         fcb $f0,$f0,$f0,$f0,$00,$00,$00,        $00
                              ; $7f 
C69E  F0F0F0F00F0F0F0F         fcb $f0,$f0,$f0,$f0,$0f,$0f,$0f,        $0f
                              ; $80 
C6A6  C39991919F99C3FF         fcb $c3,$99,$91,$91,$9f,$99,$c3,        $ff
                              ; $81 
C6AE  FFFFC3F9C199C1FF         fcb $ff,$ff,$c3,$f9,$c1,$99,$c1,        $ff
                              ; $82 
C6B6  FF9F9F83999983FF         fcb $ff,$9f,$9f,$83,$99,$99,$83,        $ff
                              ; $83 
C6BE  FFFFC39F9F9FC3FF         fcb $ff,$ff,$c3,$9f,$9f,$9f,$c3,        $ff
                              ; $84 
C6C6  FFF9F9C19999C1FF         fcb $ff,$f9,$f9,$c1,$99,$99,$c1,        $ff
                              ; $85 
C6CE  FFFFC399819FC3FF         fcb $ff,$ff,$c3,$99,$81,$9f,$c3,        $ff
                              ; $86 
C6D6  FFF1E7C1E7E7E7FF         fcb $ff,$f1,$e7,$c1,$e7,$e7,$e7,        $ff
                              ; $87 
C6DE  FFFFC19999C1F983         fcb $ff,$ff,$c1,$99,$99,$c1,$f9,        $83
                              ; $88 
C6E6  FF9F9F83999999FF         fcb $ff,$9f,$9f,$83,$99,$99,$99,        $ff
                              ; $89 
C6EE  FFE7FFC7E7E7C3FF         fcb $ff,$e7,$ff,$c7,$e7,$e7,$c3,        $ff
                              ; $8a 
C6F6  FFF9FFF9F9F9F9C3         fcb $ff,$f9,$ff,$f9,$f9,$f9,$f9,        $c3
                              ; $8b 
C6FE  FF9F9F93879399FF         fcb $ff,$9f,$9f,$93,$87,$93,$99,        $ff
                              ; $8c 
C706  FFC7E7E7E7E7C3FF         fcb $ff,$c7,$e7,$e7,$e7,$e7,$c3,        $ff
                              ; $8d 
C70E  FFFF998080949CFF         fcb $ff,$ff,$99,$80,$80,$94,$9c,        $ff
                              ; $8e 
C716  FFFF8399999999FF         fcb $ff,$ff,$83,$99,$99,$99,$99,        $ff
                              ; $8f 
C71E  FFFFC3999999C3FF         fcb $ff,$ff,$c3,$99,$99,$99,$c3,        $ff
                              ; $90 
C726  FFFF839999839F9F         fcb $ff,$ff,$83,$99,$99,$83,$9f,        $9f
                              ; $91 
C72E  FFFFC19999C1F9F9         fcb $ff,$ff,$c1,$99,$99,$c1,$f9,        $f9
                              ; $92 
C736  FFFF83999F9F9FFF         fcb $ff,$ff,$83,$99,$9f,$9f,$9f,        $ff
                              ; $93 
C73E  FFFFC19FC3F983FF         fcb $ff,$ff,$c1,$9f,$c3,$f9,$83,        $ff
                              ; $94 
C746  FFE781E7E7E7F1FF         fcb $ff,$e7,$81,$e7,$e7,$e7,$f1,        $ff
                              ; $95 
C74E  FFFF99999999C1FF         fcb $ff,$ff,$99,$99,$99,$99,$c1,        $ff
                              ; $96 
C756  FFFF999999C3E7FF         fcb $ff,$ff,$99,$99,$99,$c3,$e7,        $ff
                              ; $97 
C75E  FFFF9C9480C1C9FF         fcb $ff,$ff,$9c,$94,$80,$c1,$c9,        $ff
                              ; $98 
C766  FFFF99C3E7C399FF         fcb $ff,$ff,$99,$c3,$e7,$c3,$99,        $ff
                              ; $99 
C76E  FFFF999999C1F387         fcb $ff,$ff,$99,$99,$99,$c1,$f3,        $87
                              ; $9a 
C776  FFFF81F3E7CF81FF         fcb $ff,$ff,$81,$f3,$e7,$cf,$81,        $ff
                              ; $9b 
C77E  C3CFCFCFCFCFC3FF         fcb $c3,$cf,$cf,$cf,$cf,$cf,$c3,        $ff
                              ; $9c 
C786  F3EDCF83CF9D03FF         fcb $f3,$ed,$cf,$83,$cf,$9d,$03,        $ff
                              ; $9d 
C78E  C3F3F3F3F3F3C3FF         fcb $c3,$f3,$f3,$f3,$f3,$f3,$c3,        $ff
                              ; $9e 
C796  FFE7C381E7E7E7E7         fcb $ff,$e7,$c3,$81,$e7,$e7,$e7,        $e7
                              ; $9f 
C79E  FFEFCF8080CFEFFF         fcb $ff,$ef,$cf,$80,$80,$cf,$ef,        $ff
                              ; $a0 
C7A6  FFFFFFFFFFFFFFFF         fcb $ff,$ff,$ff,$ff,$ff,$ff,$ff,        $ff
                              ; $a1 
C7AE  E7E7E7E7FFFFE7FF         fcb $e7,$e7,$e7,$e7,$ff,$ff,$e7,        $ff
                              ; $a2 
C7B6  999999FFFFFFFFFF         fcb $99,$99,$99,$ff,$ff,$ff,$ff,        $ff
                              ; $a3 
C7BE  99990099009999FF         fcb $99,$99,$00,$99,$00,$99,$99,        $ff
                              ; $a4 
C7C6  E7C19FC3F983E7FF         fcb $e7,$c1,$9f,$c3,$f9,$83,$e7,        $ff
                              ; $a5 
C7CE  9D99F3E7CF99B9FF         fcb $9d,$99,$f3,$e7,$cf,$99,$b9,        $ff
                              ; $a6 
C7D6  C399C3C79899C0FF         fcb $c3,$99,$c3,$c7,$98,$99,$c0,        $ff
                              ; $a7 
C7DE  F9F3E7FFFFFFFFFF         fcb $f9,$f3,$e7,$ff,$ff,$ff,$ff,        $ff
                              ; $a8 
C7E6  F3E7CFCFCFE7F3FF         fcb $f3,$e7,$cf,$cf,$cf,$e7,$f3,        $ff
                              ; $a9 
C7EE  CFE7F3F3F3E7CFFF         fcb $cf,$e7,$f3,$f3,$f3,$e7,$cf,        $ff
                              ; $aa 
C7F6  FF99C300C399FFFF         fcb $ff,$99,$c3,$00,$c3,$99,$ff,        $ff
                              ; $ab 
C7FE  FFE7E781E7E7FFFF         fcb $ff,$e7,$e7,$81,$e7,$e7,$ff,        $ff
                              ; $ac 
C806  FFFFFFFFFFE7E7CF         fcb $ff,$ff,$ff,$ff,$ff,$e7,$e7,        $cf
                              ; $ad 
C80E  FFFFFF81FFFFFFFF         fcb $ff,$ff,$ff,$81,$ff,$ff,$ff,        $ff
                              ; $ae 
C816  FFFFFFFFFFE7E7FF         fcb $ff,$ff,$ff,$ff,$ff,$e7,$e7,        $ff
                              ; $af 
C81E  FFFCF9F3E7CF9FFF         fcb $ff,$fc,$f9,$f3,$e7,$cf,$9f,        $ff
                              ; $b0 
C826  C39991899999C3FF         fcb $c3,$99,$91,$89,$99,$99,$c3,        $ff
                              ; $b1 
C82E  E7E7C7E7E7E781FF         fcb $e7,$e7,$c7,$e7,$e7,$e7,$81,        $ff
                              ; $b2 
C836  C399F9F3CF9F81FF         fcb $c3,$99,$f9,$f3,$cf,$9f,$81,        $ff
                              ; $b3 
C83E  C399F9E3F999C3FF         fcb $c3,$99,$f9,$e3,$f9,$99,$c3,        $ff
                              ; $b4 
C846  F9F1E19980F9F9FF         fcb $f9,$f1,$e1,$99,$80,$f9,$f9,        $ff
                              ; $b5 
C84E  819F83F9F999C3FF         fcb $81,$9f,$83,$f9,$f9,$99,$c3,        $ff
                              ; $b6 
C856  C3999F839999C3FF         fcb $c3,$99,$9f,$83,$99,$99,$c3,        $ff
                              ; $b7 
C85E  8199F3E7E7E7E7FF         fcb $81,$99,$f3,$e7,$e7,$e7,$e7,        $ff
                              ; $b8 
C866  C39999C39999C3FF         fcb $c3,$99,$99,$c3,$99,$99,$c3,        $ff
                              ; $b9 
C86E  C39999C1F999C3FF         fcb $c3,$99,$99,$c1,$f9,$99,$c3,        $ff
                              ; $ba 
C876  FFFFE7FFFFE7FFFF         fcb $ff,$ff,$e7,$ff,$ff,$e7,$ff,        $ff
                              ; $bb 
C87E  FFFFE7FFFFE7E7CF         fcb $ff,$ff,$e7,$ff,$ff,$e7,$e7,        $cf
                              ; $bc 
C886  F1E7CF9FCFE7F1FF         fcb $f1,$e7,$cf,$9f,$cf,$e7,$f1,        $ff
                              ; $bd 
C88E  FFFF81FF81FFFFFF         fcb $ff,$ff,$81,$ff,$81,$ff,$ff,        $ff
                              ; $be 
C896  8FE7F3F9F3E78FFF         fcb $8f,$e7,$f3,$f9,$f3,$e7,$8f,        $ff
                              ; $bf 
C89E  C399F9F3E7FFE7FF         fcb $c3,$99,$f9,$f3,$e7,$ff,$e7,        $ff
                              ; $c0 
C8A6  FFFFFF0000FFFFFF         fcb $ff,$ff,$ff,$00,$00,$ff,$ff,        $ff
                              ; $c1 
C8AE  E7C39981999999FF         fcb $e7,$c3,$99,$81,$99,$99,$99,        $ff
                              ; $c2 
C8B6  83999983999983FF         fcb $83,$99,$99,$83,$99,$99,$83,        $ff
                              ; $c3 
C8BE  C3999F9F9F99C3FF         fcb $c3,$99,$9f,$9f,$9f,$99,$c3,        $ff
                              ; $c4 
C8C6  87939999999387FF         fcb $87,$93,$99,$99,$99,$93,$87,        $ff
                              ; $c5 
C8CE  819F9F879F9F81FF         fcb $81,$9f,$9f,$87,$9f,$9f,$81,        $ff
                              ; $c6 
C8D6  819F9F879F9F9FFF         fcb $81,$9f,$9f,$87,$9f,$9f,$9f,        $ff
                              ; $c7 
C8DE  C3999F919999C3FF         fcb $c3,$99,$9f,$91,$99,$99,$c3,        $ff
                              ; $c8 
C8E6  99999981999999FF         fcb $99,$99,$99,$81,$99,$99,$99,        $ff
                              ; $c9 
C8EE  C3E7E7E7E7E7C3FF         fcb $c3,$e7,$e7,$e7,$e7,$e7,$c3,        $ff
                              ; $ca 
C8F6  E1F3F3F3F393C7FF         fcb $e1,$f3,$f3,$f3,$f3,$93,$c7,        $ff
                              ; $cb 
C8FE  9993878F879399FF         fcb $99,$93,$87,$8f,$87,$93,$99,        $ff
                              ; $cc 
C906  9F9F9F9F9F9F81FF         fcb $9f,$9f,$9f,$9f,$9f,$9f,$81,        $ff
                              ; $cd 
C90E  9C8880949C9C9CFF         fcb $9c,$88,$80,$94,$9c,$9c,$9c,        $ff
                              ; $ce 
C916  99898181919999FF         fcb $99,$89,$81,$81,$91,$99,$99,        $ff
                              ; $cf 
C91E  C39999999999C3FF         fcb $c3,$99,$99,$99,$99,$99,$c3,        $ff
                              ; $d0 
C926  839999839F9F9FFF         fcb $83,$99,$99,$83,$9f,$9f,$9f,        $ff
                              ; $d1 
C92E  C399999999C3F1FF         fcb $c3,$99,$99,$99,$99,$c3,$f1,        $ff
                              ; $d2 
C936  83999983879399FF         fcb $83,$99,$99,$83,$87,$93,$99,        $ff
                              ; $d3 
C93E  C3999FC3F999C3FF         fcb $c3,$99,$9f,$c3,$f9,$99,$c3,        $ff
                              ; $d4 
C946  81E7E7E7E7E7E7FF         fcb $81,$e7,$e7,$e7,$e7,$e7,$e7,        $ff
                              ; $d5 
C94E  999999999999C3FF         fcb $99,$99,$99,$99,$99,$99,$c3,        $ff
                              ; $d6 
C956  9999999999C3E7FF         fcb $99,$99,$99,$99,$99,$c3,$e7,        $ff
                              ; $d7 
C95E  9C9C9C9480889CFF         fcb $9c,$9c,$9c,$94,$80,$88,$9c,        $ff
                              ; $d8 
C966  9999C3E7C39999FF         fcb $99,$99,$c3,$e7,$c3,$99,$99,        $ff
                              ; $d9 
C96E  999999C3E7E7E7FF         fcb $99,$99,$99,$c3,$e7,$e7,$e7,        $ff
                              ; $da 
C976  81F9F3E7CF9F81FF         fcb $81,$f9,$f3,$e7,$cf,$9f,$81,        $ff
                              ; $db 
C97E  E7E7E70000E7E7E7         fcb $e7,$e7,$e7,$00,$00,$e7,$e7,        $e7
                              ; $dc 
C986  3F3FCFCF3F3FCFCF         fcb $3f,$3f,$cf,$cf,$3f,$3f,$cf,        $cf
                              ; $dd 
C98E  E7E7E7E7E7E7E7E7         fcb $e7,$e7,$e7,$e7,$e7,$e7,$e7,        $e7
                              ; $de 
C996  CCCC3333CCCC3333         fcb $cc,$cc,$33,$33,$cc,$cc,$33,        $33
                              ; $df 
C99E  CC663399CC663399         fcb $cc,$66,$33,$99,$cc,$66,$33,        $99
                              ; $e0 
C9A6  FFFFFFFFFFFFFFFF         fcb $ff,$ff,$ff,$ff,$ff,$ff,$ff,        $ff
                              ; $e1 
C9AE  0F0F0F0F0F0F0F0F         fcb $0f,$0f,$0f,$0f,$0f,$0f,$0f,        $0f
                              ; $e2 
C9B6  FFFFFFFF00000000         fcb $ff,$ff,$ff,$ff,$00,$00,$00,        $00
                              ; $e3 
C9BE  00FFFFFFFFFFFFFF         fcb $00,$ff,$ff,$ff,$ff,$ff,$ff,        $ff
                              ; $e4 
C9C6  FFFFFFFFFFFFFF00         fcb $ff,$ff,$ff,$ff,$ff,$ff,$ff,        $00
                              ; $e5 
C9CE  3F3F3F3F3F3F3F3F         fcb $3f,$3f,$3f,$3f,$3f,$3f,$3f,        $3f
                              ; $e6 
C9D6  3333CCCC3333CCCC         fcb $33,$33,$cc,$cc,$33,$33,$cc,        $cc
                              ; $e7 
C9DE  FCFCFCFCFCFCFCFC         fcb $fc,$fc,$fc,$fc,$fc,$fc,$fc,        $fc
                              ; $e8 
C9E6  FFFFFFFF3333CCCC         fcb $ff,$ff,$ff,$ff,$33,$33,$cc,        $cc
                              ; $e9 
C9EE  3366CC993366CC99         fcb $33,$66,$cc,$99,$33,$66,$cc,        $99
                              ; $ea 
C9F6  FCFCFCFCFCFCFCFC         fcb $fc,$fc,$fc,$fc,$fc,$fc,$fc,        $fc
                              ; $eb 
C9FE  E7E7E7E0E0E7E7E7         fcb $e7,$e7,$e7,$e0,$e0,$e7,$e7,        $e7
                              ; $ec 
CA06  FFFFFFFFF0F0F0F0         fcb $ff,$ff,$ff,$ff,$f0,$f0,$f0,        $f0
                              ; $ed 
CA0E  E7E7E7E0E0FFFFFF         fcb $e7,$e7,$e7,$e0,$e0,$ff,$ff,        $ff
                              ; $ee 
CA16  FFFFFF0707E7E7E7         fcb $ff,$ff,$ff,$07,$07,$e7,$e7,        $e7
                              ; $ef 
CA1E  FFFFFFFFFFFF0000         fcb $ff,$ff,$ff,$ff,$ff,$ff,$00,        $00
                              ; $f0 
CA26  FFFFFFE0E0E7E7E7         fcb $ff,$ff,$ff,$e0,$e0,$e7,$e7,        $e7
                              ; $f1 
CA2E  E7E7E70000FFFFFF         fcb $e7,$e7,$e7,$00,$00,$ff,$ff,        $ff
                              ; $f2 
CA36  FFFFFF0000E7E7E7         fcb $ff,$ff,$ff,$00,$00,$e7,$e7,        $e7
                              ; $f3 
CA3E  E7E7E70707E7E7E7         fcb $e7,$e7,$e7,$07,$07,$e7,$e7,        $e7
                              ; $f4 
CA46  3F3F3F3F3F3F3F3F         fcb $3f,$3f,$3f,$3f,$3f,$3f,$3f,        $3f
                              ; $f5 
CA4E  1F1F1F1F1F1F1F1F         fcb $1f,$1f,$1f,$1f,$1f,$1f,$1f,        $1f
                              ; $f6 
CA56  F8F8F8F8F8F8F8F8         fcb $f8,$f8,$f8,$f8,$f8,$f8,$f8,        $f8
                              ; $f7 
CA5E  0000FFFFFFFFFFFF         fcb $00,$00,$ff,$ff,$ff,$ff,$ff,        $ff
                              ; $f8 
CA66  000000FFFFFFFFFF         fcb $00,$00,$00,$ff,$ff,$ff,$ff,        $ff
                              ; $f9 
CA6E  FFFFFFFFFF000000         fcb $ff,$ff,$ff,$ff,$ff,$00,$00,        $00
                              ; $fa 
CA76  FEFCF993878F9FFF         fcb $fe,$fc,$f9,$93,$87,$8f,$9f,        $ff
                              ; $fb 
CA7E  FFFFFFFF0F0F0F0F         fcb $ff,$ff,$ff,$ff,$0f,$0f,$0f,        $0f
                              ; $fc 
CA86  F0F0F0F0FFFFFFFF         fcb $f0,$f0,$f0,$f0,$ff,$ff,$ff,        $ff
                              ; $fd 
CA8E  E7E7E70707FFFFFF         fcb $e7,$e7,$e7,$07,$07,$ff,$ff,        $ff
                              ; $fe 
CA96  0F0F0F0FFFFFFFFF         fcb $0f,$0f,$0f,$0f,$ff,$ff,$ff,        $ff
                              ; $ff 
CA9E  0F0F0F0FF0F0F0F0         fcb $0f,$0f,$0f,$0f,$f0,$f0,$f0,        $f0
CAA6                  VARINIT
CAA6                  VARINITCLEAR
CAA6  C601                    LDB #$01
CAA8  F76A25                  STB _PEN
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$01
                      ; peephole(6): unread1
                      ;       STB _SBINK0
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$01
                      ; peephole(6): unread1
                      ;       STB _SBINK1
                      ; peephole(7): r312 (LDB, LDB)->(LDB)
                      ;       LDB #$01
                      ; peephole(6): unread1
                      ;       STB _SBINK2
CAAB  C601                    LDB #$01
                      ; peephole(6): unread1
                      ;       STB _SBINK3
CAAD  CC0007                  LDD #$0007
CAB0  FD8E0C                  STD _default_color
CAB3  CC1200                  LDD #$1200
CAB6  FD7553                  STD _pos_x
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0c00
CAB9  860C                    LDA #$0c
CABB  FDC106                  STD _pos_y
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$ff00
CABE  86FF                    LDA #$ff
CAC0  FD841B                  STD _dir_x0
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$ff00
CAC3  86FF                    LDA #$ff
CAC5  FD89E4                  STD _dir_x
CAC8  CCFF80                  LDD #$ff80
CACB  FD8761                  STD _plane_y0
CACE  CCFF80                  LDD #$ff80
CAD1  FD89F3                  STD _plane_y
CAD4  CC0000                  LDD #$0000
CAD7  FDC118                  STD _raycaster_side_dist_x
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CADA  FDC11A                  STD _raycaster_side_dist_y
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CADD  B7C172                  STA _raycaster_side
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CAE0  FDC122                  STD _raycaster_step_x
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CAE3  FDC124                  STD _raycaster_step_y
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CAE6  FDC166                  STD _build_table_dist_line_height
                      ; peephole(1): r861 [B=0](LDB#xx00)->(LDA#xx)
                      ;       LDD #$0000
                      ; peephole(2): r366 (LOAD#0)->(CLEAR)
                      ;       LDA #$00
                      ; peephole(3): r810 [A=0](CLRA)->()
                      ;       CLRA
CAE9  FDC16A                  STD _build_table_div_4096_res
CAEC  39                      RTS
CAED  03              cstring787 fcb 3
CAEE  454E44                  fcc "END"
CAF1  03              cstring681 fcb 3
CAF2  474F20                  fcc "GO "
CAF5  04              cstring671 fcb 4
CAF6  496E6974                fcc "Init"
CAFA  02              cstring661 fcb 2
CAFB  5442                    fcc "TB"
CAFD  02              cstring612 fcb 2
CAFE  5441                    fcc "TA"
CB00  01              cstring75 fcb 1
CB01  64                      fcc "d"
CB02  01              cstring70 fcb 1
CB03  44                      fcc "D"
CB04  01              cstring59 fcb 1
CB05  73                      fcc "s"
CB06  01              cstring43 fcb 1
CB07  71                      fcc "q"
CB08  01              cstring38 fcb 1
CB09  51                      fcc "Q"
CB0A  01              cstring20 fcb 1
CB0B  61                      fcc "a"
CB0C  01              cstring14 fcb 1
CB0D  41                      fcc "A"
CB0E  01              cstring5 fcb 1
CB0F  53                      fcc "S"
CB10  01              cstring0 fcb 1
CB11  09                      fcc $09
0400                  max_free_string equ $0400
00FF                  stringscount                  equ 255
0400                  stringsspace                  equ 1024
00FF                  MAXSTRINGS                    equ stringscount
rzb stringscount*4
rzb stringsspace
rzb stringsspace
                      ; peephole(12): inlined3
                      ;FREE_STRING                   fdb stringsspace
D70E                  COMMONPALETTE
D70E  10001FFF10081EFA1C4C15C01A0017EE136A168D177F1333177716FA1F801BBB         fdb $01000, $01fff, $01008, $01efa, $01c4c, $015c0, $01a00, $017ee, $0136a, $0168d, $0177f, $01333, $01777, $016fa, $01f80,     $01bbb
                              IF (((128+vars2_after-(*+2))|(127-vars2_after+(*+2)))&0x8000)
                              JMP vars2_after
                              ELSE
D72E  2000                    BRA vars2_after
                              ENDIF
                      ; /*****************************************************************************
                      ;  * ugBASIC - an isomorphic BASIC language compiler for retrocomputers        *
                      ;  *****************************************************************************
                      ;  * Copyright 2021-2024 Marco Spedaletti (asimov@mclink.it)
                      ;  *
                      ;  * Licensed under the Apache License, Version 2.0 (the "License");
                      ;  * you may not use this file except in compliance with the License.
                      ;  * You may obtain a copy of the License at
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Unless required by applicable law or agreed to in writing, software
                      ;  * distributed under the License is distributed on an "AS IS" BASIS,
                      ;  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                      ;  * See the License for the specific language governing permissions and
                      ;  * limitations under the License.
                      ;  *----------------------------------------------------------------------------
                      ;  * Concesso in licenza secondo i termini della Licenza Apache, versione 2.0
                      ;  * (la "Licenza"); è proibito usare questo file se non in conformità alla
                      ;  * Licenza. Una copia della Licenza è disponibile all'indirizzo:
                      ;  *
                      ;  * http://www.apache.org/licenses/LICENSE-2.0
                      ;  *
                      ;  * Se non richiesto dalla legislazione vigente o concordato per iscritto,
                      ;  * il software distribuito nei termini della Licenza è distribuito
                      ;  * "COSì COM'è", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO, esplicite o
                      ;  * implicite. Consultare la Licenza per il testo specifico che regola le
                      ;  * autorizzazioni e le limitazioni previste dalla medesima.
                      ;  ****************************************************************************/
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      ;*                                                                             *
                      ;*                   INTERNAL VARIABLES FOR THOMSON TO8                        *
                      ;*                                                                             *
                      ;*                             by Marco Spedaletti                             *
                      ;*                                                                             *
                      ;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                      
D730                  vars2_after
D730                  PC128OPAUDIOSTARTUP
D730  39                      RTS
D731                  DATAPREPARATION
D731  39                      RTS
                      ; peephole: pass 1, 736 changes.
                      ; peephole: pass 2, 117 changes.
                      ; peephole: pass 3, 23 changes.
                      ; peephole: pass 4, 4 changes.
                      ; peephole: pass 5, 0 change.
                      ; peephole: pass 6, 191 vars removed.
                      ; peephole: pass 7, 20 changes.
                      ; peephole: pass 8, 0 change.
                      ; peephole: pass 9, 3 vars removed.
                      ; peephole: pass 10, 0 change.
                      ; peephole: pass 11, 0 var removed.
                      ; peephole: pass 12, 9 vars moved to dp, 83 vars inlined.
